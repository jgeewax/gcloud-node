{"id":"pubsub/iam","type":"class","name":"IAM","overview":"<p>\n  This class allows you interact with Cloud Pub/Sub.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/pubsub</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/pubsub</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/pubsub</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/pubsub</code> are outlined in our <a href=\"#/docs/pubsub/v0.15.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages\\pubsub\\src\\iam.js","parent":"pubsub","children":[],"methods":[{"id":"IAM","name":"IAM","type":"constructor","description":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a> allows you to set permissions on invidual resources and offers a wider range of roles: editor, owner, publisher, subscriber, and viewer. This gives you greater flexibility and allows you to set more fine-grained access control.</p><p>For example:</p><ul> <li>Grant access on a per-topic or per-subscription basis, rather than for the whole Cloud project.</li> <li>Grant access with limited capabilities, such as to only publish messages to a topic, or to only to consume messages from a subscription, but not to delete the topic or subscription.</li> </ul> <p><em>The IAM access control features described in this document are Beta, including the API methods to get and set IAM policies, and to test IAM permissions. Cloud Pub/Sub&#39;s use of IAM features is not covered by any SLA or deprecation policy, and may be subject to backward-incompatible changes.</em></p>","source":"packages\\pubsub\\src\\iam.js#L65","resources":[{"title":"Access Control Overview","link":"https://cloud.google.com/pubsub/access_control"},{"title":"What is Cloud IAM?","link":"https://cloud.google.com/iam/"}],"examples":[{"code":"var topic = pubsub.topic('my-topic');\n// topic.iam\n\nvar subscription = pubsub.subscription('my-subscription');\n// subscription.iam"}],"params":[],"exceptions":[],"returns":[]},{"id":"getPolicy","name":"getPolicy","type":"instance","description":"<p>Get the IAM policy</p>","source":"packages\\pubsub\\src\\iam.js#L97","resources":[{"title":"Topics: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/getIamPolicy"},{"title":"Subscriptions: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/getIamPolicy"}],"examples":[{"code":"topic.iam.getPolicy(function(err, policy, apiResponse) {});\n\nsubscription.iam.getPolicy(function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.getPolicy().then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"gaxOptions","description":"<ul> <li>Request configuration options, outlined here: <a href=\"https://googleapis.github.io/gax-nodejs/CallSettings.html\">https://googleapis.github.io/gax-nodejs/CallSettings.html</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setPolicy","name":"setPolicy","type":"instance","description":"<p>Set the IAM policy</p>","source":"packages\\pubsub\\src\\iam.js#L157","resources":[{"title":"Topics: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/setIamPolicy"},{"title":"Subscriptions: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/setIamPolicy"},{"title":"Policy","link":"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy"}],"examples":[{"code":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});\n\nsubscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.setPolicy(myPolicy).then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"policy.bindings","description":"<ul> <li>Bindings associate members with roles.</li> </ul> ","types":["array"],"optional":true,"nullable":false},{"name":"policy.rules","description":"<ul> <li>Rules to be applied to the policy.</li> </ul> ","types":["object[]"],"optional":true,"nullable":false},{"name":"policy.etag","description":"<ul> <li>Etags are used to perform a read-modify-write.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"gaxOptions","description":"<ul> <li>Request configuration options, outlined here: <a href=\"https://googleapis.github.io/gax-nodejs/CallSettings.html\">https://googleapis.github.io/gax-nodejs/CallSettings.html</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The updated policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no policy is provided.</p>"}],"returns":[]},{"id":"testPermissions","name":"testPermissions","type":"instance","description":"<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>","source":"packages\\pubsub\\src\\iam.js#L237","resources":[{"title":"Topics: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/testIamPermissions"},{"title":"Subscriptions: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/testIamPermissions"},{"title":"Permissions Reference","link":"https://cloud.google.com/pubsub/access_control#permissions"}],"examples":[{"caption":"<p>Test a single permission.</p>","code":"var test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.topics.update\": true\n  // }\n});"},{"caption":"<p>Test several permissions at once.</p>","code":"var tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\nsubscription.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.subscriptions.consume\": true,\n  //   \"pubsub.subscriptions.update\": false\n  // }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.testPermissions(test).then(function(data) {\n  var permissions = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"permissions","description":"<ul> <li>The permission(s) to test for.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"gaxOptions","description":"<ul> <li>Request configuration options, outlined here: <a href=\"https://googleapis.github.io/gax-nodejs/CallSettings.html\">https://googleapis.github.io/gax-nodejs/CallSettings.html</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.permissions","description":"<ul> <li>A subset of permissions that the caller is allowed</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If permissions are not provided.</p>"}],"returns":[]}],"path":"iam.json"}