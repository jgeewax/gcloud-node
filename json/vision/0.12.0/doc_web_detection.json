{"id":"vision/v1/doc/doc_web_detection","type":"class","overview":"<p>\n  This class allows you interact with Cloud Vision.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/vision</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/vision</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/vision</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar vision = require('@google-cloud/vision')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar vision = require('@google-cloud/vision')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/vision</code> are outlined in our <a href=\"#/docs/vision/v0.12.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\vision\\src\\v1\\doc\\doc_web_detection.js","parent":"vision","children":[],"methods":[{"id":"WebDetection","name":"WebDetection","type":"instance","description":"<p>Relevant information for the image from the Internet.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_web_detection.js#L52","resources":[],"examples":[],"params":[{"name":"webEntities","description":"<p> Deduced entities from similar images on the Internet.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WebEntity'\n        })\">WebEntity</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'WebEntity'\n        })\">WebEntity</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"fullMatchingImages","description":"<p> Fully matching images from the Internet.  They&#39;re definite neardups and most often a copy of the query image with  merely a size change.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WebImage'\n        })\">WebImage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'WebImage'\n        })\">WebImage</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"partialMatchingImages","description":"<p> Partial matching images from the Internet.  Those images are similar enough to share some key-point features. For  example an original image will likely have partial matching for its crops.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WebImage'\n        })\">WebImage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'WebImage'\n        })\">WebImage</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"pagesWithMatchingImages","description":"<p> Web pages containing the matching images from the Internet.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WebPage'\n        })\">WebPage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'WebPage'\n        })\">WebPage</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"WebEntity","name":"WebEntity","type":"instance","description":"<p>Entity deduced from similar images on the Internet.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_web_detection.js#L71","resources":[],"examples":[],"params":[{"name":"entityId","description":"<p> Opaque entity ID.</p>","types":["string"],"optional":false,"nullable":false},{"name":"score","description":"<p> Overall relevancy score for the entity.  Not normalized and not comparable across different image queries.</p>","types":["number"],"optional":false,"nullable":false},{"name":"description","description":"<p> Canonical description of the entity, in English.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"WebImage","name":"WebImage","type":"instance","description":"<p>Metadata for online images.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_web_detection.js#L88","resources":[],"examples":[],"params":[{"name":"url","description":"<p> The result image URL.</p>","types":["string"],"optional":false,"nullable":false},{"name":"score","description":"<p> Overall relevancy score for the image.  Not normalized and not comparable across different image queries.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"WebPage","name":"WebPage","type":"instance","description":"<p>Metadata for web pages.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_web_detection.js#L105","resources":[],"examples":[],"params":[{"name":"url","description":"<p> The result web page URL.</p>","types":["string"],"optional":false,"nullable":false},{"name":"score","description":"<p> Overall relevancy score for the web page.  Not normalized and not comparable across different image queries.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_web_detection.json"}