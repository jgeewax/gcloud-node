{"id":"vision/v1/doc/doc_image_annotator","type":"class","overview":"<p>\n  This class allows you interact with Cloud Vision.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/vision</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/vision</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/vision</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar vision = require('@google-cloud/vision')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar vision = require('@google-cloud/vision')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/vision</code> are outlined in our <a href=\"#/docs/vision/v0.12.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js","parent":"vision","children":[],"methods":[{"id":"Feature","name":"Feature","type":"instance","description":"<p>Users describe the type of Google Cloud Vision API tasks to perform over images by using <em>Feature</em>s. Each Feature indicates a type of image detection task to perform. Features encode the Cloud Vision API vertical to operate on and the number of top-scoring results to return.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L39","resources":[],"examples":[],"params":[{"name":"type","description":"<p> The feature type.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Type'\n        })\">Type</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Type'\n        })\">Type</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"maxResults","description":"<p> Maximum number of results of this type.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Type","name":"Type","type":"instance","description":"<p>Type of image feature.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L47","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"ImageSource","name":"ImageSource","type":"instance","description":"<p>External image source (Google Cloud Storage image location).</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L133","resources":[],"examples":[],"params":[{"name":"gcsImageUri","description":"<p> NOTE: For new code <code>image_uri</code> below is preferred.  Google Cloud Storage image URI, which must be in the following form:  <code>gs://bucket_name/object_name</code> (for details, see  <a href=\"https://cloud.google.com/storage/docs/reference-uris\">Google Cloud Storage Request  URIs</a>).  NOTE: Cloud Storage object versioning is not supported.</p>","types":["string"],"optional":false,"nullable":false},{"name":"imageUri","description":"<p> Image URI which supports:  1) Google Cloud Storage image URI, which must be in the following form:  <code>gs://bucket_name/object_name</code> (for details, see  <a href=\"https://cloud.google.com/storage/docs/reference-uris\">Google Cloud Storage Request  URIs</a>).  NOTE: Cloud Storage object versioning is not supported.  2) Publicly accessible image HTTP/HTTPS URL.  This is preferred over the legacy <code>gcs_image_uri</code> above. When both  <code>gcs_image_uri</code> and <code>image_uri</code> are specified, <code>image_uri</code> takes  precedence.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Image","name":"Image","type":"instance","description":"<p>Client image to perform Google Cloud Vision API tasks over.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L155","resources":[],"examples":[],"params":[{"name":"content","description":"<p> Image content, represented as a stream of bytes.  Note: as with all <code>bytes</code> fields, protobuffers use a pure binary  representation, whereas JSON representations use base64.</p>","types":["string"],"optional":false,"nullable":false},{"name":"source","description":"<p> Google Cloud Storage image location. If both <code>content</code> and <code>source</code>  are provided for an image, <code>content</code> takes precedence and is  used to perform the image annotation request.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ImageSource'\n        })\">ImageSource</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ImageSource'\n        })\">ImageSource</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"FaceAnnotation","name":"FaceAnnotation","type":"instance","description":"<p>A face annotation object contains the results of face detection.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L246","resources":[],"examples":[],"params":[{"name":"boundingPoly","description":"<p> The bounding polygon around the face. The coordinates of the bounding box  are in the original image&#39;s scale, as returned in <code>ImageParams</code>.  The bounding box is computed to &quot;frame&quot; the face in accordance with human  expectations. It is based on the landmarker results.  Note that one or more x and/or y coordinates may not be generated in the  <code>BoundingPoly</code> (the polygon will be unbounded) if only a partial face  appears in the image to be annotated.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"fdBoundingPoly","description":"<p> The <code>fd_bounding_poly</code> bounding polygon is tighter than the  <code>boundingPoly</code>, and encloses only the skin part of the face. Typically, it  is used to eliminate the face from any image analysis that detects the  &quot;amount of skin&quot; visible in an image. It is not based on the  landmarker results, only on the initial face detection, hence  the <code>fd</code> (face detection) prefix.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"landmarks","description":"<p> Detected face landmarks.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Landmark'\n        })\">Landmark</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Landmark'\n        })\">Landmark</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"rollAngle","description":"<p> Roll angle, which indicates the amount of clockwise/anti-clockwise rotation  of the face relative to the image vertical about the axis perpendicular to  the face. Range [-180,180].</p>","types":["number"],"optional":false,"nullable":false},{"name":"panAngle","description":"<p> Yaw angle, which indicates the leftward/rightward angle that the face is  pointing relative to the vertical plane perpendicular to the image. Range  [-180,180].</p>","types":["number"],"optional":false,"nullable":false},{"name":"tiltAngle","description":"<p> Pitch angle, which indicates the upwards/downwards angle that the face is  pointing relative to the image&#39;s horizontal plane. Range [-180,180].</p>","types":["number"],"optional":false,"nullable":false},{"name":"detectionConfidence","description":"<p> Detection confidence. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"landmarkingConfidence","description":"<p> Face landmarking confidence. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"joyLikelihood","description":"<p> Joy likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"sorrowLikelihood","description":"<p> Sorrow likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"angerLikelihood","description":"<p> Anger likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"surpriseLikelihood","description":"<p> Surprise likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"underExposedLikelihood","description":"<p> Under-exposed likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"blurredLikelihood","description":"<p> Blurred likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"headwearLikelihood","description":"<p> Headwear likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Landmark","name":"Landmark","type":"instance","description":"<p>A face-specific landmark (for example, a face feature). Landmark positions may fall outside the bounds of the image if the face is near one or more edges of the image. Therefore it is NOT guaranteed that <code>0 &lt;= x &lt; width</code> or <code>0 &lt;= y &lt; height</code>.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L269","resources":[],"examples":[],"params":[{"name":"type","description":"<p> Face landmark type.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Type'\n        })\">Type</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Type'\n        })\">Type</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"position","description":"<p> Face landmark position.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Position'\n        })\">Position</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Position'\n        })\">Position</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"LocationInfo","name":"LocationInfo","type":"instance","description":"<p>Detected entity location information.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L471","resources":[],"examples":[],"params":[{"name":"latLng","description":"<p> lat/long location coordinates.</p><p> This object should have the same structure as google.type.LatLng</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Property","name":"Property","type":"instance","description":"<p>A <code>Property</code> consists of a user-supplied name/value pair.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L487","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Name of the property.</p>","types":["string"],"optional":false,"nullable":false},{"name":"value","description":"<p> Value of the property.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"EntityAnnotation","name":"EntityAnnotation","type":"instance","description":"<p>Set of detected entity features.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L547","resources":[],"examples":[],"params":[{"name":"mid","description":"<p> Opaque entity ID. Some IDs may be available in  <a href=\"https://developers.google.com/knowledge-graph/\">Google Knowledge Graph Search API</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"locale","description":"<p> The language code for the locale in which the entity textual  <code>description</code> is expressed.</p>","types":["string"],"optional":false,"nullable":false},{"name":"description","description":"<p> Entity textual description, expressed in its <code>locale</code> language.</p>","types":["string"],"optional":false,"nullable":false},{"name":"score","description":"<p> Overall score of the result. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"confidence","description":"<p> The accuracy of the entity detection in an image.  For example, for an image in which the &quot;Eiffel Tower&quot; entity is detected,  this field represents the confidence that there is a tower in the query  image. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"topicality","description":"<p> The relevancy of the ICA (Image Content Annotation) label to the  image. For example, the relevancy of &quot;tower&quot; is likely higher to an image  containing the detected &quot;Eiffel Tower&quot; than to an image containing a  detected distant towering building, even though the confidence that  there is a tower in each image may be the same. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"boundingPoly","description":"<p> Image region to which this entity belongs. Currently not produced  for <code>LABEL_DETECTION</code> features. For <code>TEXT_DETECTION</code> (OCR), <code>boundingPoly</code>s  are produced for the entire text detected in an image region, followed by  <code>boundingPoly</code>s for each word within the detected text.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"locations","description":"<p> The location information for the detected entity. Multiple  <code>LocationInfo</code> elements can be present because one location may  indicate the location of the scene in the image, and another location  may indicate the location of the place where the image was taken.  Location information is usually present for landmarks.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LocationInfo'\n        })\">LocationInfo</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'LocationInfo'\n        })\">LocationInfo</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"properties","description":"<p> Some entities may have optional user-supplied <code>Property</code> (name/value)  fields, such a score or string that qualifies the entity.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Property'\n        })\">Property</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Property'\n        })\">Property</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"SafeSearchAnnotation","name":"SafeSearchAnnotation","type":"instance","description":"<p>Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L581","resources":[],"examples":[],"params":[{"name":"adult","description":"<p> Represents the adult content likelihood for the image.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"spoof","description":"<p> Spoof likelihood. The likelihood that an modification  was made to the image&#39;s canonical version to make it appear  funny or offensive.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"medical","description":"<p> Likelihood that this is a medical image.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"violence","description":"<p> Violence likelihood.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Likelihood'\n        })\">Likelihood</a></p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"LatLongRect","name":"LatLongRect","type":"instance","description":"<p>Rectangle determined by min and max <code>LatLng</code> pairs.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L601","resources":[],"examples":[],"params":[{"name":"minLatLng","description":"<p> Min lat/long pair.</p><p> This object should have the same structure as google.type.LatLng</p>","types":["Object"],"optional":false,"nullable":false},{"name":"maxLatLng","description":"<p> Max lat/long pair.</p><p> This object should have the same structure as google.type.LatLng</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ColorInfo","name":"ColorInfo","type":"instance","description":"<p>Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L624","resources":[],"examples":[],"params":[{"name":"color","description":"<p> RGB components of the color.</p><p> This object should have the same structure as google.type.Color</p>","types":["Object"],"optional":false,"nullable":false},{"name":"score","description":"<p> Image-specific score for this color. Value in range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"pixelFraction","description":"<p> The fraction of pixels the color occupies in the image.  Value in range [0, 1].</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DominantColorsAnnotation","name":"DominantColorsAnnotation","type":"instance","description":"<p>Set of dominant colors and their corresponding scores.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L639","resources":[],"examples":[],"params":[{"name":"colors","description":"<p> RGB color values with their score and pixel fraction.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ColorInfo'\n        })\">ColorInfo</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ColorInfo'\n        })\">ColorInfo</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ImageProperties","name":"ImageProperties","type":"instance","description":"<p>Stores image properties, such as dominant colors.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L654","resources":[],"examples":[],"params":[{"name":"dominantColors","description":"<p> If present, dominant colors completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'DominantColorsAnnotation'\n        })\">DominantColorsAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'DominantColorsAnnotation'\n        })\">DominantColorsAnnotation</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CropHint","name":"CropHint","type":"instance","description":"<p>Single crop hint that is used to generate a new crop when serving an image.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L677","resources":[],"examples":[],"params":[{"name":"boundingPoly","description":"<p> The bounding polygon for the crop region. The coordinates of the bounding  box are in the original image&#39;s scale, as returned in <code>ImageParams</code>.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'BoundingPoly'\n        })\">BoundingPoly</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"confidence","description":"<p> Confidence of this being a salient region. Range [0, 1].</p>","types":["number"],"optional":false,"nullable":false},{"name":"importanceFraction","description":"<p> Fraction of importance of this salient region with respect to the original  image.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CropHintsAnnotation","name":"CropHintsAnnotation","type":"instance","description":"<p>Set of crop hints that are used to generate new crops when serving images.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L690","resources":[],"examples":[],"params":[{"name":"cropHints","description":"<p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'CropHint'\n        })\">CropHint</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'CropHint'\n        })\">CropHint</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CropHintsParams","name":"CropHintsParams","type":"instance","description":"<p>Parameters for crop hints annotation request.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L708","resources":[],"examples":[],"params":[{"name":"aspectRatios","description":"<p> Aspect ratios in floats, representing the ratio of the width to the height  of the image. For example, if the desired aspect ratio is 4/3, the  corresponding float value should be 1.33333. If not specified, the  best possible crop is returned. The number of provided aspect ratios is  limited to a maximum of 16; any aspect ratios provided after the 16th are  ignored.</p>","types":["number[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ImageContext","name":"ImageContext","type":"instance","description":"<p>Image context and/or feature-specific parameters.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L738","resources":[],"examples":[],"params":[{"name":"latLongRect","description":"<p> lat/long rectangle that specifies the location of the image.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LatLongRect'\n        })\">LatLongRect</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'LatLongRect'\n        })\">LatLongRect</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"languageHints","description":"<p> List of languages to use for TEXT_DETECTION. In most cases, an empty value  yields the best results since it enables automatic language detection. For  languages based on the Latin alphabet, setting <code>language_hints</code> is not  needed. In rare cases, when the language of the text in the image is known,  setting a hint will help get better results (although it will be a  significant hindrance if the hint is wrong). Text detection returns an  error if one or more of the specified languages is not one of the  <a href=\"https://cloud.google.com/vision/docs/languages\">supported languages</a>.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"cropHintsParams","description":"<p> Parameters for crop hints annotation request.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'CropHintsParams'\n        })\">CropHintsParams</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'CropHintsParams'\n        })\">CropHintsParams</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"AnnotateImageRequest","name":"AnnotateImageRequest","type":"instance","description":"","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L764","resources":[],"examples":[],"params":[{"name":"image","description":"<p> The image to be processed.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Image'\n        })\">Image</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Image'\n        })\">Image</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"features","description":"<p> Requested features.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Feature'\n        })\">Feature</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Feature'\n        })\">Feature</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"imageContext","description":"<p> Additional context that may accompany the image.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ImageContext'\n        })\">ImageContext</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ImageContext'\n        })\">ImageContext</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"AnnotateImageResponse","name":"AnnotateImageResponse","type":"instance","description":"","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L835","resources":[],"examples":[],"params":[{"name":"faceAnnotations","description":"<p> If present, face detection has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'FaceAnnotation'\n        })\">FaceAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'FaceAnnotation'\n        })\">FaceAnnotation</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"landmarkAnnotations","description":"<p> If present, landmark detection has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"logoAnnotations","description":"<p> If present, logo detection has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"labelAnnotations","description":"<p> If present, label detection has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"textAnnotations","description":"<p> If present, text (OCR) detection or document (OCR) text detection has  completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'EntityAnnotation'\n        })\">EntityAnnotation</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"fullTextAnnotation","description":"<p> If present, text (OCR) detection or document (OCR) text detection has  completed successfully.  This annotation provides the structural hierarchy for the OCR detected  text.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TextAnnotation'\n        })\">TextAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TextAnnotation'\n        })\">TextAnnotation</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"safeSearchAnnotation","description":"<p> If present, safe-search annotation has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'SafeSearchAnnotation'\n        })\">SafeSearchAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'SafeSearchAnnotation'\n        })\">SafeSearchAnnotation</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"imagePropertiesAnnotation","description":"<p> If present, image properties were extracted successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ImageProperties'\n        })\">ImageProperties</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ImageProperties'\n        })\">ImageProperties</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"cropHintsAnnotation","description":"<p> If present, crop hints have completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'CropHintsAnnotation'\n        })\">CropHintsAnnotation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'CropHintsAnnotation'\n        })\">CropHintsAnnotation</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"webDetection","description":"<p> If present, web detection has completed successfully.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WebDetection'\n        })\">WebDetection</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'WebDetection'\n        })\">WebDetection</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"error","description":"<p> If set, represents the error message for the operation.  Note that filled-in image annotations are guaranteed to be  correct, even when <code>error</code> is set.</p><p> This object should have the same structure as google.rpc.Status</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"BatchAnnotateImagesRequest","name":"BatchAnnotateImagesRequest","type":"instance","description":"","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L850","resources":[],"examples":[],"params":[{"name":"requests","description":"<p> Individual image annotation requests for this batch.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'AnnotateImageRequest'\n        })\">AnnotateImageRequest</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'AnnotateImageRequest'\n        })\">AnnotateImageRequest</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"BatchAnnotateImagesResponse","name":"BatchAnnotateImagesResponse","type":"instance","description":"","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L865","resources":[],"examples":[],"params":[{"name":"responses","description":"<p> Individual responses to image annotation requests within the batch.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'AnnotateImageResponse'\n        })\">AnnotateImageResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'AnnotateImageResponse'\n        })\">AnnotateImageResponse</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Likelihood","name":"Likelihood","type":"instance","description":"<p>A bucketized representation of likelihood, which is intended to give clients highly stable results across model upgrades.</p>","source":"packages\\vision\\src\\v1\\doc\\doc_image_annotator.js#L875","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}],"path":"doc_image_annotator.json"}