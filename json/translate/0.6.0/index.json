{"id":"translate","type":"class","name":"Translate","overview":"<p>\n  This class allows you interact with Google Translate API.\n</p>\n\n<p>\n  First, install <code>@google-cloud/translate</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/translate</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/translate</code>— we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Compute Engine</h4>\n<div hljs language=\"javascript\">\nvar translate = require('@google-cloud/translate')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar translate = require('@google-cloud/translate')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/translate</code> are outlined in our <a href=\"#/docs/translate/0.6.0/guides/authentication\">Authentication guide</a>.\n</p>\n\n","description":"","source":"packages/translate/src/index.js","parent":null,"children":[],"methods":[{"id":"Translate","name":"Translate","type":"constructor","description":"<p>With <a href=\"https://cloud.google.com/translate\">Google Translate</a>, you can dynamically translate text between thousands of language pairs.</p><p>The Google Translate API lets websites and programs integrate with Google Translate programmatically.</p>","source":"packages/translate/src/index.js#L57","resources":[{"title":"Getting Started","link":"https://cloud.google.com/translate/v2/getting_started"},{"title":"Identifying your application to Google","link":"https://cloud.google.com/translate/v2/using_rest#auth"}],"examples":[{"caption":"<p><h3>Custom Translate API</h3> \nThe environment variable, <code>GOOGLE_CLOUD_TRANSLATE_ENDPOINT</code>, is honored as \na custom backend which our library will send requests to.</p>"}],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"options.key","description":"<ul> <li>An API key.</li> </ul> ","types":["string"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detect","name":"detect","type":"instance","description":"<p>Detect the language used in a string or multiple strings.</p>","source":"packages/translate/src/index.js#L153","resources":[{"title":"Detect Language","link":"https://cloud.google.com/translate/v2/using_rest#detect-language"}],"examples":[{"caption":"<p>Detect the language from a single string input.</p>","code":"translate.detect('Hello', function(err, results) {\n  if (!err) {\n    // results = {\n    //   language: 'en',\n    //   confidence: 1,\n    //   input: 'Hello'\n    // }\n  }\n});"},{"caption":"<p>Detect the languages used in multiple strings. Note that the results are \nnow provied as an array.</p>","code":"translate.detect([\n  'Hello',\n  'Hola'\n], function(err, results) {\n  if (!err) {\n    // results = [\n    //   {\n    //     language: 'en',\n    //     confidence: 1,\n    //     input: 'Hello'\n    //   },\n    //   {\n    //     language: 'es',\n    //     confidence: 1,\n    //     input: 'Hola'\n    //   }\n    // ]\n  }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"translate.detect('Hello').then(function(data) {\n  var results = data[0];\n  var apiResponse = data[2];\n});"}],"params":[{"name":"input","description":"<ul> <li>The source string input.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.results","description":"<ul> <li>If a single string input was given, a single result object is given. Otherwise, it is an array of  result objects.</li> </ul> ","types":["object","object[]"],"optional":false,"nullable":false},{"name":"callback.results[].language","description":"<ul> <li>The language code matched from the input.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.results[].confidence","description":"<ul> <li>A float 0 - 1. The higher the number, the higher the confidence in language detection. Note, this  is not always returned from the API.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>Raw API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getLanguages","name":"getLanguages","type":"instance","description":"<p>Get an array of all supported languages.</p>","source":"packages/translate/src/index.js#L256","resources":[{"title":"Discovering Supported Languages","link":"https://cloud.google.com/translate/v2/discovering-supported-languages-with-rest"}],"examples":[{"code":"translate.getLanguages(function(err, languages) {\n  if (!err) {\n    // languages = [\n    //   {\n    //     code: 'af',\n    //     name: 'Afrikaans'\n    //   },\n    //   {\n    //     code: 'ar',\n    //     name: 'Arabic'\n    //   },\n    //   {\n    //     code: 'az',\n    //     name: 'Azerbaijani'\n    //   },\n    //   ...\n    // ]\n  }\n});"},{"caption":"<p>Get the language names in a language other than English.</p>","code":"translate.getLanguages('es', function(err, languages) {\n  if (!err) {\n    // languages = [\n    //   {\n    //     code: 'af',\n    //     name: 'afrikáans'\n    //   },\n    //   {\n    //     code: 'ar',\n    //     name: 'árabe'\n    //   },\n    //   {\n    //     code: 'az',\n    //     name: 'azerí'\n    //   },\n    //   ...\n    // ]\n  }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"translate.getLanguages().then(function(data) {\n  var languages = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"target","description":"<ul> <li>Get the language names in a language other than English.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.languages","description":"<ul> <li>The languages supported by the API.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.languages[].code","description":"<ul> <li>The <a href=\"https://en.wikipedia.org/wiki/ISO_639-1\">ISO 639-1</a> language code.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.languages[].name","description":"<ul> <li>The language name. This can be translated into your preferred language with the <code>target</code> option  described above.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>Raw API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"translate","name":"translate","type":"instance","description":"<p>Translate a string or multiple strings into another language.</p>","source":"packages/translate/src/index.js#L370","resources":[{}],"examples":[{"caption":"<p>Pass a string and a language code to get the translation.</p>","code":"translate.translate('Hello', 'es', function(err, translation) {\n  if (!err) {\n    // translation = 'Hola'\n  }\n});"},{"caption":"<p>The source language is auto-detected by default. To manually set it, \nprovide an object.</p>","code":"var options = {\n  from: 'en',\n  to: 'es'\n};\n\ntranslate.translate('Hello', options, function(err, translation) {\n  if (!err) {\n    // translation = 'Hola'\n  }\n});"},{"caption":"<p>Translate multiple strings of input. Note that the results are \nnow provied as an array.</p>","code":"var input = [\n  'Hello',\n  'How are you today?'\n];\n\ntranslate.translate(input, 'es', function(err, translations) {\n  if (!err) {\n    // translations = [\n    //   'Hola',\n    //   'Como estas hoy?'\n    // ]\n  }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"translate.translate('Hello', 'es').then(function(data) {\n  var translation = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"input","description":"<ul> <li>The source string input.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>If a string, it is interpreted as the target ISO 639-1 language code to translate the source input to. (e.g.  <code>en</code> for English). If an object, you may also specify the source  language.</li> </ul> ","types":["string","object"],"optional":true,"nullable":false},{"name":"options.format","description":"<ul> <li>Set the text&#39;s format as <code>html</code> or <code>text</code>. If not provided, we will try to auto-detect if the text given is HTML. If  not, we set the format as <code>text</code>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.from","description":"<ul> <li>The ISO 639-1 language code the source input is written in.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.model","description":"<ul> <li><strong>Note:</strong> Users must be whitelisted to use this parameter. Set the model type requested for this translation. Please  refer to the upstream documentation for possible values.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.to","description":"<ul> <li>The ISO 639-1 language code to translate the input to.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.translations","description":"<ul> <li>If a single string input was given, a single translation is given. Otherwise, it is an array of  translations.</li> </ul> ","types":["object","object[]"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>Raw API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If <code>options</code> is provided as an object without a <code>to</code> property.</p>"}],"returns":[]}],"path":"index.json"}