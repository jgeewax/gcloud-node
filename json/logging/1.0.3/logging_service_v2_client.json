{"id":"logging/v2/logging_service_v2_client","type":"class","overview":"<p>\n  This class allows you interact with Stackdriver Logging.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/logging</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/logging</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/logging</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar logging = require('@google-cloud/logging')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar logging = require('@google-cloud/logging')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/logging</code> are outlined in our <a href=\"#/docs/logging/v1.0.3/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js","parent":"logging","children":[],"methods":[{"id":"LoggingServiceV2Client","name":"LoggingServiceV2Client","type":"constructor","description":"<p>Service for ingesting and querying logs.</p><p>This will be created through a builder function which can be obtained by the module. See the following example of how to initialize the module and how to access to the builder.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L82","resources":[],"examples":[{"code":"var loggingV2 = require('@google-cloud/logging').v2({\n  // optional auth parameters.\n});\nvar client = loggingV2.loggingServiceV2Client();"}],"params":[],"exceptions":[],"returns":[]},{"id":"projectPath","name":"projectPath","type":"instance","description":"<p>Returns a fully-qualified project resource name string.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L158","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromProjectName","name":"matchProjectFromProjectName","type":"instance","description":"<p>Parses the projectName from a project resource.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L170","resources":[],"examples":[],"params":[{"name":"projectName","description":"<p> A fully-qualified path representing a project resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"logPath","name":"logPath","type":"instance","description":"<p>Returns a fully-qualified log resource name string.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L180","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"log","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromLogName","name":"matchProjectFromLogName","type":"instance","description":"<p>Parses the logName from a log resource.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L193","resources":[],"examples":[],"params":[{"name":"logName","description":"<p> A fully-qualified path representing a log resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchLogFromLogName","name":"matchLogFromLogName","type":"instance","description":"<p>Parses the logName from a log resource.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L203","resources":[],"examples":[],"params":[{"name":"logName","description":"<p> A fully-qualified path representing a log resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L212","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"deleteLog","name":"deleteLog","type":"instance","description":"<p>Deletes all the log entries in a log. The log reappears if it receives new entries.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L251","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar formattedLogName = client.logPath(\"[PROJECT]\", \"[LOG]\");\nclient.deleteLog({logName: formattedLogName}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.logName","description":"<p> Required. The resource name of the log to delete:</p><pre><code> &quot;projects/[PROJECT_ID]/logs/[LOG_ID]&quot; &quot;organizations/[ORGANIZATION_ID]/logs/[LOG_ID]&quot; </code></pre><p> <code>[LOG_ID]</code> must be URL-encoded. For example,  <code>&quot;projects/my-project-id/logs/syslog&quot;</code>,  <code>&quot;organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity&quot;</code>.  For more information about log names, see  {@link LogEntry}.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"writeLogEntries","name":"writeLogEntries","type":"instance","description":"<p>Writes log entries to Stackdriver Logging. All log entries are written by this method.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L337","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar entries = [];\nclient.writeLogEntries({entries: entries}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.entries","description":"<p> Required. The log entries to write. Values supplied for the fields  <code>log_name</code>, <code>resource</code>, and <code>labels</code> in this <code>entries.write</code> request are  added to those log entries that do not provide their own values for the  fields.</p><p> To improve throughput and to avoid exceeding the  <a href=\"https://cloud.google.com/logging/quota-policy\">quota limit</a> for calls to <code>entries.write</code>,  you should write multiple log entries at once rather than  calling this method for each individual log entry.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogEntry'\n        })\">LogEntry</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"request.logName","description":"<p> Optional. A default log resource name that is assigned to all log entries  in <code>entries</code> that do not specify a value for <code>log_name</code>:</p><pre><code> &quot;projects/[PROJECT_ID]/logs/[LOG_ID]&quot; &quot;organizations/[ORGANIZATION_ID]/logs/[LOG_ID]&quot; </code></pre><p> <code>[LOG_ID]</code> must be URL-encoded. For example,  <code>&quot;projects/my-project-id/logs/syslog&quot;</code> or  <code>&quot;organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity&quot;</code>.  For more information about log names, see  {@link LogEntry}.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.resource","description":"<p> Optional. A default monitored resource object that is assigned to all log  entries in <code>entries</code> that do not specify a value for <code>resource</code>. Example:</p><pre><code> { &quot;type&quot;: &quot;gce_instance&quot;, &quot;labels&quot;: { &quot;zone&quot;: &quot;us-central1-a&quot;, &quot;instance_id&quot;: &quot;00000000000000000000&quot; }} </code></pre><p> See {@link LogEntry}.</p><p> This object should have the same structure as google.api.MonitoredResource</p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.labels","description":"<p> Optional. Default labels that are added to the <code>labels</code> field of all log  entries in <code>entries</code>. If a log entry already has a label with the same key  as a label in this parameter, then the log entry&#39;s label is not changed.  See {@link LogEntry}.</p>","types":["Object.<string, string>"],"optional":true,"nullable":false},{"name":"request.partialSuccess","description":"<p> Optional. Whether valid entries should be written even if some other  entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any  entry is not written, the response status will be the error associated  with one of the failed entries and include error details in the form of  WriteLogEntriesPartialErrors.</p>","types":["boolean"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WriteLogEntriesResponse'\n        })\">WriteLogEntriesResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'WriteLogEntriesResponse'\n        })\">WriteLogEntriesResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listLogEntries","name":"listLogEntries","type":"instance","description":"<p>Lists log entries. Use this method to retrieve log entries from Stackdriver Logging. For ways to export log entries, see <a href=\"https://cloud.google.com/logging/docs/export\">Exporting Logs</a>.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L451","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar resourceNames = [];\n// Iterate over all elements.\nclient.listLogEntries({resourceNames: resourceNames}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listLogEntries(nextRequest, options).then(callback);\n    }\n}\nclient.listLogEntries({resourceNames: resourceNames}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.resourceNames","description":"<p> Required. Names of one or more resources from which to retrieve log  entries:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; </code></pre><p> Projects listed in the <code>project_ids</code> field are added to this list.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"request.projectIds","description":"<p> Deprecated. Use <code>resource_names</code> instead. One or more project identifiers  or project numbers from which to retrieve log entries. Example:  <code>&quot;my-project-1A&quot;</code>. If present, these project identifiers are converted to  resource name format and added to the list of resources in  <code>resource_names</code>.</p>","types":["string[]"],"optional":true,"nullable":false},{"name":"request.filter","description":"<p> Optional. A filter that chooses which log entries to return. See <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">Advanced  Logs Filters</a>. Only log entries that  match the filter are returned. An empty filter matches all log entries in  the resources listed in <code>resource_names</code>. Referencing a parent resource  that is not listed in <code>resource_names</code> will cause the filter to return no  results.  The maximum length of the filter is 20000 characters.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.orderBy","description":"<p> Optional. How the results should be sorted. Presently, the only permitted  values are <code>&quot;timestamp asc&quot;</code> (default) and <code>&quot;timestamp desc&quot;</code>. The first  option returns entries in order of increasing values of  <code>LogEntry.timestamp</code> (oldest first), and the second option returns entries  in order of decreasing timestamps (newest first). Entries with equal  timestamps are returned in order of <code>LogEntry.insertId</code>.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogEntry'\n        })\">LogEntry</a>.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogEntriesResponse'\n        })\">ListLogEntriesResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogEntry'\n        })\">LogEntry</a>.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogEntry'\n        })\">LogEntry</a> in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogEntriesResponse'\n        })\">ListLogEntriesResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listLogEntriesStream","name":"listLogEntriesStream","type":"instance","description":"<p>Equivalent to {@link listLogEntries}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listLogEntries} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L529","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar resourceNames = [];\nclient.listLogEntriesStream({resourceNames: resourceNames}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.resourceNames","description":"<p> Required. Names of one or more resources from which to retrieve log  entries:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; </code></pre><p> Projects listed in the <code>project_ids</code> field are added to this list.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"request.projectIds","description":"<p> Deprecated. Use <code>resource_names</code> instead. One or more project identifiers  or project numbers from which to retrieve log entries. Example:  <code>&quot;my-project-1A&quot;</code>. If present, these project identifiers are converted to  resource name format and added to the list of resources in  <code>resource_names</code>.</p>","types":["string[]"],"optional":true,"nullable":false},{"name":"request.filter","description":"<p> Optional. A filter that chooses which log entries to return. See <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">Advanced  Logs Filters</a>. Only log entries that  match the filter are returned. An empty filter matches all log entries in  the resources listed in <code>resource_names</code>. Referencing a parent resource  that is not listed in <code>resource_names</code> will cause the filter to return no  results.  The maximum length of the filter is 20000 characters.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.orderBy","description":"<p> Optional. How the results should be sorted. Presently, the only permitted  values are <code>&quot;timestamp asc&quot;</code> (default) and <code>&quot;timestamp desc&quot;</code>. The first  option returns entries in order of increasing values of  <code>LogEntry.timestamp</code> (oldest first), and the second option returns entries  in order of decreasing timestamps (newest first). Entries with equal  timestamps are returned in order of <code>LogEntry.insertId</code>.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogEntry'\n        })\">LogEntry</a> on &#39;data&#39; event.</p>"}]},{"id":"listMonitoredResourceDescriptors","name":"listMonitoredResourceDescriptors","type":"instance","description":"<p>Lists the descriptors for monitored resource types used by Stackdriver Logging.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L609","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\n\n// Iterate over all elements.\nclient.listMonitoredResourceDescriptors({}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listMonitoredResourceDescriptors(nextRequest, options).then(callback);\n    }\n}\nclient.listMonitoredResourceDescriptors({}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of google.api.MonitoredResourceDescriptor.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of google.api.MonitoredResourceDescriptor.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of google.api.MonitoredResourceDescriptor in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listMonitoredResourceDescriptorsStream","name":"listMonitoredResourceDescriptorsStream","type":"instance","description":"<p>Equivalent to {@link listMonitoredResourceDescriptors}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listMonitoredResourceDescriptors} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L658","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\n\nclient.listMonitoredResourceDescriptorsStream({}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing google.api.MonitoredResourceDescriptor on &#39;data&#39; event.</p>"}]},{"id":"listLogs","name":"listLogs","type":"instance","description":"<p>Lists the logs in projects or organizations. Only logs that have entries are listed.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L743","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar formattedParent = client.projectPath(\"[PROJECT]\");\n// Iterate over all elements.\nclient.listLogs({parent: formattedParent}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listLogs(nextRequest, options).then(callback);\n    }\n}\nclient.listLogs({parent: formattedParent}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.parent","description":"<p> Required. The resource name that owns the logs:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of string.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogsResponse'\n        })\">ListLogsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of string.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of string in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogsResponse'\n        })\">ListLogsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listLogsStream","name":"listLogsStream","type":"instance","description":"<p>Equivalent to {@link listLogs}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listLogs} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L797","resources":[],"examples":[{"code":"\nvar client = loggingV2.loggingServiceV2Client();\nvar formattedParent = client.projectPath(\"[PROJECT]\");\nclient.listLogsStream({parent: formattedParent}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.parent","description":"<p> Required. The resource name that owns the logs:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits a string on &#39;data&#39; event.</p>"}]},{"id":"loggingServiceV2Client","name":"loggingServiceV2Client","type":"instance","description":"<p>Build a new instance of {@link LoggingServiceV2Client}.</p>","source":"packages\\logging\\src\\v2\\logging_service_v2_client.js#L831","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"logging_service_v2_client.json"}