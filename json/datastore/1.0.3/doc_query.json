{"id":"datastore/v1/doc/doc_query","type":"class","overview":"<p>\n  This class allows you interact with Cloud Datastore.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/datastore</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/datastore</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/datastore</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar datastore = require('@google-cloud/datastore')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar datastore = require('@google-cloud/datastore')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/datastore</code> are outlined in our <a href=\"#/docs/datastore/v1.0.3/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js","parent":"datastore","children":[],"methods":[{"id":"EntityResult","name":"EntityResult","type":"instance","description":"<p>The result of fetching an entity from Datastore.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L48","resources":[],"examples":[],"params":[{"name":"entity","description":"<p> The resulting entity.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Entity'\n        })\">Entity</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"version","description":"<p> The version of the entity, a strictly positive number that monotonically  increases with changes to the entity.</p><p> This field is set for {@link <code>FULL</code>} entity  results.</p><p> For {@link missing} entities in <code>LookupResponse</code>, this  is the version of the snapshot that was used to look up the entity, and it  is always set except for eventually consistent reads.</p>","types":["number"],"optional":false,"nullable":false},{"name":"cursor","description":"<p> A cursor that points to the position after the result entity.  Set only when the <code>EntityResult</code> is part of a <code>QueryResultBatch</code> message.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ResultType","name":"ResultType","type":"instance","description":"<p>Specifies what data the &#39;entity&#39; field contains. A <code>ResultType</code> is either implied (for example, in <code>LookupResponse.missing</code> from <code>datastore.proto</code>, it is always <code>KEY_ONLY</code>) or specified by context (for example, in message <code>QueryResultBatch</code>, field <code>entity_result_type</code> specifies a <code>ResultType</code> for all the values in field <code>entity_results</code>).</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L60","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"Query","name":"Query","type":"instance","description":"<p>A query for entities.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L140","resources":[],"examples":[],"params":[{"name":"projection","description":"<p> The projection to return. Defaults to returning all properties.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Projection'\n        })\">Projection</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"kind","description":"<p> The kinds to query (if empty, returns entities of all kinds).  Currently at most 1 kind may be specified.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'KindExpression'\n        })\">KindExpression</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"filter","description":"<p> The filter to apply.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Filter'\n        })\">Filter</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"order","description":"<p> The order to apply to the query results (if empty, order is unspecified).</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyOrder'\n        })\">PropertyOrder</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"distinctOn","description":"<p> The properties to make distinct. The query results will contain the first  result for each distinct combination of values for the given properties  (if empty, all results are returned).</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyReference'\n        })\">PropertyReference</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"startCursor","description":"<p> A starting point for the query results. Query cursors are  returned in query result batches and  <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets\">can only be used to continue the same query</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"endCursor","description":"<p> An ending point for the query results. Query cursors are  returned in query result batches and  <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets\">can only be used to limit the same query</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"offset","description":"<p> The number of results to skip. Applies before limit, but after all other  constraints. Optional. Must be &gt;= 0 if specified.</p>","types":["number"],"optional":false,"nullable":false},{"name":"limit","description":"<p> The maximum number of results to return. Applies after all other  constraints. Optional.  Unspecified is interpreted as no limit.  Must be &gt;= 0 if specified.</p><p> This object should have the same structure as google.protobuf.Int32Value</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"KindExpression","name":"KindExpression","type":"instance","description":"<p>A representation of a kind.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L153","resources":[],"examples":[],"params":[{"name":"name","description":"<p> The name of the kind.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PropertyReference","name":"PropertyReference","type":"instance","description":"<p>A reference to a property relative to the kind expressions.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L167","resources":[],"examples":[],"params":[{"name":"name","description":"<p> The name of the property.  If name includes &quot;.&quot;s, it may be interpreted as a property name path.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Projection","name":"Projection","type":"instance","description":"<p>A representation of a property in a projection.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L182","resources":[],"examples":[],"params":[{"name":"property","description":"<p> The property to project.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyReference'\n        })\">PropertyReference</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PropertyOrder","name":"PropertyOrder","type":"instance","description":"<p>The desired order for a specific property.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L202","resources":[],"examples":[],"params":[{"name":"property","description":"<p> The property to order by.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyReference'\n        })\">PropertyReference</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"direction","description":"<p> The direction to order by. Defaults to <code>ASCENDING</code>.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Direction'\n        })\">Direction</a></p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Direction","name":"Direction","type":"instance","description":"<p>The sort direction.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L210","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"Filter","name":"Filter","type":"instance","description":"<p>A holder for any type of filter.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L245","resources":[],"examples":[],"params":[{"name":"compositeFilter","description":"<p> A composite filter.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'CompositeFilter'\n        })\">CompositeFilter</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"propertyFilter","description":"<p> A filter on a property.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyFilter'\n        })\">PropertyFilter</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CompositeFilter","name":"CompositeFilter","type":"instance","description":"<p>A filter that merges multiple other filters using the given operator.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L266","resources":[],"examples":[],"params":[{"name":"op","description":"<p> The operator for combining multiple filters.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Operator'\n        })\">Operator</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"filters","description":"<p> The list of filters to combine.  Must contain at least one filter.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Filter'\n        })\">Filter</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Operator","name":"Operator","type":"instance","description":"<p>A composite filter operator.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L274","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"PropertyFilter","name":"PropertyFilter","type":"instance","description":"<p>A filter on a specific property.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L309","resources":[],"examples":[],"params":[{"name":"property","description":"<p> The property to filter by.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PropertyReference'\n        })\">PropertyReference</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"op","description":"<p> The operator to filter by.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Operator'\n        })\">Operator</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"value","description":"<p> The value to compare the property to.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Value'\n        })\">Value</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GqlQuery","name":"GqlQuery","type":"instance","description":"<p>A <a href=\"https://cloud.google.com/datastore/docs/apis/gql/gql_reference\">GQL query</a>.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L388","resources":[],"examples":[],"params":[{"name":"queryString","description":"<p> A string of the format described  <a href=\"https://cloud.google.com/datastore/docs/apis/gql/gql_reference\">here</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"allowLiterals","description":"<p> When false, the query string must not contain any literals and instead must  bind all values. For example,  <code>SELECT * FROM Kind WHERE a = &#39;string literal&#39;</code> is not allowed, while  <code>SELECT * FROM Kind WHERE a = @value</code> is.</p>","types":["boolean"],"optional":false,"nullable":false},{"name":"namedBindings","description":"<p> For each non-reserved named binding site in the query string, there must be  a named parameter with that name, but not necessarily the inverse.</p><p> Key must match regex <code>[A-Za-z_$][A-Za-z_$0-9]*</code>, must not match regex  <code>__.*__</code>, and must not be <code>&quot;&quot;</code>.</p>","types":["Object.<string, Object>"],"optional":false,"nullable":false},{"name":"positionalBindings","description":"<p> Numbered binding site @1 references the first numbered parameter,  effectively using 1-based indexing, rather than the usual 0.</p><p> For each binding site numbered i in <code>query_string</code>, there must be an i-th  numbered parameter. The inverse must also be true.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'GqlQueryParameter'\n        })\">GqlQueryParameter</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GqlQueryParameter","name":"GqlQueryParameter","type":"instance","description":"<p>A binding parameter for a GQL query.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L407","resources":[],"examples":[],"params":[{"name":"value","description":"<p> A value parameter.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Value'\n        })\">Value</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"cursor","description":"<p> A query cursor. Query cursors are returned in query  result batches.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"QueryResultBatch","name":"QueryResultBatch","type":"instance","description":"<p>A batch of results produced by a query.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L453","resources":[],"examples":[],"params":[{"name":"skippedResults","description":"<p> The number of results skipped, typically because of an offset.</p>","types":["number"],"optional":false,"nullable":false},{"name":"skippedCursor","description":"<p> A cursor that points to the position after the last skipped result.  Will be set when <code>skipped_results</code> != 0.</p>","types":["string"],"optional":false,"nullable":false},{"name":"entityResultType","description":"<p> The result type for every entity in <code>entity_results</code>.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ResultType'\n        })\">ResultType</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"entityResults","description":"<p> The results for this batch.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'EntityResult'\n        })\">EntityResult</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"endCursor","description":"<p> A cursor that points to the position after the last result in the batch.</p>","types":["string"],"optional":false,"nullable":false},{"name":"moreResults","description":"<p> The state of the query after the current batch.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'MoreResultsType'\n        })\">MoreResultsType</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"snapshotVersion","description":"<p> The version number of the snapshot this batch was returned from.  This applies to the range of results from the query&#39;s <code>start_cursor</code> (or  the beginning of the query if no cursor was given) to this batch&#39;s  <code>end_cursor</code> (not the query&#39;s <code>end_cursor</code>).</p><p> In a single transaction, subsequent query result batches for the same query  can have a greater snapshot version number. Each batch&#39;s snapshot version  is valid for all preceding batches.  The value will be zero for eventually consistent queries.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"MoreResultsType","name":"MoreResultsType","type":"instance","description":"<p>The possible values for the <code>more_results</code> field.</p>","source":"packages\\datastore\\src\\v1\\doc\\doc_query.js#L461","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}],"path":"doc_query.json"}