{"id":"language/document","type":"class","name":"Document","overview":"<p>\n  This class allows you interact with Google Cloud Natural Language.\n</p>\n\n<p>\n  First, install <code>@google-cloud/language</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/language</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/language</code>— we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Compute Engine</h4>\n<div hljs language=\"javascript\">\nvar language = require('@google-cloud/language')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar language = require('@google-cloud/language')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/language</code> are outlined in our <a href=\"#/docs/language/0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n\n","description":"","source":"packages/language/src/document.js","parent":"language","children":[],"methods":[{"id":"Document","name":"Document","type":"constructor","description":"<p>Create a Natural Language Document object. From this object, you will be able to run multiple detections.</p>","source":"packages/language/src/document.js#L68","resources":[],"examples":[{"code":"var textToAnalyze = [\n  'Google is an American multinational technology company specializing in',\n  'Internet-related services and products.'\n].join(' ');\n\nvar document = language.document(textToAnalyze);"},{"caption":"<p>Create a Document object with pre-defined configuration, such as its \nlanguage.</p>","code":"var spanishDocument = language.document('¿Dónde está la sede de Google?', {\n  language: 'es'\n});"}],"params":[{"name":"config","description":"<ul> <li>Configuration object, the inline content of the document, or a Storage File object.</li> </ul> ","types":["object","string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options.content","description":"<ul> <li>If using <code>config</code> as an object to specify the encoding and/or language of the document, use this  property to pass the inline content of the document or a Storage File  object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options.encoding","description":"<ul> <li><code>UTF8</code>, <code>UTF16</code>, or <code>UTF32</code>. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1beta1/EncodingType\"><code>EncodingType</code></a>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"language/document\" data-method=\"\">language/document</a>"],"description":""}]},{"id":"annotate","name":"annotate","type":"instance","description":"<p>Run an annotation of the text from the document.</p><p>By default, all annotation types are requested:</p><ul> <li>The sentiment of the document (positive or negative)</li> <li>The entities of the document (people, places, things, etc.)</li> <li>The syntax of the document (adjectives, nouns, verbs, etc.)</li> </ul> <p>See the examples below for how to request a subset of those types.</p><p>If you only need one type of annotation, you may appreciate one of these other methods from our API:</p><ul> <li><a data-custom-type=\"language\" data-method=\"detectEntities\">language#detectEntities</a></li> <li><a data-custom-type=\"language\" data-method=\"detectSentiment\">language#detectSentiment</a></li> </ul> ","source":"packages/language/src/document.js#L363","resources":[{"title":"documents.annotateText API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/annotateText"}],"examples":[{"code":"document.annotate(function(err, annotation) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // annotation = {\n  //   language: 'en',\n  //   sentiment: 100,\n  //   entities: {\n  //     organizations: [\n  //       'Google'\n  //     ],\n  //     places: [\n  //       'American'\n  //     ]\n  //   },\n  //   sentences: [\n  //     'Google is an American multinational technology company ' +\n  //     'specializing in Internet-related services and products.'\n  //   ],\n  //   tokens: [\n  //     {\n  //       text: 'Google',\n  //       partOfSpeech: 'Noun (common and proper)',\n  //       partOfSpeechTag: 'NOUN'\n  //     },\n  //     {\n  //       text: 'is',\n  //       partOfSpeech: 'Verb (all tenses and modes)',\n  //       partOfSpeechTag: 'VERB'\n  //     },\n  //     ...\n  //   ]\n  // }\n});"},{"caption":"<p>To request only certain annotation types, provide an options object.</p>","code":"var options = {\n  entities: true,\n  sentiment: true\n};\n\ndocument.annotate(options, function(err, annotation) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // annotation = {\n  //   language: 'en',\n  //   sentiment: 100,\n  //   entities: {\n  //     organizations: [\n  //       'Google'\n  //     ],\n  //     places: [\n  //       'American'\n  //     ]\n  //   }\n  // }\n});"},{"caption":"<p>Verbose mode may also be enabled for more detailed results.</p>","code":"var options = {\n  verbose: true\n};\n\ndocument.annotate(options, function(err, annotation) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // annotation = {\n  //   language: 'en',\n  //   sentiment: {\n  //     polarity: 100,\n  //     magnitude: 40\n  //   },\n  //   entities: {\n  //     organizations: [\n  //       {\n  //         name: 'Google',\n  //         type: 'ORGANIZATION',\n  //         metadata: {\n  //           wikipedia_url: 'http://en.wikipedia.org/wiki/Google'\n  //         },\n  //         salience: 65.137446,\n  //         mentions: [\n  //           {\n  //             text: {\n  //               content: 'Google',\n  //               beginOffset: -1\n  //             }\n  //           }\n  //         ]\n  //       }\n  //     ],\n  //     places: [\n  //       {\n  //         name: 'American',\n  //         type: 'LOCATION',\n  //         metadata: {\n  //           wikipedia_url: 'http://en.wikipedia.org/wiki/United_States'\n  //         },\n  //         salience: 13.947370648384094,\n  //         mentions: [\n  //           {\n  //             text: [\n  //               {\n  //                 content: 'American',\n  //                 beginOffset: -1\n  //               }\n  //             ]\n  //           }\n  //         ]\n  //       }\n  //     ]\n  //   },\n  //   sentences: [\n  //     {\n  //       content:\n  //         'Google is an American multinational technology company' +\n  //         'specializing in Internet-related services and products.'\n  //       beginOffset: -1\n  //     }\n  //   ],\n  //   tokens: [\n  //     {\n  //       text: {\n  //         content: 'Google',\n  //         beginOffset: -1\n  //       },\n  //       partOfSpeech: {\n  //         tag: 'NOUN'\n  //       },\n  //       dependencyEdge: {\n  //         headTokenIndex: 1,\n  //         label: 'NSUBJ'\n  //       },\n  //       lemma: 'Google'\n  //     },\n  //     ...\n  //   ]\n  // }\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/annotateText#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.entities","description":"<ul> <li>Detect the entities from this document. By default, all features (<code>entities</code>, <code>sentiment</code>, and <code>syntax</code>) are  enabled. By overriding any of these values, all defaults are switched to  <code>false</code>.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"options.sentiment","description":"<ul> <li>Detect the sentiment from this document. By default, all features (<code>entities</code>, <code>sentiment</code>, and <code>syntax</code>) are  enabled. By overriding any of these values, all defaults are switched to  <code>false</code>.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.syntax","description":"<ul> <li>Detect the syntax from this document. By default, all features (<code>entities</code>, <code>sentiment</code>, and <code>syntax</code>) are  enabled. By overriding any of these values, all defaults are switched to  <code>false</code>.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"options.verbose","description":"<ul> <li>Enable verbose mode for more detailed results. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error occurred while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.annotation","description":"<ul> <li>The formatted API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.annotation.language","description":"<ul> <li>The language detected from the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.annotation.sentiment","description":"<ul> <li>A value in the range of <code>-100</code> to <code>100</code>. Large numbers represent more positive sentiments.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback.annotation.entities","description":"<ul> <li>The recognized entities from the text, grouped by the type of entity.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.art","description":"<ul> <li>Art entities detected from the text. This is only present if detections of this type were  found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.events","description":"<ul> <li>Event entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.goods","description":"<ul> <li>Consumer good entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.organizations","description":"<ul> <li>Organization entities detected from the text. This is only present if detections of  this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.other","description":"<ul> <li>Other entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.people","description":"<ul> <li>People entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.places","description":"<ul> <li>Place entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.entities.unknown","description":"<ul> <li>Unknown entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.sentences","description":"<ul> <li>Sentences detected from the text.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.annotation.tokens","description":"<ul> <li>Parts of speech that were detected from the text.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.annotation.tokens.text","description":"<ul> <li>The piece of text analyzed.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.annotation.tokens.partOfSpeech","description":"<ul> <li>A description of the part of speech (<code>Noun (common and propert)</code>,  <code>Verb (all tenses and modes)</code>, etc.).</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.annotation.tokens.partOfSpeechTag","description":"<ul> <li>A short code for the type of speech (<code>NOUN</code>, <code>VERB</code>, etc.).</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detectEntities","name":"detectEntities","type":"instance","description":"<p>Detect entities from the document.</p>","source":"packages/language/src/document.js#L537","resources":[{"title":"documents.analyzeEntities API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/analyzeEntities"}],"examples":[{"code":"document.detectEntities(function(err, entities) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // entities = {\n  //   organizations: [\n  //     'Google'\n  //   ],\n  //   places: [\n  //     'American'\n  //   ]\n  // }\n});"},{"caption":"<p>Verbose mode may also be enabled for more detailed results.</p>","code":"var options = {\n  verbose: true\n};\n\ndocument.detectEntities(options, function(err, entities) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // entities = {\n  //   organizations: [\n  //     {\n  //       name: 'Google',\n  //       type: 'ORGANIZATION',\n  //       metadata: {\n  //         wikipedia_url: 'http: *   //en.wikipedia.org/wiki/Google'\n  //       },\n  //       salience: 65.137446,\n  //       mentions: [\n  //         {\n  //           text: {\n  //             content: 'Google',\n  //             beginOffset: -1\n  //           }\n  //         }\n  //       ]\n  //     }\n  //   ],\n  //   places: [\n  //     {\n  //       name: 'American',\n  //       type: 'LOCATION',\n  //       metadata: {\n  //         wikipedia_url: 'http: *   //en.wikipedia.org/wiki/United_States'\n  //       },\n  //       salience: 13.947371,\n  //       mentions: [\n  //         {\n  //           text: {\n  //             content: 'American',\n  //             beginOffset: -1\n  //           }\n  //         }\n  //       ]\n  //     }\n  //   ]\n  // }\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/analyzeEntities#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.verbose","description":"<ul> <li>Enable verbose mode for more detailed results. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error occurred while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.entities","description":"<ul> <li>The recognized entities from the text, grouped by the type of entity.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.entities.art","description":"<ul> <li>Art entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.events","description":"<ul> <li>Event entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.goods","description":"<ul> <li>Consumer good entities detected from the text. This is only present if detections of this type were  found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.organizations","description":"<ul> <li>Organization entities detected from the text. This is only present if detections of this type  were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.other","description":"<ul> <li>Other entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.people","description":"<ul> <li>People entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.places","description":"<ul> <li>Place entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.entities.unknown","description":"<ul> <li>Unknown entities detected from the text. This is only present if detections of this type were found.</li> </ul> ","types":["string[]"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detectSentiment","name":"detectSentiment","type":"instance","description":"<p>Detect the sentiment of the text in this document.</p>","source":"packages/language/src/document.js#L605","resources":[{"title":"documents.analyzeSentiment API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/analyzeSentiment"}],"examples":[{"code":"document.detectSentiment(function(err, sentiment) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // sentiment = 100\n});"},{"caption":"<p>Verbose mode may also be enabled for more detailed results.</p>","code":"var options = {\n  verbose: true\n};\n\ndocument.detectSentiment(options, function(err, sentiment) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  // sentiment = {\n  //   polarity: 100,\n  //   magnitude: 40\n  // }\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1beta1/documents/analyzeSentiment#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.verbose","description":"<ul> <li>Enable verbose mode for more detailed results. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error occurred while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.sentiment","description":"<ul> <li>A value in the range of <code>-100</code> to <code>100</code>. Large numbers represent more positive sentiments.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}