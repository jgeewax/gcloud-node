{"id":"language","type":"class","name":"Language","overview":"<p>\n  This class allows you interact with Cloud Natural Language.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/language</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>— we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar language = gcloud.language();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar language = gcloud.language({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/v0.56.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages\\language\\src\\index.js","parent":null,"children":["language/document","language/v1","language/v1beta2"],"methods":[{"id":"Language","name":"Language","type":"constructor","description":"<p>The <a href=\"https://cloud.google.com/natural-language/docs\">Cloud Natural Language</a> API provides natural language understanding technologies to developers, including sentiment analysis, entity recognition, and syntax analysis. This API is part of the larger Cloud Machine Learning API.</p><p>The Cloud Natural Language API currently supports English, Spanish, and Japanese for <a href=\"https://cloud.google.com/natural-language/docs/reference/rest/v1/documents/analyzeSentiment\">sentiment analysis</a>, <a href=\"https://cloud.google.com/natural-language/docs/reference/rest/v1/documents/analyzeEntities\">entity analysis</a> and <a href=\"https://cloud.google.com/natural-language/docs/reference/rest/v1/documents/annotateText\">syntax analysis</a>.</p>","source":"packages\\language\\src\\index.js#L64","resources":[{"title":"Cloud Natural Language API Documentation","link":"https://cloud.google.com/natural-language/docs"}],"examples":[],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"options.apiVersion","description":"<ul> <li>Either <code>v1</code> or <code>v1beta2</code>. <code>v1beta2</code> is a <em>newer</em> release than <code>v1</code>, and still in beta. By choosing it, you are  opting into new, back-end behavior which is not officially supported by  the design of this API. (Default: <code>v1</code>)</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"annotate","name":"annotate","type":"instance","description":"<p>Run an annotation of a block of text.</p><p>NOTE: This is a convenience method which doesn&#39;t require creating a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object. If you are only running a single detection, this may be more convenient. However, if you plan to run multiple detections, it&#39;s easier to create a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object.</p>","source":"packages\\language\\src\\index.js#L157","resources":[{"title":"documents.annotate API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1/documents/annotateText"}],"examples":[{"caption":"<p>See <a data-custom-type=\"language/document\" data-method=\"annotate\">language/document#annotate</a> for a detailed breakdown of \nthe arguments your callback will be executed with.</p>","code":"function callback(err, entities, apiResponse) {}\n\nlanguage.annotate('Hello!', callback);"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file');\n\nlanguage.annotate(file, callback);"},{"caption":"<p>Specify HTML content.</p>","code":"var options = {\n  type: 'html'\n};\n\nlanguage.annotate('Hello!', options, callback);"},{"caption":"<p>Specify the language the text is written in.</p>","code":"var options = {\n  language: 'es',\n  entities: true\n};\n\nlanguage.annotate('¿Dónde está la sede de Google?', options, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"language.annotate('Hello!').then(function(data) {\n  var entities = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"content","description":"<ul> <li>Inline content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/documents/annotateText#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.encoding","description":"<ul> <li><code>UTF8</code> (also, <code>buffer</code>), <code>UTF16</code> (also <code>string</code>), or <code>UTF32</code>. (Alias for <code>options.encodingType</code>). Default:  &#39;UTF8&#39; if a Buffer, otherwise &#39;UTF16&#39;. See  <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/EncodingType\"><code>EncodingType</code></a></li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.type","description":"<ul> <li>The type of document, either <code>html</code> or <code>text</code>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>See <a data-custom-type=\"language/document\" data-method=\"annotate\">language/document#annotate</a>.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detectEntities","name":"detectEntities","type":"instance","description":"<p>Detect the entities from a block of text.</p><p>NOTE: This is a convenience method which doesn&#39;t require creating a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object. If you are only running a single detection, this may be more convenient. However, if you plan to run multiple detections, it&#39;s easier to create a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object.</p>","source":"packages\\language\\src\\index.js#L239","resources":[{"title":"documents.analyzeEntities API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeEntities"}],"examples":[{"caption":"<p>See <a data-custom-type=\"language/document\" data-method=\"detectEntities\">language/document#detectEntities</a> for a detailed breakdown of \nthe arguments your callback will be executed with.</p>","code":"function callback(err, entities, apiResponse) {}\n\nlanguage.detectEntities('Axel Foley is from Detroit', callback);"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file');\n\nlanguage.detectEntities(file, callback);"},{"caption":"<p>Specify HTML content.</p>","code":"var options = {\n  type: 'html'\n};\n\nlanguage.detectEntities('Axel Foley is from Detroit', options, callback);"},{"caption":"<p>Specify the language the text is written in.</p>","code":"var options = {\n  language: 'es'\n};\n\nlanguage.detectEntities('Axel Foley es de Detroit', options, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"language.detectEntities('Axel Foley is from Detroit').then(function(data) {\n  var entities = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"content","description":"<ul> <li>Inline content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeEntities#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.encoding","description":"<ul> <li><code>UTF8</code> (also, <code>buffer</code>), <code>UTF16</code> (also <code>string</code>), or <code>UTF32</code>. (Alias for <code>options.encodingType</code>). Default:  &#39;UTF8&#39; if a Buffer, otherwise &#39;UTF16&#39;. See  <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/EncodingType\"><code>EncodingType</code></a></li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.type","description":"<ul> <li>The type of document, either <code>html</code> or <code>text</code>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>See <a data-custom-type=\"language/document\" data-method=\"detectEntities\">language/document#detectEntities</a>.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detectSentiment","name":"detectSentiment","type":"instance","description":"<p>Detect the sentiment of a block of text.</p><p>NOTE: This is a convenience method which doesn&#39;t require creating a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object. If you are only running a single detection, this may be more convenient. However, if you plan to run multiple detections, it&#39;s easier to create a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object.</p>","source":"packages\\language\\src\\index.js#L312","resources":[{"title":"documents.analyzeSentiment API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeSentiment"}],"examples":[{"caption":"<p>See <a data-custom-type=\"language/document\" data-method=\"detectSentiment\">language/document#detectSentiment</a> for a detailed breakdown of \nthe arguments your callback will be executed with.</p>","code":"function callback(err, sentiment, apiResponse) {}\n\nlanguage.detectSentiment('Hello!', callback);"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file');\n\nlanguage.detectSentiment(file, callback);"},{"caption":"<p>Specify HTML content.</p>","code":"var options = {\n  type: 'html'\n};\n\nlanguage.detectSentiment('&lt;h1>Document Title&lt;/h1>', options, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"language.detectSentiment('Hello!').then(function(data) {\n  var sentiment = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"content","description":"<ul> <li>Inline content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeSentiment#request-body\">documents.annotateText</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.encoding","description":"<ul> <li><code>UTF8</code> (also, <code>buffer</code>), <code>UTF16</code> (also <code>string</code>), or <code>UTF32</code>. (Alias for <code>options.encodingType</code>). Default:  &#39;UTF8&#39; if a Buffer, otherwise &#39;UTF16&#39;. See  <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/EncodingType\"><code>EncodingType</code></a></li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.type","description":"<ul> <li>The type of document, either <code>html</code> or <code>text</code>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>See <a data-custom-type=\"language/document\" data-method=\"detectSentiment\">language/document#detectSentiment</a>.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"detectSyntax","name":"detectSyntax","type":"instance","description":"<p>Detect the syntax of a block of text.</p><p>NOTE: This is a convenience method which doesn&#39;t require creating a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object. If you are only running a single detection, this may be more convenient. However, if you plan to run multiple detections, it&#39;s easier to create a <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> object.</p>","source":"packages\\language\\src\\index.js#L394","resources":[{"title":"documents.analyzeSyntax API Documentation","link":"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeSyntax"}],"examples":[{"caption":"<p>See <a data-custom-type=\"language/document\" data-method=\"detectSyntax\">language/document#detectSyntax</a> for a detailed breakdown of \nthe arguments your callback will be executed with.</p>","code":"function callback(err, syntax, apiResponse) {}\n\nlanguage.detectSyntax('Axel Foley is from Detroit', callback);"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file');\n\nlanguage.detectSyntax(file, callback);"},{"caption":"<p>Specify HTML content.</p>","code":"var options = {\n  type: 'html'\n};\n\nlanguage.detectSyntax('Axel Foley is from Detroit', options, callback);"},{"caption":"<p>Specify the language the text is written in.</p>","code":"var options = {\n  language: 'es'\n};\n\nlanguage.detectSyntax('Axel Foley es de Detroit', options, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"language.detectSyntax('Axel Foley is from Detroit').then(function(data) {\n  var syntax = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"content","description":"<ul> <li>Inline content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object. See <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/documents/analyzeSyntax#request-body\">documents.analyzeSyntax</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.encoding","description":"<ul> <li><code>UTF8</code> (also, <code>buffer</code>), <code>UTF16</code> (also <code>string</code>), or <code>UTF32</code>. (Alias for <code>options.encodingType</code>). Default:  &#39;UTF8&#39; if a Buffer, otherwise &#39;UTF16&#39;. See  <a href=\"https://cloud.google.com/natural-language/reference/rest/v1/EncodingType\"><code>EncodingType</code></a></li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.type","description":"<ul> <li>The type of document, either <code>html</code> or <code>text</code>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>See <a data-custom-type=\"language/document\" data-method=\"detectSyntax\">language/document#detectSyntax</a>.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"document","name":"document","type":"instance","description":"<p>Create a Document object for an unknown type. If you know the type, use the appropriate method below:</p><ul> <li><a data-custom-type=\"language\" data-method=\"html\">language#html</a> - For HTML documents.</li> <li><a data-custom-type=\"language\" data-method=\"text\">language#text</a> - For text documents.</li> </ul> ","source":"packages\\language\\src\\index.js#L453","resources":[],"examples":[{"code":"var document = language.document('Inline content of an unknown type.');"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file');\n\nvar document = language.document(file);"},{"caption":"<p>Create a Document object with pre-defined configuration, such as its \nlanguage.</p>","code":"var document = language.document('¿Dónde está la sede de Google?', {\n  language: 'es'\n});"},{"caption":"<p>You can now run detections on the document. \nSee <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> for a complete list of methods available.</p>","code":"document.detectEntities(function(err, entities) {});"}],"params":[{"name":"config","description":"<ul> <li>Configuration object, the inline content of the document, or a Storage File object.</li> </ul> ","types":["object","string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options.content","description":"<ul> <li>If using <code>config</code> as an object to specify the encoding and/or language of the document, use this  property to pass the inline content of the document or a Storage File  object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"language/document\" data-method=\"\">language/document</a>"],"description":""}]},{"id":"html","name":"html","type":"instance","description":"<p>Create a Document object from an HTML document. You may provide either inline HTML content or a Storage File object (see <a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>).</p>","source":"packages\\language\\src\\index.js#L496","resources":[],"examples":[{"code":"var document = language.html('&lt;h1>Document Title&lt;/h1>');"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file.html');\n\nvar document = language.html(file);"},{"caption":"<p>Create a Document object with pre-defined configuration, such as its \nlanguage.</p>","code":"var document = language.html('&lt;h1>Titulo del documento&lt;/h1>', {\n  language: 'es'\n});"},{"caption":"<p>You can now run detections on the document. \nSee <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> for a complete list of methods available.</p>","code":"document.detectEntities(function(err, entities) {});"}],"params":[{"name":"content","description":"<ul> <li>Inline HTML content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"language/document\" data-method=\"\">language/document</a>"],"description":""}]},{"id":"text","name":"text","type":"instance","description":"<p>Create a Document object from a text-based document. You may provide either inline text content or a Storage File object (see <a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>).</p>","source":"packages\\language\\src\\index.js#L544","resources":[],"examples":[{"code":"var document = language.text('This is using inline text content.');"},{"caption":"<p>Or, provide a reference to a file hosted on Cloud Storage.</p>","code":"var gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123'\n});\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-file.txt');\n\nvar document = language.text(file);"},{"caption":"<p>Create a Document object with pre-defined configuration, such as its \nlanguage.</p>","code":"var document = language.text('¿Dónde está la sede de Google?', {\n  language: 'es'\n});"},{"caption":"<p>You can now run detections on the document. \nSee <a data-custom-type=\"language/document\" data-method=\"\">language/document</a> for a complete list of methods available.</p>","code":"document.detectEntities(function(err, entities) {});"}],"params":[{"name":"content","description":"<ul> <li>Inline text content or a Storage File object.</li> </ul> ","types":["string","<a data-custom-type=\"storage/file\" data-method=\"\">storage/file</a>"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.language","description":"<ul> <li>The language of the text.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"language/document\" data-method=\"\">language/document</a>"],"description":""}]}],"path":"index.json"}