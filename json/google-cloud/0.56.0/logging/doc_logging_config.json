{"id":"logging/v2/doc/doc_logging_config","type":"class","overview":"<p>\n  This class allows you interact with Stackdriver Logging.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/logging</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar logging = gcloud.logging();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar logging = gcloud.logging({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/v0.56.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js","parent":"logging","children":[],"methods":[{"id":"LogSink","name":"LogSink","type":"instance","description":"<p>Describes a sink used to export log entries to one of the following destinations in any project: a Cloud Storage bucket, a BigQuery dataset, or a Cloud Pub/Sub topic. A logs filter controls which log entries are exported. The sink must be created within a project, organization, billing account, or folder.</p>","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L117","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Required. The client-assigned sink identifier, unique within the  project. Example: <code>&quot;my-syslog-errors-to-pubsub&quot;</code>. Sink identifiers are  limited to 100 characters and can include only the following characters:  upper and lower-case alphanumeric characters, underscores, hyphens, and  periods.</p>","types":["string"],"optional":false,"nullable":false},{"name":"destination","description":"<p> Required. The export destination:</p><pre><code> &quot;storage.googleapis.com/[GCS_BUCKET]&quot; &quot;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]&quot; &quot;pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]&quot; </code></pre><p> The sink&#39;s <code>writer_identity</code>, set when the sink is created, must  have permission to write to the destination or else the log  entries are not exported. For more information, see  <a href=\"https://cloud.google.com/logging/docs/api/tasks/exporting-logs\">Exporting Logs With Sinks</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"filter","description":"<p> Optional.  An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs filter</a>. The only  exported log entries are those that are in the resource owning the sink and  that match the filter. The filter must use the log entry format specified  by the <code>output_version_format</code> parameter. For example, in the v2 format:</p><pre><code> logName=&quot;projects/[PROJECT_ID]/logs/[LOG_ID]&quot; AND severity&gt;=ERROR </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"outputVersionFormat","description":"<p> Optional. The log entry format to use for this sink&#39;s exported log  entries. The v2 format is used by default.  <strong>The v1 format is deprecated</strong> and should be used only as part of a  migration effort to v2.  See <a href=\"https://cloud.google.com/logging/docs/api/v2/migration-to-v2\">Migration to the v2 API</a>.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'VersionFormat'\n        })\">VersionFormat</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"writerIdentity","description":"<p> Output only. An IAM identity&mdash;a service account or group&mdash;under  which Stackdriver Logging writes the exported log entries to the sink&#39;s  destination. This field is set by  <a href=\"https://cloud.google.com/logging/docs/api/reference/rest/v2/projects.sinks/create\">sinks.create</a>  and  <a href=\"https://cloud.google.com/logging/docs/api/reference/rest/v2/projects.sinks/update\">sinks.update</a>,  based on the setting of <code>unique_writer_identity</code> in those methods.</p><p> Until you grant this identity write-access to the destination, log entry  exports from this sink will fail. For more information,  see <a href=\"https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource\">Granting access for a  resource</a>.  Consult the destination service&#39;s documentation to determine the  appropriate IAM roles to assign to the identity.</p>","types":["string"],"optional":false,"nullable":false},{"name":"includeChildren","description":"<p> Optional. This field applies only to sinks owned by organizations and  folders. If the field is false, the default, only the logs owned by the  sink&#39;s parent resource are available for export. If the field is true, then  logs from all the projects, folders, and billing accounts contained in the  sink&#39;s parent resource are also available for export. Whether a particular  log entry from the children is exported depends on the sink&#39;s filter  expression. For example, if this field is true, then the filter  <code>resource.type=gce_instance</code> would export all Compute Engine VM instance  log entries from all projects in the sink&#39;s parent. To only export entries  from certain child projects, filter on the project part of the log name:</p><pre><code> logName:(&quot;projects/test-project1/&quot; OR &quot;projects/test-project2/&quot;) AND resource.type=gce_instance </code></pre>","types":["boolean"],"optional":false,"nullable":false},{"name":"startTime","description":"<p> Optional. The time at which this sink will begin exporting log entries.  Log entries are exported only if their timestamp is not earlier than the  start time. The default value of this field is the time the sink is  created or updated.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false},{"name":"endTime","description":"<p> Optional. The time at which this sink will stop exporting log entries. Log  entries are exported only if their timestamp is earlier than the end time.  If this field is not supplied, there is no end time. If both a start time  and an end time are provided, then the end time must be later than the  start time.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"VersionFormat","name":"VersionFormat","type":"instance","description":"<p>Available log entry formats. Log entries can be written to Stackdriver Logging in either format and can be exported in either format. Version 2 is the preferred format.</p>","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L127","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"ListSinksRequest","name":"ListSinksRequest","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L171","resources":[],"examples":[],"params":[{"name":"parent","description":"<p> Required. The parent resource whose sinks are to be listed:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; &quot;billingAccounts/[BILLING_ACCOUNT_ID]&quot; &quot;folders/[FOLDER_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"pageToken","description":"<p> Optional. If present, then retrieve the next batch of results from the  preceding call to this method. <code>pageToken</code> must be the value of  <code>nextPageToken</code> from the previous response. The values of other method  parameters should be identical to those in the previous call.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pageSize","description":"<p> Optional. The maximum number of results to return from this request.  Non-positive values are ignored. The presence of <code>nextPageToken</code> in the  response indicates that more results might be available.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListSinksResponse","name":"ListSinksResponse","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L191","resources":[],"examples":[],"params":[{"name":"sinks","description":"<p> A list of sinks.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogSink'\n        })\">LogSink</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"nextPageToken","description":"<p> If there might be more results than appear in this response, then  <code>nextPageToken</code> is included. To get the next set of results, call the same  method again using the value of <code>nextPageToken</code> as <code>pageToken</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GetSinkRequest","name":"GetSinkRequest","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L211","resources":[],"examples":[],"params":[{"name":"sinkName","description":"<p> Required. The resource name of the sink:</p><pre><code> &quot;projects/[PROJECT_ID]/sinks/[SINK_ID]&quot; &quot;organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]&quot; &quot;billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]&quot; &quot;folders/[FOLDER_ID]/sinks/[SINK_ID]&quot; </code></pre><p> Example: <code>&quot;projects/my-project-id/sinks/my-sink-id&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CreateSinkRequest","name":"CreateSinkRequest","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L250","resources":[],"examples":[],"params":[{"name":"parent","description":"<p> Required. The resource in which to create the sink:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; &quot;organizations/[ORGANIZATION_ID]&quot; &quot;billingAccounts/[BILLING_ACCOUNT_ID]&quot; &quot;folders/[FOLDER_ID]&quot; </code></pre><p> Examples: <code>&quot;projects/my-logging-project&quot;</code>, <code>&quot;organizations/123456789&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"sink","description":"<p> Required. The new sink, whose <code>name</code> parameter is a sink identifier that  is not already in use.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogSink'\n        })\">LogSink</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"uniqueWriterIdentity","description":"<p> Optional. Determines the kind of IAM identity returned as <code>writer_identity</code>  in the new sink. If this value is omitted or set to false, and if the  sink&#39;s parent is a project, then the value returned as <code>writer_identity</code> is  the same group or service account used by Stackdriver Logging before the  addition of writer identities to this API. The sink&#39;s destination must be  in the same project as the sink itself.</p><p> If this field is set to true, or if the sink is owned by a non-project  resource such as an organization, then the value of <code>writer_identity</code> will  be a unique service account used only for exports from the new sink. For  more information, see <code>writer_identity</code> in {@link LogSink}.</p>","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"UpdateSinkRequest","name":"UpdateSinkRequest","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L291","resources":[],"examples":[],"params":[{"name":"sinkName","description":"<p> Required. The full resource name of the sink to update, including the  parent resource and the sink identifier:</p><pre><code> &quot;projects/[PROJECT_ID]/sinks/[SINK_ID]&quot; &quot;organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]&quot; &quot;billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]&quot; &quot;folders/[FOLDER_ID]/sinks/[SINK_ID]&quot; </code></pre><p> Example: <code>&quot;projects/my-project-id/sinks/my-sink-id&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"sink","description":"<p> Required. The updated sink, whose name is the same identifier that appears  as part of <code>sink_name</code>. If <code>sink_name</code> does not exist, then  this method creates a new sink.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogSink'\n        })\">LogSink</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"uniqueWriterIdentity","description":"<p> Optional. See  <a href=\"https://cloud.google.com/logging/docs/api/reference/rest/v2/projects.sinks/create\">sinks.create</a>  for a description of this field. When updating a sink, the effect of this  field on the value of <code>writer_identity</code> in the updated sink depends on both  the old and new values of this field:</p><ul> <li>If the old and new values of this field are both false or both true, then there is no change to the sink&#39;s <code>writer_identity</code>.</li> <li>If the old value is false and the new value is true, then <code>writer_identity</code> is changed to a unique service account.</li> <li>It is an error if the old value is true and the new value is false.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DeleteSinkRequest","name":"DeleteSinkRequest","type":"instance","description":"","source":"packages\\logging\\src\\v2\\doc\\doc_logging_config.js#L312","resources":[],"examples":[],"params":[{"name":"sinkName","description":"<p> Required. The full resource name of the sink to delete, including the  parent resource and the sink identifier:</p><pre><code> &quot;projects/[PROJECT_ID]/sinks/[SINK_ID]&quot; &quot;organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]&quot; &quot;billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]&quot; &quot;folders/[FOLDER_ID]/sinks/[SINK_ID]&quot; </code></pre><p> Example: <code>&quot;projects/my-project-id/sinks/my-sink-id&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_logging_config.json"}