{"id":"datastore/query","type":"class","name":"Query","description":"","source":"lib/datastore/query.js","parent":"datastore","children":[],"methods":[{"id":"Query","name":"Query","type":"constructor","description":"<p>Build a Query object.</p><p><strong>Queries are built with <a data-custom-type=\"datastore\" data-method=\"createQuery\">datastore#createQuery</a> and <a data-custom-type=\"transaction\" data-method=\"createQuery\">transaction#createQuery</a>.</strong></p>","source":"lib/datastore/query.js#L53","resources":[{"title":"Datastore Queries","link":"http://goo.gl/Cag0r6"}],"examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar datastore = gcloud.datastore();\nvar query = datastore.createQuery('AnimalNamespace', 'Lion');"}],"params":[{"name":"namespace","description":"<ul> <li>Namespace to query entities from.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"kind","description":"<ul> <li>Kind to query.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"filter","name":"filter","type":"instance","description":"<p>Datastore allows querying on properties. Supported comparison operators are <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, and <code>&gt;=</code>. &quot;Not equal&quot; and <code>IN</code> operators are currently not supported.</p><p><em>To filter by ancestors, see <a data-custom-type=\"datastore/query\" data-method=\"hasAncestor\">datastore/query#hasAncestor</a>.</em></p>","source":"lib/datastore/query.js#L110","resources":[{"title":"Datastore Filters","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Filters"}],"examples":[{"caption":"<p>List all companies that are located in California.</p>","code":"var caliQuery = query.filter('state', 'CA');"},{"caption":"<p>List all companies named Google that have less than 400 employees.</p>","code":"var companyQuery = query\n  .filter('name', 'Google')\n  .filter('size', '<', 400);"},{"caption":"<p>To filter by key, use <code>__key__</code> for the property name. Filter on keys \nstored as properties is not currently supported.</p>","code":"var key = datastore.key(['Company', 'Google']);\nvar keyQuery = query.filter('__key__', key);"}],"params":[{"name":"property","description":"<ul> <li>The field name.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"operator","description":"<ul> <li>Operator (=, &lt;, &gt;, &lt;=, &gt;=). Default: <code>=</code></li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"value","description":"<ul> <li>Value to compare property to.</li> </ul> ","types":[],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"hasAncestor","name":"hasAncestor","type":"instance","description":"<p>Filter a query by ancestors.</p>","source":"lib/datastore/query.js#L136","resources":[{"title":"Datastore Ancestor Filters","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Ancestor_filters"}],"examples":[{"code":"var ancestoryQuery = query.hasAncestor(datastore.key(['Parent', 123]));"}],"params":[{"name":"key","description":"<ul> <li>Key object to filter by.</li> </ul> ","types":["Key"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"order","name":"order","type":"instance","description":"<p>Sort the results by a property name in ascending or descending order. By default, an ascending sort order will be used.</p>","source":"lib/datastore/query.js#L162","resources":[{"title":"Datastore Sort Orders","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Sort_orders"}],"examples":[{"code":"// Sort by size ascendingly.\nvar companiesAscending = companyQuery.order('size');\n\n// Sort by size descendingly.\nvar companiesDescending = companyQuery.order('size', {\n  descending: true\n});"}],"params":[{"name":"property","description":"<ul> <li>The property to order by.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Options object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.descending","description":"<ul> <li>Sort the results by a property name in descending order. Default: <code>false</code>.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"groupBy","name":"groupBy","type":"instance","description":"<p>Group query results by a list of properties.</p>","source":"lib/datastore/query.js#L178","resources":[],"examples":[{"code":"var groupedQuery = companyQuery.groupBy(['name', 'size']);"}],"params":[{"name":"properties","description":"<ul> <li>Properties to group by.</li> </ul> ","types":["array"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"select","name":"select","type":"instance","description":"<p>Retrieve only select properties from the matched entities.</p><p>Queries that select a subset of properties are called Projection Queries.</p>","source":"lib/datastore/query.js#L201","resources":[{"title":"Projection Queries","link":"https://cloud.google.com/datastore/docs/concepts/projectionqueries"}],"examples":[{"code":"// Only retrieve the name property.\nvar selectQuery = companyQuery.select('name');\n\n// Only retrieve the name and size properties.\nvar selectQuery = companyQuery.select(['name', 'size']);"}],"params":[{"name":"fieldNames","description":"<ul> <li>Properties to return from the matched entities.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"start","name":"start","type":"instance","description":"<p>Set a starting cursor to a query.</p>","source":"lib/datastore/query.js#L220","resources":[{"title":"Query Cursors","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors"}],"examples":[{"code":"var cursorToken = 'X';\n\n// Retrieve results starting from cursorToken.\nvar startQuery = companyQuery.start(cursorToken);"}],"params":[{"name":"cursorToken","description":"<ul> <li>The starting cursor token.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"end","name":"end","type":"instance","description":"<p>Set an ending cursor to a query.</p>","source":"lib/datastore/query.js#L239","resources":[{"title":"Query Cursors","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors"}],"examples":[{"code":"var cursorToken = 'X';\n\n// Retrieve results limited to the extent of cursorToken.\nvar endQuery = companyQuery.end(cursorToken);"}],"params":[{"name":"cursorToken","description":"<ul> <li>The ending cursor token.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"limit","name":"limit","type":"instance","description":"<p>Set a limit on a query.</p>","source":"lib/datastore/query.js#L256","resources":[{"title":"Query Limits","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results"}],"examples":[{"code":"// Limit the results to 10 entities.\nvar limitQuery = companyQuery.limit(10);"}],"params":[{"name":"n","description":"<ul> <li>The number of results to limit the query to.</li> </ul> ","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"offset","name":"offset","type":"instance","description":"<p>Set an offset on a query.</p>","source":"lib/datastore/query.js#L273","resources":[{"title":"Query Offsets","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results"}],"examples":[{"code":"// Start from the 101st result.\nvar offsetQuery = companyQuery.offset(100);"}],"params":[{"name":"n","description":"<ul> <li>The offset to start from after the start cursor.</li> </ul> ","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"run","name":"run","type":"instance","description":"<p>Run the query.</p>","source":"lib/datastore/query.js#L336","resources":[],"examples":[{"code":"query.run(function(err, entities, info) {});"},{"caption":"<p>If you omit the callback, you will get the matching entities in a readable \nobject stream.</p>","code":"query.run()\n  .on('error', console.error)\n  .on('data', function (entity) {})\n  .on('info', function(info) {})\n  .on('end', function() {\n    // All entities retrieved.\n  });"},{"caption":"<p>If you anticipate many results, you can end a stream early to prevent \nunnecessary processing and API requests.</p>","code":"query.run()\n  .on('data', function (entity) {\n    this.end();\n  });"},{"caption":"<p>A keys-only query returns just the keys of the result entities instead of \nthe entities themselves, at lower latency and cost.</p>","code":"query.select('__key__');\n\nquery.run(function(err, entities) {\n  // entities[].key = Key object\n  // entities[].data = Empty object\n});"}],"params":[{"name":"options","description":"<ul> <li>Optional configuration.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.consistency","description":"<ul> <li>Specify either <code>strong</code> or <code>eventual</code>. If not specified, default values are chosen by Datastore for the  operation. Learn more about strong and eventual consistency  <a href=\"https://cloud.google.com/datastore/docs/articles/balancing-strong-and-eventual-consistency-with-google-cloud-datastore\">here</a>.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function. If omitted, a readable stream instance is returned.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.entities","description":"<ul> <li>A list of entities.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.info","description":"<ul> <li>An object useful for pagination.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.info.endCursor","description":"<ul> <li>Use this in a follow-up query to begin from where these results ended.</li> </ul> ","types":["string"],"optional":false,"nullable":true},{"name":"callback.info.moreResults","description":"<ul> <li>Datastore responds with one of: <ul> <li><a data-custom-type=\"datastore\" data-method=\"MORE_RESULTS_AFTER_LIMIT\">datastore#MORE_RESULTS_AFTER_LIMIT</a>: There <em>may</em> be more results after the specified limit.</li> <li><a data-custom-type=\"datastore\" data-method=\"MORE_RESULTS_AFTER_CURSOR\">datastore#MORE_RESULTS_AFTER_CURSOR</a>: There <em>may</em> be more results after the specified end cursor.</li> <li><a data-custom-type=\"datastore\" data-method=\"NO_MORE_RESULTS\">datastore#NO_MORE_RESULTS</a>: There are no more results.</li> </ul> </li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}