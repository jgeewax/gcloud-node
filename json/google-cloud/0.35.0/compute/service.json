{"id":"compute/service","type":"class","name":"Service","description":"","source":"lib/compute/service.js","parent":"compute","children":[],"methods":[{"id":"Service","name":"Service","type":"constructor","description":"<p>An HTTP(S) load balancing backend service is a centralized service for managing backends, which in turn manage instances that handle user requests. You configure your load balancing service to route requests to your backend service. The backend service in turn knows which instances it can use, how much traffic they can handle, and how much traffic they are currently handling. In addition, the backend service monitors health checking and does not send traffic to unhealthy instances.</p>","source":"lib/compute/service.js#L70","resources":[{"title":"Backend Services Overview","link":"https://cloud.google.com/compute/docs/load-balancing/http/backend-service"}],"examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar service = gce.service('service-name');"}],"params":[],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create a backend service.</p>","source":"lib/compute/service.js#L94","resources":[],"examples":[{"code":"service.create({\n  backends: [\n    {\n      group: 'URL of an Instance Group resource'\n    }\n  ],\n  healthChecks: [\n    'URL of an HTTP/HTTPS health check resource'\n  ]\n}, function(err, service, operation, apiResponse) {\n  // `service` is a Service object.\n\n  // `operation` is an Operation object that can be used to check the\n  // of the request.\n});"}],"params":[{"name":"config","description":"<ul> <li>See <a data-custom-type=\"compute\" data-method=\"createService\">compute#createService</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the backend service exists.</p>","source":"lib/compute/service.js#L108","resources":[],"examples":[{"code":"service.exists(function(err, exists) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the backend service exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get a Service object if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p>","source":"lib/compute/service.js#L127","resources":[],"examples":[{"code":"service.get(function(err, service, apiResponse) {\n  // `service` is a Service object.\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the metadata of this backend service.</p>","source":"lib/compute/service.js#L144","resources":[{"title":"BackendService Resource","link":"https://cloud.google.com/compute/docs/reference/v1/backendServices#resource"},{"title":"BackendService: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/backendServices/get"}],"examples":[{"code":"service.getMetadata(function(err, metadata, apiResponse) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The service&#39;s metadata.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the backend service.</p>","source":"lib/compute/service.js#L178","resources":[{"title":"BackendServices: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/backendServices/delete"}],"examples":[{"code":"service.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getHealth","name":"getHealth","type":"instance","description":"<p>Get the most recent health check results.</p>","source":"lib/compute/service.js#L229","resources":[{"title":"BackendServices: getHealth API Documentation","link":"https://cloud.google.com/compute/docs/reference/latest/backendServices/getHealth"}],"examples":[{"code":"service.getHealth({\n  name: 'instance-group-name',\n  zone: 'us-central1-a'\n}, function(err, status, apiResponse) {\n  if (!err) {\n    // status = [\n    //   {\n    //      ipAddress: '...',\n    //      instance: '...',\n    //      healthState: '...',\n    //      port: '...'\n    //   }\n    // ]\n  }\n});"}],"params":[{"name":"group","description":"<ul> <li>The fully-qualified URL of an Instance Group resource.</li> </ul> ","types":["string","object"],"optional":false,"nullable":false},{"name":"group.name","description":"<ul> <li>The name of the Instance Group resource.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"group.zone","description":"<ul> <li>The name of the zone or a Zone object.</li> </ul> ","types":["<a data-custom-type=\"compute/zone\" data-method=\"\">compute/zone</a>","string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.status","description":"<ul> <li>A list of health checks and their corresponding status.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setMetadata","name":"setMetadata","type":"instance","description":"<p>Set the backend service&#39;s metadata.</p>","source":"lib/compute/service.js#L278","resources":[{"title":"BackendService Resource","link":"https://cloud.google.com/compute/docs/reference/v1/backendServices#resource"}],"examples":[{"code":"var metadata = {\n  description: 'New description'\n};\n\nservice.setMetadata(metadata, function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"}],"params":[{"name":"metadata","description":"<ul> <li>See a <a href=\"https://cloud.google.com/compute/docs/reference/v1/backendServices#resource\">BackendService resource</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}