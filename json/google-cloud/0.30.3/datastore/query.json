{"id":"datastore/query","type":"class","name":"Query","description":"","source":"lib/datastore/query.js","parent":"datastore","children":[],"methods":[{"id":"Query","name":"Query","type":"constructor","description":"<p>Build a Query object.</p><p><strong>Queries should be built with <a data-custom-type=\"datastore\" data-method=\"createQuery\">datastore#createQuery</a> and run via <a data-custom-type=\"datastore\" data-method=\"runQuery\">datastore#runQuery</a>.</strong></p>","source":"lib/datastore/query.js#L48","resources":[{"title":"Datastore Queries","link":"http://goo.gl/Cag0r6"}],"examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar datastore = gcloud.datastore();\nvar query = datastore.createQuery('AnimalNamespace', 'Lion');"}],"params":[{"name":"namespace","description":"<ul> <li>Namespace to query entities from.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"kind","description":"<ul> <li>Kind to query.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"autoPaginate","name":"autoPaginate","type":"instance","description":"","source":"lib/datastore/query.js#L91","resources":[],"examples":[{"code":"// Retrieve a list of people related to person \"1234\",\n// disabling auto pagination\nvar query = datastore.createQuery('Person')\n  .hasAncestor(datastore.key(['Person', 1234]))\n  .autoPaginate(false);\n\nfunction callback(err, entities, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results might exist, so we'll manually fetch them\n    datastore.runQuery(nextQuery, callback);\n  }\n}\n\ndatastore.runQuery(query, callback);"}],"params":[{"name":"autoPaginateVal","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"filter","name":"filter","type":"instance","description":"<p>Datastore allows querying on properties. Supported comparison operators are <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, and <code>&gt;=</code>. &quot;Not equal&quot; and <code>IN</code> operators are currently not supported.</p><p><em>To filter by ancestors, see <a data-custom-type=\"datastore/query\" data-method=\"hasAncestor\">datastore/query#hasAncestor</a>.</em></p>","source":"lib/datastore/query.js#L130","resources":[{"title":"Datastore Filters","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Filters"}],"examples":[{"caption":"<p>List all companies that are located in California.</p>","code":"var caliQuery = query.filter('state', 'CA');"},{"caption":"<p>List all companies named Google that have less than 400 employees.</p>","code":"var companyQuery = query\n  .filter('name', 'Google')\n  .filter('size', '<', 400);"},{"caption":"<p>To filter by key, use <code>__key__</code> for the property name. Filter on keys \nstored as properties is not currently supported.</p>","code":"var key = datastore.key(['Company', 'Google']);\nvar keyQuery = query.filter('__key__', key);"}],"params":[{"name":"property","description":"<ul> <li>The field name.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"operator","description":"<ul> <li>Operator (=, &lt;, &gt;, &lt;=, &gt;=). Default: <code>=</code>.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"value","description":"<ul> <li>Value to compare property to.</li> </ul> ","types":[],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"hasAncestor","name":"hasAncestor","type":"instance","description":"<p>Filter a query by ancestors.</p>","source":"lib/datastore/query.js#L156","resources":[{"title":"Datastore Ancestor Filters","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Ancestor_filters"}],"examples":[{"code":"var ancestoryQuery = query.hasAncestor(datastore.key(['Parent', 123]));"}],"params":[{"name":"key","description":"<ul> <li>Key object to filter by.</li> </ul> ","types":["Key"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"order","name":"order","type":"instance","description":"<p>Sort the results by a property name in ascending or descending order. By default, an ascending sort order will be used.</p>","source":"lib/datastore/query.js#L182","resources":[{"title":"Datastore Sort Orders","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Sort_orders"}],"examples":[{"code":"// Sort by size ascendingly.\nvar companiesAscending = companyQuery.order('size');\n\n// Sort by size descendingly.\nvar companiesDescending = companyQuery.order('size', {\n  descending: true\n});"}],"params":[{"name":"property","description":"<ul> <li>The property to order by.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Options object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.descending","description":"<ul> <li>Sort the results by a property name in descending order. Default: <code>false</code>.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"groupBy","name":"groupBy","type":"instance","description":"<p>Group query results by a list of properties.</p>","source":"lib/datastore/query.js#L198","resources":[],"examples":[{"code":"var groupedQuery = companyQuery.groupBy(['name', 'size']);"}],"params":[{"name":"properties","description":"<ul> <li>Properties to group by.</li> </ul> ","types":["array"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"select","name":"select","type":"instance","description":"<p>Retrieve only select properties from the matched entities.</p><p>Queries that select a subset of properties are called Projection Queries.</p>","source":"lib/datastore/query.js#L221","resources":[{"title":"Projection Queries","link":"https://cloud.google.com/datastore/docs/concepts/projectionqueries"}],"examples":[{"code":"// Only retrieve the name property.\nvar selectQuery = companyQuery.select('name');\n\n// Only retrieve the name and size properties.\nvar selectQuery = companyQuery.select(['name', 'size']);"}],"params":[{"name":"fieldNames","description":"<ul> <li>Properties to return from the matched entities.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"start","name":"start","type":"instance","description":"<p>Set a starting cursor to a query.</p>","source":"lib/datastore/query.js#L240","resources":[{"title":"Query Cursors","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors"}],"examples":[{"code":"var cursorToken = 'X';\n\n// Retrieve results starting from cursorToken.\nvar startQuery = companyQuery.start(cursorToken);"}],"params":[{"name":"cursorToken","description":"<ul> <li>The starting cursor token.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"end","name":"end","type":"instance","description":"<p>Set an ending cursor to a query.</p>","source":"lib/datastore/query.js#L259","resources":[{"title":"Query Cursors","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors"}],"examples":[{"code":"var cursorToken = 'X';\n\n// Retrieve results limited to the extent of cursorToken.\nvar endQuery = companyQuery.end(cursorToken);"}],"params":[{"name":"cursorToken","description":"<ul> <li>The ending cursor token.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"limit","name":"limit","type":"instance","description":"<p>Set a limit on a query.</p>","source":"lib/datastore/query.js#L276","resources":[{"title":"Query Limits","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results"}],"examples":[{"code":"// Limit the results to 10 entities.\nvar limitQuery = companyQuery.limit(10);"}],"params":[{"name":"n","description":"<ul> <li>The number of results to limit the query to.</li> </ul> ","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]},{"id":"offset","name":"offset","type":"instance","description":"<p>Set an offset on a query.</p>","source":"lib/datastore/query.js#L293","resources":[{"title":"Query Offsets","link":"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results"}],"examples":[{"code":"// Start from the 101st result.\nvar offsetQuery = companyQuery.offset(100);"}],"params":[{"name":"n","description":"<ul> <li>The offset to start from after the start cursor.</li> </ul> ","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore/query\" data-method=\"\">datastore/query</a>"],"description":""}]}]}