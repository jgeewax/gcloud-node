{"id":"pubsub","type":"class","name":"PubSub","description":"<p class=\"notice\">\n  Google Cloud Pub/Sub is in Alpha status. As a result, it might be changed in backward-incompatible ways and is not recommended for production use. It is not subject to any SLA or deprecation policy.\n</p>\n<p>\n  The <code>gcloud.pubsub</code> method will return a <code>pubsub</code> object, allowing you to create topics, publish messages, subscribe to topics, and more.\n</p>\n<p>\n  To learn more about Pub/Sub, see the <a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub overview</a>.\n</p>\n\n","source":"/lib/pubsub/index.js#L80","parent":null,"children":["./json/v0.15.0/pubsubon","./json/v0.15.0/pubsub/subscriptionon","./json/v0.15.0/pubsub/topicon"],"methods":[{"id":"PubSub","name":"PubSub","type":"constructor","description":"<p><a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub</a> is a reliable, many-to-many, asynchronous messaging service from Google Cloud Platform.</p><p>Note: Google Cloud Pub/Sub API is available as a Limited Preview and the client library we provide is currently experimental. The API and/or the client might be changed in backward-incompatible ways. This API is not subject to any SLA or deprecation policy. Request to be whitelisted to use it by filling the <a href=\"http://goo.gl/sO0wTu\">Limited Preview application form</a>.</p>","source":"/lib/pubsub/index.js#L80","resources":[],"examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'my-project'\n});\n\nvar pubsub = gcloud.pubsub();"}],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getTopics","name":"getTopics","type":"instance","description":"<p>Get a list of the topics registered to your project. You may optionally provide a query object as the first argument to customize the response.</p>","source":"/lib/pubsub/index.js#L119","resources":[],"examples":[{"code":"// Get all topics.\npubsub.getTopics(function(err, topics, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there may be more results to fetch. To do\n  // so, run `pubsub.getTopics(nextQuery, callback);`.\n});\n\n// Customize the query.\npubsub.getTopics({\n  pageSize: 3\n}, function(err, topics, nextQuery, apiResponse) {});"}],"params":[{"name":"query","description":"<ul> <li>Query object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>Page token.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"query.pageSize","description":"<ul> <li>Max number of results to return.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"createTopic","name":"createTopic","type":"instance","description":"<p>Create a topic with the given name.</p>","source":"/lib/pubsub/index.js#L156","resources":[],"examples":[{"code":"pubsub.createTopic('my-new-topic', function(err, topic, apiResponse) {\n  topic.publish('New message!', function(err) {});\n});"}],"params":[{"name":"name","description":"<ul> <li>Name of the topic.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"subscribe","name":"subscribe","type":"instance","description":"<p>Create a subscription to a topic. You may optionally provide an object to customize the subscription.</p><p>Your provided callback will be invoked with an error object if an API error occurred or a <a data-custom-type=\"pubsub/subscription\">pubsub/subscription</a> object.</p>","source":"/lib/pubsub/index.js#L224","resources":[],"examples":[{"caption":"<p>Subscribe to a topic. (Also see <a data-custom-type=\"pubsub/topic\" data-method=\"subscribe\">pubsub/topic#subscribe</a>).</p>","code":"var topic = 'messageCenter';\nvar name = 'newMessages';\n\npubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});"},{"caption":"<p>Customize the subscription.</p>","code":"pubsub.subscribe(topic, name, {\n  ackDeadlineSeconds: 90,\n  autoAck: true,\n  interval: 30\n}, function(err, subscription, apiResponse) {});"},{"caption":"<p>Create a subscription to a topic from another project.</p>","code":"var anotherProject = gcloud.pubsub({\n  projectId: 'another-project'\n});\n\nvar topic = anotherProject.topic('messageCenter');\n\npubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});"}],"params":[{"name":"-","description":"<p>topic - The Topic to create a subscription to.</p>","types":["<a data-custom-type=\"pubsub/topic\">pubsub/topic</a>","string"],"optional":false,"nullable":false},{"name":"subName","description":"<ul> <li>The name of the subscription.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.ackDeadlineSeconds","description":"<ul> <li>The maximum time after receiving a message that you must ack a message before it is redelivered.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.autoAck","description":"<ul> <li>Automatically acknowledge the message once it&#39;s pulled. (default: false)</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"options.interval","description":"<ul> <li>Interval in milliseconds to check for new messages. (default: 10)</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.reuseExisting","description":"<ul> <li>If the subscription already exists, reuse it. The options of the existing subscription are not changed. If  false, attempting to create a subscription that already exists will fail.  (default: false)</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a Topic instance or topic name is not provided.</p>"},{"type":"Error","description":"<p>If a subName is not provided.</p>"}],"returns":[]},{"id":"subscription","name":"subscription","type":"instance","description":"<p>Create a Subscription object in reference to an existing subscription. This command by itself will not run any API requests. You will receive a <a data-custom-type=\"pubsub/subscription\">pubsub/subscription</a> object, which will allow you to interact with your subscription.</p>","source":"/lib/pubsub/index.js#L291","resources":[],"examples":[{"code":"var subscription = pubsub.subscription('my-existing-subscription');\n\n// Register a listener for `message` events.\nsubscription.on('message', function(message) {\n  // Called every time a message is received.\n  // message.id = ID used to acknowledge its receival.\n  // message.data = Contents of the message.\n  // message.attributes = Attributes of the message.\n});"}],"params":[{"name":"name","description":"<ul> <li>The name of the subscription.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.autoAck","description":"<ul> <li>Automatically acknowledge the message once it&#39;s pulled.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"options.interval","description":"<ul> <li>Interval in milliseconds to check for new messages.</li> </ul> ","types":["number"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"}],"returns":[]},{"id":"topic","name":"topic","type":"instance","description":"<p>Create a Topic object to reference an existing topic.</p>","source":"/lib/pubsub/index.js#L317","resources":[],"examples":[{"code":"var topic = pubsub.topic('my-existing-topic');\nvar topic = pubsub.topic('topic-that-maybe-exists', { autoCreate: true });"}],"params":[{"name":"name","description":"<ul> <li>The name of the topic.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create topic if it doesn&#39;t exist. Note that messages published to a topic with no  subscribers will not be delivered.</li> </ul> ","types":["boolean"],"optional":true,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"}],"returns":[]},{"id":"getSubscriptions","name":"getSubscriptions","type":"instance","description":"<p>Get a list of the subscriptions registered to all of your project&#39;s topics. You may optionally provide a query object as the first argument to customize the response.</p><p>Your provided callback will be invoked with an error object if an API error occurred or an array of <a data-custom-type=\"pubsub/subscription\">pubsub/subscription</a> objects.</p><p>To get subscriptions for a topic, see <a data-custom-type=\"pubsub/topic\">pubsub/topic</a>.</p>","source":"/lib/pubsub/index.js#L363","resources":[],"examples":[{"code":"var callback = function(err, subscriptions, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there may be more results to fetch. To do\n  // so, run `pubsub.getSubscriptions(nextQuery, callback);`.\n};"},{"caption":"<p>Get all subscriptions for this project.</p>","code":"pubsub.getSubscriptions(callback);"},{"caption":"<p>Customize the query.</p>","code":"pubsub.getSubscriptions({\n  pageSize: 3\n}, callback);"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.topic","description":"<ul> <li>The name of the topic to list subscriptions from.</li> </ul> ","types":["string","<a data-custom-type=\"pubsub/topic\">pubsub/topic</a>"],"optional":false,"nullable":false},{"name":"options.pageSize","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.pageToken","description":"<ul> <li>Page token.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}