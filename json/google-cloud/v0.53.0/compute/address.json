{"id":"compute/address","type":"class","name":"Address","overview":"<p>\n  This class allows you interact with Compute Engine.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/compute</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/0.53.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/compute/src/address.js","parent":"compute","children":[],"methods":[{"id":"Address","name":"Address","type":"constructor","description":"<p>An Address object allows you to interact with a Google Compute Engine address.</p>","source":"packages/compute/src/address.js#L46","resources":[{"title":"Instances and Networks","link":"https://cloud.google.com/compute/docs/instances-and-network"},{"title":"Address Resource","link":"https://cloud.google.com/compute/docs/reference/v1/addresses"}],"examples":[{"code":"var region = gce.region('region-name');\n\nvar address = region.address('address1');"}],"params":[],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create an address.</p>","source":"packages/compute/src/address.js#L70","resources":[],"examples":[{"code":"address.create(function(err, address, operation, apiResponse) {\n  // `address` is an Address object.\n\n  // `operation` is an Operation object that can be used to check the\n  // of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"address.create().then(function(data) {\n  var address = data[0];\n  var operation = data[1];\n  var apiResponse = data[2];\n});"}],"params":[{"name":"options","description":"<ul> <li>See <a data-custom-type=\"compute\" data-method=\"createAddress\">compute#createAddress</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the address exists.</p>","source":"packages/compute/src/address.js#L90","resources":[],"examples":[{"code":"address.exists(function(err, exists) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"address.exists().then(function(data) {\n  var exists = data[0];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the address exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get an address if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p>","source":"packages/compute/src/address.js#L117","resources":[],"examples":[{"code":"address.get(function(err, address, apiResponse) {\n  // `address` is an Address object.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"address.get().then(function(data) {\n  var address = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the metadata of this address.</p>","source":"packages/compute/src/address.js#L142","resources":[{"title":"Address Resource","link":"https://cloud.google.com/compute/docs/reference/v1/addresses"},{"title":"Addresses: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/addresses/get"}],"examples":[{"code":"address.getMetadata(function(err, metadata, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"address.getMetadata().then(function(data) {\n  var metadata = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The address&#39;s metadata.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the address.</p>","source":"packages/compute/src/address.js#L184","resources":[{"title":"Addresses: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/addresses/delete"}],"examples":[{"code":"address.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"address.delete().then(function(data) {\n  var operation = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"address.json"}