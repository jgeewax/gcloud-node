{"id":"pubsub/subscription","type":"class","name":"Subscription","overview":"<p>\n  This class allows you interact with Cloud Pub/Sub.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/pubsub</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar pubsub = gcloud.pubsub();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/0.53.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/pubsub/src/subscription.js","parent":"pubsub","children":[],"methods":[{"id":"Subscription","name":"Subscription","type":"constructor","description":"<p>A Subscription object will give you access to your Cloud Pub/Sub subscription.</p><p>Subscriptions are sometimes retrieved when using various methods:</p><ul> <li><a data-custom-type=\"pubsub\" data-method=\"getSubscriptions\">pubsub#getSubscriptions</a></li> <li><a data-custom-type=\"pubsub/topic\" data-method=\"getSubscriptions\">pubsub/topic#getSubscriptions</a></li> <li><a data-custom-type=\"pubsub/topic\" data-method=\"subscribe\">pubsub/topic#subscribe</a></li> </ul> <p>Subscription objects may be created directly with:</p><ul> <li><a data-custom-type=\"pubsub/topic\" data-method=\"subscription\">pubsub/topic#subscription</a></li> </ul> <p>All Subscription objects are instances of an <a href=\"http://nodejs.org/api/events.html\">EventEmitter</a>. The subscription will pull for messages automatically as long as there is at least one listener assigned for the <code>message</code> event.</p>","source":"packages/pubsub/src/subscription.js#L152","resources":[],"examples":[{"caption":"<p>From <a data-custom-type=\"pubsub\" data-method=\"getSubscriptions\">pubsub#getSubscriptions</a>:</p>","code":"pubsub.getSubscriptions(function(err, subscriptions) {\n  // `subscriptions` is an array of Subscription objects.\n});"},{"caption":"<p>From <a data-custom-type=\"pubsub/topic\" data-method=\"getSubscriptions\">pubsub/topic#getSubscriptions</a>:</p>","code":"var topic = pubsub.topic('my-topic');\ntopic.getSubscriptions(function(err, subscriptions) {\n  // `subscriptions` is an array of Subscription objects.\n});"},{"caption":"<p>From <a data-custom-type=\"pubsub/topic\" data-method=\"subscribe\">pubsub/topic#subscribe</a>:</p>","code":"var topic = pubsub.topic('my-topic');\ntopic.subscribe('new-subscription', function(err, subscription) {\n  // `subscription` is a Subscription object.\n});"},{"caption":"<p>From <a data-custom-type=\"pubsub/topic\" data-method=\"subscription\">pubsub/topic#subscription</a>:</p>","code":"var topic = pubsub.topic('my-topic');\nvar subscription = topic.subscription('my-subscription');\n// `subscription` is a Subscription object."},{"caption":"<p>Once you have obtained a subscription object, you may begin to register \nlisteners. This will automatically trigger pulling for messages.</p>","code":"// Register an error handler.\nsubscription.on('error', function(err) {});\n\n// Register a listener for `message` events.\nfunction onMessage(message) {\n  // Called every time a message is received.\n\n  // message.id = ID of the message.\n  // message.ackId = ID used to acknowledge the message receival.\n  // message.data = Contents of the message.\n  // message.attributes = Attributes of the message.\n  // message.timestamp = Timestamp when Pub/Sub received the message.\n\n  // Ack the message:\n  // message.ack(callback);\n\n  // Skip the message. This is useful with `maxInProgress` option when\n  // creating your subscription. This doesn't ack the message, but allows\n  // more messages to be retrieved if your limit was hit.\n  // message.skip();\n}\nsubscription.on('message', onMessage);\n\n// Remove the listener from receiving `message` events.\nsubscription.removeListener('message', onMessage);"}],"params":[],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the subscription exists.</p>","source":"packages/pubsub/src/subscription.js#L177","resources":[],"examples":[{"code":"subscription.exists(function(err, exists) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.exists().then(function(data) {\n  var exists = data[0];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the subscription exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get a subscription if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p><p><strong><code>autoCreate</code> is only available if you accessed this object through <a data-custom-type=\"pubsub/topic\" data-method=\"subscription\">pubsub/topic#subscription</a>.</strong></p>","source":"packages/pubsub/src/subscription.js#L207","resources":[],"examples":[{"code":"subscription.get(function(err, subscription, apiResponse) {\n  // `subscription.metadata` has been populated.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.get().then(function(data) {\n  var subscription = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the metadata for the subscription.</p>","source":"packages/pubsub/src/subscription.js#L232","resources":[{"title":"Subscriptions: get API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/get"}],"examples":[{"code":"subscription.getMetadata(function(err, metadata, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.getMetadata().then(function(data) {\n  var metadata = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>Metadata of the subscription from the API.</li> </ul> ","types":["object"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>Raw API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create a subscription.</p><p><strong>This is only available if you accessed this object through <a data-custom-type=\"pubsub/topic\" data-method=\"subscription\">pubsub/topic#subscription</a>.</strong></p>","source":"packages/pubsub/src/subscription.js#L277","resources":[],"examples":[{"code":"subscription.create(function(err, subscription, apiResponse) {\n  if (!err) {\n    // The subscription was created successfully.\n  }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.create().then(function(data) {\n  var subscription = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"config","description":"<ul> <li>See <a data-custom-type=\"pubsub\" data-method=\"subscribe\">pubsub#subscribe</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"iam","name":"iam","type":"instance","description":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a> allows you to set permissions on individual resources and offers a wider range of roles: editor, owner, publisher, subscriber, and viewer. This gives you greater flexibility and allows you to set more fine-grained access control.</p><p><em>The IAM access control features described in this document are Beta, including the API methods to get and set IAM policies, and to test IAM permissions. Cloud Pub/Sub&#39;s use of IAM features is not covered by any SLA or deprecation policy, and may be subject to backward-incompatible changes.</em></p>","source":"packages/pubsub/src/subscription.js#L336","resources":[{"title":"Access Control Overview","link":"https://cloud.google.com/pubsub/access_control"},{"title":"What is Cloud IAM?","link":"https://cloud.google.com/iam/"}],"examples":[{"caption":"<p>Get the IAM policy for your subscription.</p>","code":"subscription.iam.getPolicy(function(err, policy) {\n  console.log(policy);\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.iam.getPolicy().then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[],"exceptions":[],"returns":[]},{"id":"ack","name":"ack","type":"instance","description":"<p>Acknowledge to the backend that the message was retrieved. You must provide either a single ackId or an array of ackIds.</p>","source":"packages/pubsub/src/subscription.js#L435","resources":[{"title":"Subscriptions: acknowledge API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/acknowledge"}],"examples":[{"code":"var ackId = 'ePHEESyhuE8e...';\n\nsubscription.ack(ackId, function(err, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.ack(ackId).then(function(data) {\n  var apiResponse = data[0];\n});"}],"params":[{"name":"ackIds","description":"<ul> <li>An ackId or array of ackIds.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.timeout","description":"<ul> <li>Set a maximum amount of time in milliseconds before giving up if no response is received.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If at least one ackId is not provided.</p>"}],"returns":[]},{"id":"createSnapshot","name":"createSnapshot","type":"instance","description":"<p>Create a snapshot with the given name.</p>","source":"packages/pubsub/src/subscription.js#L509","resources":[],"examples":[{"code":"var callback = function(err, snapshot, apiResponse) {\n  if (!err) {\n    // The snapshot was created successfully.\n  }\n};\n\nsubscription.createSnapshot('my-snapshot', callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.createSnapshot('my-snapshot').then(function(data) {\n  var snapshot = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"name","description":"<ul> <li>Name of the snapshot.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error from the API call, may be null.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.snapshot","description":"<ul> <li>The newly created snapshot.</li> </ul> ","types":["<a data-custom-type=\"pubsub/snapshot\" data-method=\"\">pubsub/snapshot</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response from the service.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the subscription. Pull requests from the current subscription will be errored once unsubscription is complete.</p>","source":"packages/pubsub/src/subscription.js#L590","resources":[{"title":"Subscriptions: delete API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/delete"}],"examples":[{"code":"subscription.delete(function(err, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.delete().then(function(data) {\n  var apiResponse = data[0];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>Raw API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"pull","name":"pull","type":"instance","description":"<p>Pull messages from the subscribed topic. If messages were found, your callback is executed with an array of message objects.</p><p>Note that messages are pulled automatically once you register your first event listener to the subscription, thus the call to <code>pull</code> is handled for you. If you don&#39;t want to start pulling, simply don&#39;t register a <code>subscription.on(&#39;message&#39;, function() {})</code> event handler.</p>","source":"packages/pubsub/src/subscription.js#L674","resources":[{"title":"Subscriptions: pull API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/pull"}],"examples":[{"caption":"<p>Pull all available messages.</p>","code":"subscription.pull(function(err, messages) {\n  // messages = [\n  //   {\n  //     ackId: '',     // ID used to acknowledge its receival.\n  //     id: '',        // Unique message ID.\n  //     data: '',      // Contents of the message.\n  //     attributes: {} // Attributes of the message.\n  //\n  //     Helper functions:\n  //     ack(callback): // Ack the message.\n  //     skip():        // Free up 1 slot on the sub's maxInProgress value.\n  //   },\n  //   // ...\n  // ]\n});"},{"caption":"<p>Pull a single message.</p>","code":"var opts = {\n  maxResults: 1\n};\n\nsubscription.pull(opts, function(err, messages, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.pull(opts).then(function(data) {\n  var messages = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.maxResults","description":"<ul> <li>Limit the amount of messages pulled.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.returnImmediately","description":"<ul> <li>If set, the system will respond immediately. Otherwise, wait until new messages are available. Returns if  timeout is reached.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"seek","name":"seek","type":"instance","description":"<p>Seeks an existing subscription to a point in time or a given snapshot.</p>","source":"packages/pubsub/src/subscription.js#L763","resources":[],"examples":[{"code":"var callback = function(err, resp) {\n  if (!err) {\n    // Seek was successful.\n  }\n};\n\nsubscription.seek('my-snapshot', callback);"},{"caption":"<p>Alternatively, to specify a certain point in time, you can provide a Date \nobject.</p>","code":"var date = new Date('October 21 2015');\n\nsubscription.seek(date, callback);"}],"params":[{"name":"snapshot","description":"<ul> <li>The point to seek to. This will accept the name of the snapshot or a Date object.</li> </ul> ","types":["string","date"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error from the API call, may be null.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>The full API response from the service.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setAckDeadline","name":"setAckDeadline","type":"instance","description":"<p>Modify the ack deadline for a specific message. This method is useful to indicate that more time is needed to process a message by the subscriber, or to make the message available for redelivery if the processing was interrupted.</p>","source":"packages/pubsub/src/subscription.js#L816","resources":[{"title":"Subscriptions: modifyAckDeadline API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/modifyAckDeadline"}],"examples":[{"code":"var options = {\n  ackIds: ['abc'],\n  seconds: 10 // Expire in 10 seconds from call.\n};\n\nsubscription.setAckDeadline(options, function(err, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subscription.setAckDeadline(options).then(function(data) {\n  var apiResponse = data[0];\n});"}],"params":[{"name":"options","description":"<ul> <li>The configuration object.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"options.ackIds","description":"<ul> <li>The ack id(s) to change.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"options.seconds","description":"<ul> <li>Number of seconds after call is made to set the deadline of the ack.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["Function"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"snapshot","name":"snapshot","type":"instance","description":"<p>Create a Snapshot object. See <a data-custom-type=\"pubsub/subscription\" data-method=\"createSnapshot\">pubsub/subscription#createSnapshot</a> to create a snapshot.</p>","source":"packages/pubsub/src/subscription.js#L847","resources":[],"examples":[{"code":"var snapshot = subscription.snapshot('my-snapshot');"}],"params":[{"name":"name","description":"<ul> <li>The name of the snapshot.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"}],"returns":[{"types":["<a data-custom-type=\"pubsub/snapshot\" data-method=\"\">pubsub/snapshot</a>"],"description":""}]},{"id":"iam.getPolicy","name":"iam.getPolicy","type":"instance","description":"<p>Get the IAM policy</p>","source":"packages/pubsub/src/iam.js#L112","resources":[{"title":"Topics: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/getIamPolicy"},{"title":"Subscriptions: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/getIamPolicy"}],"examples":[{"code":"topic.iam.getPolicy(function(err, policy, apiResponse) {});\n\nsubscription.iam.getPolicy(function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.getPolicy().then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"iam.setPolicy","name":"iam.setPolicy","type":"instance","description":"<p>Set the IAM policy</p>","source":"packages/pubsub/src/iam.js#L165","resources":[{"title":"Topics: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/setIamPolicy"},{"title":"Subscriptions: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/setIamPolicy"},{"title":"Policy","link":"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy"}],"examples":[{"code":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});\n\nsubscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.setPolicy(myPolicy).then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"policy.bindings","description":"<ul> <li>Bindings associate members with roles.</li> </ul> ","types":["array"],"optional":true,"nullable":false},{"name":"policy.rules","description":"<ul> <li>Rules to be applied to the policy.</li> </ul> ","types":["object[]"],"optional":true,"nullable":false},{"name":"policy.etag","description":"<ul> <li>Etags are used to perform a read-modify-write.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The updated policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no policy is provided.</p>"}],"returns":[]},{"id":"iam.testPermissions","name":"iam.testPermissions","type":"instance","description":"<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>","source":"packages/pubsub/src/iam.js#L238","resources":[{"title":"Topics: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/testIamPermissions"},{"title":"Subscriptions: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/testIamPermissions"},{"title":"Permissions Reference","link":"https://cloud.google.com/pubsub/access_control#permissions"}],"examples":[{"caption":"<p>Test a single permission.</p>","code":"var test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.topics.update\": true\n  // }\n});"},{"caption":"<p>Test several permissions at once.</p>","code":"var tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\nsubscription.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.subscriptions.consume\": true,\n  //   \"pubsub.subscriptions.update\": false\n  // }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"topic.iam.testPermissions(test).then(function(data) {\n  var permissions = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"permissions","description":"<ul> <li>The permission(s) to test for.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.permissions","description":"<ul> <li>A subset of permissions that the caller is allowed</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If permissions are not provided.</p>"}],"returns":[]}],"path":"subscription.json"}