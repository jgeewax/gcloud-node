{"id":"search/index","type":"class","name":"Index","description":null,"source":"/lib/search/index-class.js#L55","parent":"search","children":[],"methods":[{"id":"Index","name":"Index","type":"constructor","description":"<p>Create an Index object to interact with a Google Cloud Search index.</p>","source":"/lib/search/index-class.js#L55","resources":[],"examples":[{"code":"var gcloud = require('gcloud');\n\nvar search = gcloud.search({\n  projectId: 'grape-spaceship-123'\n});\n\nvar index = search.index('records');"}],"params":[{"name":"id","description":"<ul> <li>ID of the index.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"createDocument","name":"createDocument","type":"instance","description":"<p>Create a document in the index.</p>","source":"/lib/search/index-class.js#L114","resources":[{"title":"Documents: create API Documentation","link":"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/create"}],"examples":[{"caption":"<p>A document can be built using the <a data-custom-type=\"search/document\">search/document</a> object.</p>","code":"var newDocument = index.document('new-document-id');\nnewDocument.addField('person').addTextValue('Stephen');\n\nindex.createDocument(newDocument, function(err, document, apiResponse) {});"},{"caption":"<p>A document can also be created from a properly-formed object as outlined \nin the <a href=\"https://goo.gl/AYhSgI\">official docs</a>. \nThis will create the same resulting document object as the example above.</p>","code":"var newDocument = {\n  docId: 'new-document-id',\n  fields: {\n    person: {\n      values: [\n        {\n          stringFormat: 'TEXT',\n          stringValue: 'Stephen'\n        }\n      ]\n    }\n  }\n};\n\nindex.createDocument(newDocument, function(err, document, apiResponse) {});"},{"caption":"<p>Specifying an ID for your new document isn't required. In both of the \nscenarios above, simply don't specify 'new-document-id' and one will be \ngenerated for you.</p>"}],"params":[{"name":"documentObj","description":"<ul> <li>A properly-formed Document object as outlined in the  <a href=\"https://goo.gl/AYhSgI\">official docs</a>.</li> </ul> ","types":["object","<a data-custom-type=\"search/document\">search/document</a>"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.document","description":"<ul> <li>The Document object.</li> </ul> ","types":["<a data-custom-type=\"search/document\">search/document</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"document","name":"document","type":"instance","description":"<p>Access a <a data-custom-type=\"search/document\">search/document</a> object.</p>","source":"/lib/search/index-class.js#L143","resources":[],"examples":[{"code":"var myDocument = index.document('my-document');"}],"params":[{"name":"id","description":"<ul> <li>The id of the document.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getDocuments","name":"getDocuments","type":"instance","description":"<p>Get <a data-custom-type=\"search/document\">search/document</a> objects for all of the documents in this index.</p>","source":"/lib/search/index-class.js#L217","resources":[{"title":"Documents: list API Documentation","link":"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/list"}],"examples":[{"code":"index.getDocuments(function(err, documents) {\n  if (!err) {\n    // documents is an array of Document objects.\n  }\n});"},{"caption":"<p>To control how many API requests are made and page through the results \nmanually, set <code>autoPaginate</code> to <code>false</code>.</p>","code":"function onApiResponse(err, documents, nextQuery, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // `documents` is an array of Document objects.\n\n  if (nextQuery) {\n    index.getDocuments(nextQuery, onApiResponse);\n  }\n}\n\nindex.getDocuments({\n  autoPaginate: false\n}, onApiResponse);"},{"caption":"<p>Get the documents as a readable object stream.</p>","code":"index.getDocuments()\n  .on('error', console.error)\n  .on('data', function(document) {\n    // document is a Document object.\n  })\n  .on('end', function() {\n    // All documents retrieved.\n  });"},{"caption":"<p>If you anticipate many results, you can end a stream early to prevent \nunnecessary processing and API requests.</p>","code":"index.getDocuments()\n  .on('data', function(document) {\n    this.end();\n  });"}],"params":[{"name":"query","description":"<ul> <li>Query object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.autoPaginate","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"query.pageSize","description":"<ul> <li>The maximum number of documents to return per page. If not specified, 100 documents are returned per page.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>A previously-returned page token representing part of the larger set of results to view.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"query.view","description":"<ul> <li>One of <code>INDEX_VIEW_UNSPECIFIED</code>, <code>ID_ONLY</code>, or <code>FULL</code>. See <a href=\"https://goo.gl/sY6Lpt\">this table</a> for more details.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.documents","description":"<ul> <li>A list of Documents.</li> </ul> ","types":["<a data-custom-type=\"search/document[]\">search/document[]</a>"],"optional":false,"nullable":false},{"name":"callback.nextQuery","description":"<ul> <li>If present, query with this object to check for more results.</li> </ul> ","types":["object"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"search","name":"search","type":"instance","description":"<p>Run a query against the documents in this index.</p>","source":"/lib/search/index-class.js#L312","resources":[{"title":"Indexes: search API Documentation","link":"https://cloud.google.com/search/reference/rest/v1/projects/indexes/search"}],"examples":[{"code":"var query = 'person:stephen';\n\nindex.search(query, function(err, documents) {\n  if (!err) {\n    // `documents` is an array of Document objects.\n  }\n});"},{"caption":"<p>To control how many API requests are made and page through the results \nmanually, set <code>autoPaginate</code> to <code>false</code>.</p>","code":"function onApiResponse(err, documents, nextQuery, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // `documents` is an array of Document objects.\n\n  if (nextQuery) {\n    index.search(nextQuery, onApiResponse);\n  }\n}\n\nindex.search({\n  autoPaginate: false,\n  query: query\n}, onApiResponse);"},{"caption":"<p>Get the documents that match your query as a readable object stream.</p>","code":"index.search(query)\n  .on('error', console.error)\n  .on('data', function(document) {\n    // document is a Document object.\n  })\n  .on('end', function() {\n    // All search results retrieved.\n  });"}],"params":[{"name":"query","description":"<ul> <li>A query object or simply a string query.</li> </ul> ","types":["string","object"],"optional":false,"nullable":false},{"name":"query.autoPaginate","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"query.pageSize","description":"<ul> <li>The maximum number of documents to return per page. If not specified, 100 documents are returned per page.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>A previously-returned page token representing part of the larger set of results to view.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"query.query","description":"<p>= A query string using the syntax described by the <a href=\"https://goo.gl/2SYl3S\">official docs</a>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.documents","description":"<ul> <li>A list of Documents</li> </ul> ","types":["<a data-custom-type=\"search/document[]\">search/document[]</a>"],"optional":false,"nullable":false},{"name":"callback.nextQuery","description":"<ul> <li>If present, query with this object to check for more results.</li> </ul> ","types":["object"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"error","description":"<p>If a query string or object isn&#39;t provided.</p>"}],"returns":[]}]}