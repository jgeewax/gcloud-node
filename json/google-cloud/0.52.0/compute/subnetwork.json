{"id":"compute/subnetwork","type":"class","name":"Subnetwork","overview":"<p>\n  This class allows you interact with Compute Engine.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/compute</code>.\n  </p>\n  <p>\n    The instructions below are here for reference, however, we will soon stop releasing updates to the bundled package.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/0.52.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/compute/src/subnetwork.js","parent":"compute","children":[],"methods":[{"id":"Subnetwork","name":"Subnetwork","type":"constructor","description":"<p>An Subnetwork object allows you to interact with a Google Compute Engine subnetwork.</p>","source":"packages/compute/src/subnetwork.js#L46","resources":[{"title":"Subnetworks Overview","link":"https://cloud.google.com/compute/docs/subnetworks"},{"title":"Subnetwork Resource","link":"https://cloud.google.com/compute/docs/reference/v1/subnetworks"}],"examples":[{"code":"var region = gce.region('region-name');\n\nvar subnetwork = region.subnetwork('subnetwork1');"}],"params":[],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create a subnetwork.</p>","source":"packages/compute/src/subnetwork.js#L79","resources":[],"examples":[{"code":"var config = {\n  // ...\n};\n\nfunction callback(err, subnetwork, operation, apiResponse) {\n  // `subnetwork` is a Subnetwork object.\n\n  // `operation` is an Operation object that can be used to check the\n  // status of the request.\n}\n\nsubnetwork.create(config, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subnetwork.create(config).then(function(data) {\n  var subnetwork = data[0];\n  var operation = data[1];\n  var apiResponse = data[2];\n});"}],"params":[{"name":"config","description":"<ul> <li>See <a data-custom-type=\"compute/region\" data-method=\"createSubnetwork\">compute/region#createSubnetwork</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the subnetwork exists.</p>","source":"packages/compute/src/subnetwork.js#L99","resources":[],"examples":[{"code":"subnetwork.exists(function(err, exists) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subnetwork.exists().then(function(data) {\n  var exists = data[0];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the subnetwork exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get a subnetwork if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p>","source":"packages/compute/src/subnetwork.js#L126","resources":[],"examples":[{"code":"subnetwork.get(function(err, subnetwork, apiResponse) {\n  // `subnetwork` is a Subnetwork object.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subnetwork.get().then(function(data) {\n  var subnetwork = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the metadata of this subnetwork.</p>","source":"packages/compute/src/subnetwork.js#L151","resources":[{"title":"Subnetwork Resource","link":"https://cloud.google.com/compute/docs/reference/v1/subnetwork"},{"title":"Subnetwork: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/subnetwork/get"}],"examples":[{"code":"subnetwork.getMetadata(function(err, metadata, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subnetwork.getMetadata().then(function(data) {\n  var metadata = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The subnetwork&#39;s metadata.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the subnetwork.</p>","source":"packages/compute/src/subnetwork.js#L190","resources":[{"title":"Subnetworks: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/subnetworks/delete"}],"examples":[{"code":"subnetwork.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"subnetwork.delete().then(function(data) {\n  var operation = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"subnetwork.json"}