{"id":"pubsub/topic","type":"class","name":"Topic","description":"","source":"lib/pubsub/topic.js","parent":"pubsub","children":[],"methods":[{"id":"Topic","name":"Topic","type":"constructor","description":"<p>A Topic object allows you to interact with a Google Cloud Pub/Sub topic.</p>","source":"lib/pubsub/topic.js#L64","resources":[],"examples":[{"code":"var pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123'\n});\n\nvar topic = pubsub.topic('my-topic');"}],"params":[],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create a topic.</p>","source":"lib/pubsub/topic.js#L81","resources":[],"examples":[{"code":"topic.create(function(err, topic, apiResponse) {\n  if (!err) {\n    // The topic was created successfully.\n  }\n});"}],"params":[{"name":"config","description":"<ul> <li>See <a data-custom-type=\"pubsub\" data-method=\"createTopic\">pubsub#createTopic</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the topic. This will not delete subscriptions to this topic.</p>","source":"lib/pubsub/topic.js#L93","resources":[{"title":"Topics: delete API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/delete"}],"examples":[{"code":"topic.delete(function(err, apiResponse) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the topic exists.</p>","source":"lib/pubsub/topic.js#L114","resources":[],"examples":[{"code":"topic.exists(function(err, exists) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the topic exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get a topic if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p>","source":"lib/pubsub/topic.js#L133","resources":[],"examples":[{"code":"topic.get(function(err, topic, apiResponse) {\n  // `topic.metadata` has been populated.\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the official representation of this topic from the API.</p>","source":"lib/pubsub/topic.js#L146","resources":[{"title":"Topics: get API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/get"}],"examples":[],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The metadata of the Topic.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"iam","name":"iam","type":"instance","description":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a> allows you to set permissions on individual resources and offers a wider range of roles: editor, owner, publisher, subscriber, and viewer. This gives you greater flexibility and allows you to set more fine-grained access control.</p><p><em>The IAM access control features described in this document are Beta, including the API methods to get and set IAM policies, and to test IAM permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by any SLA or deprecation policy, and may be subject to backward-incompatible changes.</em></p>","source":"lib/pubsub/topic.js#L190","resources":[{"title":"Access Control Overview","link":"https://cloud.google.com/pubsub/access_control"},{"title":"What is Cloud IAM?","link":"https://cloud.google.com/iam/"}],"examples":[{"caption":"<p>Get the IAM policy for your topic.</p>","code":"topic.iam.getPolicy(function(err, policy) {\n  console.log(policy);\n});"}],"params":[],"exceptions":[],"returns":[]},{"id":"getSubscriptions","name":"getSubscriptions","type":"instance","description":"<p>Get a list of the subscriptions registered to this topic. You may optionally provide a query object as the first argument to customize the response.</p><p>Your provided callback will be invoked with an error object if an API error occurred or an array of <a data-custom-type=\"pubsub/subscription\" data-method=\"\">pubsub/subscription</a> objects.</p>","source":"lib/pubsub/topic.js#L281","resources":[{"title":"Subscriptions: list API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics.subscriptions/list"}],"examples":[{"code":"var callback = function(err, subscriptions, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there may be more results to fetch. To do\n  // so, run `topic.getSubscriptions(nextQuery, callback);`.\n};\n\n// Get all subscriptions for this topic.\ntopic.getSubscriptions(callback);\n\n// Customize the query.\ntopic.getSubscriptions({\n  pageSize: 3\n}, callback);"},{"caption":"<p>Get the subscriptions for this topic as a readable object stream.</p>","code":"topic.getSubscriptions()\n  .on('error', console.error)\n  .on('data', function(subscription) {\n    // subscription is a Subscription object.\n  })\n  .on('end', function() {\n    // All subscriptions retrieved.\n  });"},{"caption":"<p>If you anticipate many results, you can end a stream early to prevent \nunnecessary processing and API requests.</p>","code":"topic.getSubscriptions()\n  .on('data', function(subscription) {\n    this.end();\n  });"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.autoPaginate","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"options.maxApiCalls","description":"<ul> <li>Maximum number of API calls to make.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.maxResults","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.pageSize","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.pageToken","description":"<ul> <li>Page token.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"publish","name":"publish","type":"instance","description":"<p>Publish the provided message or array of messages. On success, an array of messageIds is returned in the response.</p>","source":"lib/pubsub/topic.js#L346","resources":[{"title":"Topics: publish API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/publish"}],"examples":[{"code":"topic.publish({\n  data: 'Hello, world!'\n}, function(err, messageIds, apiResponse) {});"},{"caption":"<p>The data property can be a JSON object as well.</p>","code":"var registerMessage = {\n  data: {\n    userId: 3,\n    name: 'Stephen',\n    event: 'new user'\n  },\n  attributes: {\n    key: 'value',\n    hello: 'world'\n  }\n};\n\ntopic.publish(registerMessage, function(err, messageIds, apiResponse) {});"},{"caption":"<p>You can publish a batch of messages at once by supplying an array.</p>","code":"var purchaseMessage = {\n  data: {\n    userId: 3,\n    product: 'computer',\n    event: 'purchase'\n  }\n};\n\ntopic.publish([\n  registerMessage,\n  purchaseMessage\n], function(err, messageIds, apiResponse) {});"}],"params":[{"name":"message","description":"<ul> <li>The message(s) to publish.</li> </ul> ","types":["object","object[]"],"optional":false,"nullable":false},{"name":"message.data","description":"<ul> <li>The contents of the message.</li> </ul> ","types":[],"optional":false,"nullable":false},{"name":"message.attributes","description":"<ul> <li>Key/value pair of attributes to apply to the message. All values must be strings.</li> </ul> ","types":["array"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no message is provided.</p>"},{"type":"Error","description":"<p>If a message is missing a data property.</p>"}],"returns":[]},{"id":"subscribe","name":"subscribe","type":"instance","description":"<p>Create a subscription to this topic. You may optionally provide an object to customize the subscription.</p><p>Your provided callback will be invoked with an error object if an API error occurred or a <a data-custom-type=\"pubsub/subscription\" data-method=\"\">pubsub/subscription</a> object.</p>","source":"lib/pubsub/topic.js#L420","resources":[{"title":"Subscriptions: create API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create"}],"examples":[{"code":"// Without specifying any options.\ntopic.subscribe('newMessages', function(err, subscription, apiResponse) {});\n\n// With options.\ntopic.subscribe('newMessages', {\n  ackDeadlineSeconds: 90,\n  autoAck: true,\n  interval: 30\n}, function(err, subscription, apiResponse) {});"}],"params":[{"name":"subName","description":"<ul> <li>The name of the subscription.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.ackDeadlineSeconds","description":"<ul> <li>The maximum time after receiving a message that you must ack a message before it is redelivered.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"options.autoAck","description":"<ul> <li>Automatically acknowledge the message once it&#39;s pulled. (default: false)</li> </ul> ","types":["boolean"],"optional":true,"nullable":false},{"name":"options.encoding","description":"<ul> <li>When pulling for messages, this type is used when converting a message&#39;s data to a string. (default: &#39;utf-8&#39;)</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.interval","description":"<ul> <li>Interval in milliseconds to check for new messages. (default: 10)</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"options.maxInProgress","description":"<ul> <li>Maximum messages to consume simultaneously.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.reuseExisting","description":"<ul> <li>If the subscription already exists, reuse it. The options of the existing subscription are not changed. If  false, attempting to create a subscription that already exists will fail.  (default: false)</li> </ul> ","types":["boolean"],"optional":true,"nullable":false},{"name":"options.timeout","description":"<ul> <li>Set a maximum amount of time in milliseconds on an HTTP request to pull new messages to wait for a  response before the connection is broken.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"subscription","name":"subscription","type":"instance","description":"<p>Create a Subscription object. This command by itself will not run any API requests. You will receive a <a data-custom-type=\"pubsub/subscription\" data-method=\"\">pubsub/subscription</a> object, which will allow you to interact with a subscription.</p>","source":"lib/pubsub/topic.js#L448","resources":[],"examples":[{"code":"var subscription = topic.subscription('my-subscription');\n\n// Register a listener for `message` events.\nsubscription.on('message', function(message) {\n  // Called every time a message is received.\n  // message.id = ID used to acknowledge its receival.\n  // message.data = Contents of the message.\n  // message.attributes = Attributes of the message.\n});"}],"params":[{"name":"name","description":"<ul> <li>Name of the subscription.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.autoAck","description":"<ul> <li>Automatically acknowledge the message once it&#39;s pulled.</li> </ul> ","types":["boolean"],"optional":true,"nullable":false},{"name":"options.interval","description":"<ul> <li>Interval in milliseconds to check for new messages.</li> </ul> ","types":["number"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"pubsub/subscription\" data-method=\"\">pubsub/subscription</a>"],"description":""}]},{"id":"iam.getPolicy","name":"iam.getPolicy","type":"instance","description":"<p>Get the IAM policy</p>","source":"lib/pubsub/iam.js#L112","resources":[{"title":"Topics: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy"},{"title":"Subscriptions: getIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy"}],"examples":[{"code":"topic.iam.getPolicy(function(err, policy, apiResponse) {});\n\nsubscription.iam.getPolicy(function(err, policy, apiResponse) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"iam.setPolicy","name":"iam.setPolicy","type":"instance","description":"<p>Set the IAM policy</p>","source":"lib/pubsub/iam.js#L157","resources":[{"title":"Topics: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy"},{"title":"Subscriptions: setIamPolicy API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy"},{"title":"Policy","link":"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy"}],"examples":[{"code":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});\n\nsubscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});"}],"params":[{"name":"policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"policy.bindings","description":"<ul> <li>Bindings associate members with roles.</li> </ul> ","types":["array"],"optional":true,"nullable":false},{"name":"policy.rules","description":"<ul> <li>Rules to be applied to the policy.</li> </ul> ","types":["object[]"],"optional":true,"nullable":false},{"name":"policy.etag","description":"<ul> <li>Etags are used to perform a read-modify-write.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The updated policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no policy is provided.</p>"}],"returns":[]},{"id":"iam.testPermissions","name":"iam.testPermissions","type":"instance","description":"<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>","source":"lib/pubsub/iam.js#L222","resources":[{"title":"Topics: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions"},{"title":"Subscriptions: testIamPermissions API Documentation","link":"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions"},{"title":"Permissions Reference","link":"https://cloud.google.com/pubsub/access_control#permissions"}],"examples":[{"caption":"<p>Test a single permission.</p>","code":"var test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.topics.update\": true\n  // }\n});"},{"caption":"<p>Test several permissions at once.</p>","code":"var tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\nsubscription.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.subscriptions.consume\": true,\n  //   \"pubsub.subscriptions.update\": false\n  // }\n});"}],"params":[{"name":"permissions","description":"<ul> <li>The permission(s) to test for.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.permissions","description":"<ul> <li>A subset of permissions that the caller is allowed</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If permissions are not provided.</p>"}],"returns":[]}]}