{"id":"bigquery","type":"class","name":"BigQuery","description":null,"source":"/lib/bigquery/index.js#L91","parent":null,"children":["./json/v0.14.0/bigquery/dataseton","./json/v0.14.0/bigqueryon","./json/v0.14.0/bigquery/jobon","./json/v0.14.0/bigquery/tableon"],"methods":[{"id":"BigQuery","name":"BigQuery","type":"constructor","description":"<p>The examples below will demonstrate the different usage patterns your app may need to support to retrieve a BigQuery object.</p>","source":"/lib/bigquery/index.js#L91","resources":[],"examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'my-project'\n});\n\nvar bigquery = myProject.bigquery();"},{"caption":"<p>In the following examples from this page and the other modules (Dataset, \nTable, etc.), we are going to be using a dataset from \ndata.gov (http://goo.gl/f2SXcb) of higher education institutions. \nWe will create a table with the correct schema, import the public CSV file \ninto that table, and query it for data.</p>"}],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"createDataset","name":"createDataset","type":"instance","description":"<p>Create a dataset.</p>","source":"/lib/bigquery/index.js#L117","resources":[],"examples":[{"code":"bigquery.createDataset('my-dataset', function(err, dataset, apiResponse) {});"}],"params":[{"name":"id","description":"<ul> <li>ID of the dataset to create.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"dataset","name":"dataset","type":"instance","description":"<p>Create a reference to an existing dataset.</p>","source":"/lib/bigquery/index.js#L148","resources":[],"examples":[{"code":"var dataset = bigquery.dataset('higher_education');"}],"params":[{"name":"id","description":"<ul> <li>ID of the dataset.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getDatasets","name":"getDatasets","type":"instance","description":"<p>List all or some of the datasets in your project.</p>","source":"/lib/bigquery/index.js#L167","resources":[],"examples":[{"code":"bigquery.getDatasets(function(err, datasets, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there are more results to fetch.\n});"}],"params":[{"name":"query","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"query.all","description":"<ul> <li>List all datasets, including hidden ones.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"query.maxResults","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>Token returned from a previous call, to request the next page of results.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getJobs","name":"getJobs","type":"instance","description":"<p>Get all of the jobs from your project.</p>","source":"/lib/bigquery/index.js#L222","resources":[],"examples":[{"code":"bigquery.getJobs(function(err, jobs, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there are more results to fetch.\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.allUsers","description":"<ul> <li>Display jobs owned by all users in the project.</li> </ul> ","types":["boolean"],"optional":true,"nullable":false},{"name":"options.maxResults","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"options.pageToken","description":"<ul> <li>Token returned from a previous call, to request the next page of results.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"options.projection","description":"<ul> <li>Restrict information returned to a set of selected fields. Acceptable values are &quot;full&quot;, for all job data, and  &quot;minimal&quot;, to not include the job configuration.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"options.stateFilter","description":"<ul> <li>Filter for job state. Acceptable values are &quot;done&quot;, &quot;pending&quot;, and &quot;running&quot;.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"job","name":"job","type":"instance","description":"<p>Create a reference to an existing Job.</p>","source":"/lib/bigquery/index.js#L265","resources":[],"examples":[{"code":"var myExistingJob = bigquery.job('job-id');"}],"params":[{"name":"id","description":"<ul> <li>ID of the job.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"query","name":"query","type":"instance","description":"<p>Run a query scoped to your project.</p><p>If you provide a callback, this method returns the results from your query to it. When querying large sets of data, it is possible your results won&#39;t be returned all at once. In those cases, you will receive a third argument to your callback that can be passed back to this method to return more results.</p><p>See the examples below for such a workflow.</p><p>This method also runs as a readable stream if you do not provide a callback. In cases where more results exist, this will automatically run the subsequent queries for you, pushing each row to the stream.</p>","source":"/lib/bigquery/index.js#L348","resources":[],"examples":[{"code":"var query = 'SELECT url FROM [publicdata:samples.github_nested] LIMIT 100';"},{"caption":"<p>You can run a query against your data in a serial manner.</p>","code":"bigquery.query(query, function(err, rows, nextQuery, apiResponse) {\n  // Handle results here.\n  if (nextQuery) {\n    bigquery.query(nextQuery, function(err, rows, nextQuery, apiResponse) {\n      // Handle more results here.\n    });\n  }\n});"},{"caption":"<p>You can also use the <code>query</code> method as a readable object stream by \nomitting the callback.</p>","code":"var through2 = require('through2');\n\nbigquery.query(query)\n  .pipe(through2.obj(function(row, enc, next) {\n    this.push(row.url += '?trackingCode=AZ19b\\n');\n    next();\n  }))\n  .pipe(process.stdout);"}],"params":[{"name":"options","description":"<ul> <li>A string SQL query or configuration object.</li> </ul> ","types":["string","object"],"optional":false,"nullable":false},{"name":"options.maxResults","description":"<ul> <li>Maximum number of results to read.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"options.query","description":"<ul> <li>A query string, following the BigQuery query syntax, of the query to execute.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"options.timeoutMs","description":"<ul> <li>How long to wait for the query to complete, in milliseconds, before returning. Default is to return  immediately. If the timeout passes before the job completes, the request  will fail with a <code>TIMEOUT</code> error.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function. If you intend to continuously run this query until all results are in as part of a stream,  do not pass a callback.</li> </ul> ","types":["function"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"startQuery","name":"startQuery","type":"instance","description":"<p>Run a query as a job. No results are immediately returned. Instead, your callback will be executed with a <a data-custom-type=\"bigquery/job\">bigquery/job</a> object that you must ping for the results. See the Job documentation for explanations of how to check on the status of the job.</p>","source":"/lib/bigquery/index.js#L481","resources":[],"examples":[{"code":"var query = 'SELECT url FROM [publicdata:samples.github_nested] LIMIT 100';"},{"caption":"<p>You may pass only a query string, having a new table created to store the \nresults of the query.</p>","code":"bigquery.startQuery(query, function(err, job) {});"},{"caption":"<p>You can also control the destination table by providing a \n<a data-custom-type=\"bigquery/table\">bigquery/table</a> object.</p>","code":"bigquery.startQuery({\n  destination: bigquery.dataset('higher_education').table('institutions'),\n  query: query\n}, function(err, job) {});"},{"caption":"<p>After you have run <code>startQuery</code>, your query will execute in a job. Your \ncallback is executed with a <a data-custom-type=\"bigquery/job\">bigquery/job</a> object so that you may \ncheck for the results.</p>","code":"bigquery.startQuery(query, function(err, job) {\n  if (!err) {\n    job.getQueryResults(function(err, rows, apiResponse) {});\n  }\n});"}],"params":[{"name":"options","description":"<ul> <li>The configuration object. This must be in the format of the <a href=\"http://goo.gl/wRpHvR\"><code>configuration.query</code></a> property  of a Jobs resource. If a string is provided, this is used as the query  string, and all other options are defaulted.</li> </ul> ","types":["object","string"],"optional":false,"nullable":false},{"name":"options.destination","description":"<ul> <li>The table to save the query&#39;s results to. If omitted, a new table will be created.</li> </ul> ","types":["<a data-custom-type=\"bigquery/table\">bigquery/table</a>"],"optional":true,"nullable":false},{"name":"options.query","description":"<ul> <li>A query string, following the BigQuery query syntax, of the query to execute.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a query is not specified.</p>"},{"type":"Error","description":"<p>If a Table is not provided as a destination.</p>"}],"returns":[]}]}