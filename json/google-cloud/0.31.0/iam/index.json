{"id":"iam","type":"class","name":"IAM","description":"","source":"lib/iam/index.js","parent":null,"children":[],"methods":[{"id":"IAM","name":"IAM","type":"constructor","description":"<p><a href=\"https://cloud.google.com/iam/docs\">IAM (Identity and Access Management)</a> allows you to set permissions on invidual resources and offers a wider range of roles: editor, owner, publisher, subscriber, and viewer. This gives you greater flexibility and allows you to set more fine-grained access control.</p>","source":"lib/iam/index.js#L73","resources":[],"examples":[{"code":"var gcloud = require('gcloud')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});"},{"caption":"<p>You access the IAM functionality of a service object you have already \ncreated. \nFor example, using the Pub/Sub API:</p>","code":"var pubsub = gcloud.pubsub();\n\nvar topic = pubsub.topic('my-topic');\n// topic.iam;\n\nvar subscription = topic.subscription('my-subscription');\n// subscription.iam;"}],"params":[],"exceptions":[],"returns":[]},{"id":"getPolicy","name":"getPolicy","type":"instance","description":"<p>Get the IAM policy.</p>","source":"lib/iam/index.js#L112","resources":[{"title":"Policy","link":"https://cloud.google.com/iam/reference/rest/v1/Policy"}],"examples":[{"code":"topic.iam.getPolicy(function(err, policy, apiResponse) {});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/iam/reference/rest/v1/Policy\">Policy object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setPolicy","name":"setPolicy","type":"instance","description":"<p>Set the IAM policy.</p>","source":"lib/iam/index.js#L153","resources":[{"title":"Policy","link":"https://cloud.google.com/iam/reference/rest/v1/Policy"}],"examples":[{"code":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});"}],"params":[{"name":"policy","description":"<ul> <li>The <a href=\"https://cloud.google.com/iam/reference/rest/v1/Policy\">Policy object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"policy.bindings","description":"<ul> <li>Bindings associate members with roles.</li> </ul> ","types":["array"],"optional":true,"nullable":false},{"name":"policy.rules","description":"<ul> <li>Rules to be applied to the policy.</li> </ul> ","types":["object[]"],"optional":true,"nullable":false},{"name":"policy.etag","description":"<ul> <li>Etags are used to perform a read-modify-write.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The updated policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no policy is provided.</p>"}],"returns":[]},{"id":"testPermissions","name":"testPermissions","type":"instance","description":"<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>","source":"lib/iam/index.js#L212","resources":[],"examples":[{"caption":"<p>Test a single permission.</p>","code":"var test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  // permissions = {\n  //   'pubsub.topics.update': true\n  // }\n});"},{"caption":"<p>Test several permissions at once.</p>","code":"var tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\ntopic.iam.testPermissions(tests, function(err, permissions) {\n  // permissions = {\n  //   'pubsub.subscriptions.consume': true,\n  //   'pubsub.subscriptions.update': false\n  // }\n});"}],"params":[{"name":"permissions","description":"<ul> <li>The permission(s) to test for.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.permissions","description":"<ul> <li>A subset of permissions that the caller is allowed</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If permissions are not provided.</p>"}],"returns":[]}]}