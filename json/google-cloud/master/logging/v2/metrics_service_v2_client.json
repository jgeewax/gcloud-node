{"id":"logging/v2/metrics_service_v2_client","type":"class","overview":"<p>\n  This class allows you interact with Stackdriver Logging.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/logging</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/logging</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/logging</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar logging = require('@google-cloud/logging')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar logging = require('@google-cloud/logging')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/logging</code> are outlined in our <a href=\"#/docs/logging/v1.0.4/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js","parent":"logging","children":[],"methods":[{"id":"MetricsServiceV2Client","name":"MetricsServiceV2Client","type":"constructor","description":"<p>Service for configuring logs-based metrics.</p><p>This will be created through a builder function which can be obtained by the module. See the following example of how to initialize the module and how to access to the builder.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L74","resources":[],"examples":[{"code":"var loggingV2 = require('@google-cloud/logging').v2({\n  // optional auth parameters.\n});\nvar client = loggingV2.metricsServiceV2Client();"}],"params":[],"exceptions":[],"returns":[]},{"id":"projectPath","name":"projectPath","type":"instance","description":"<p>Returns a fully-qualified project resource name string.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L138","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromProjectName","name":"matchProjectFromProjectName","type":"instance","description":"<p>Parses the projectName from a project resource.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L150","resources":[],"examples":[],"params":[{"name":"projectName","description":"<p> A fully-qualified path representing a project resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"metricPath","name":"metricPath","type":"instance","description":"<p>Returns a fully-qualified metric resource name string.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L160","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"metric","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromMetricName","name":"matchProjectFromMetricName","type":"instance","description":"<p>Parses the metricName from a metric resource.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L173","resources":[],"examples":[],"params":[{"name":"metricName","description":"<p> A fully-qualified path representing a metric resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchMetricFromMetricName","name":"matchMetricFromMetricName","type":"instance","description":"<p>Parses the metricName from a metric resource.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L183","resources":[],"examples":[],"params":[{"name":"metricName","description":"<p> A fully-qualified path representing a metric resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L192","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"listLogMetrics","name":"listLogMetrics","type":"instance","description":"<p>Lists logs-based metrics.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L273","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedParent = client.projectPath(\"[PROJECT]\");\n// Iterate over all elements.\nclient.listLogMetrics({parent: formattedParent}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listLogMetrics(nextRequest, options).then(callback);\n    }\n}\nclient.listLogMetrics({parent: formattedParent}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.parent","description":"<p> Required. The name of the project containing the metrics:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogMetricsResponse'\n        })\">ListLogMetricsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a> in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListLogMetricsResponse'\n        })\">ListLogMetricsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listLogMetricsStream","name":"listLogMetricsStream","type":"instance","description":"<p>Equivalent to {@link listLogMetrics}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listLogMetrics} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L326","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedParent = client.projectPath(\"[PROJECT]\");\nclient.listLogMetricsStream({parent: formattedParent}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.parent","description":"<p> Required. The name of the project containing the metrics:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a> on &#39;data&#39; event.</p>"}]},{"id":"getLogMetric","name":"getLogMetric","type":"instance","description":"<p>Gets a logs-based metric.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L365","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedMetricName = client.metricPath(\"[PROJECT]\", \"[METRIC]\");\nclient.getLogMetric({metricName: formattedMetricName}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.metricName","description":"<p> The resource name of the desired metric:</p><pre><code> &quot;projects/[PROJECT_ID]/metrics/[METRIC_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"createLogMetric","name":"createLogMetric","type":"instance","description":"<p>Creates a logs-based metric.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L420","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedParent = client.projectPath(\"[PROJECT]\");\nvar metric = {};\nvar request = {\n    parent: formattedParent,\n    metric: metric\n};\nclient.createLogMetric(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.parent","description":"<p> The resource name of the project in which to create the metric:</p><pre><code> &quot;projects/[PROJECT_ID]&quot; </code></pre><p> The new metric must be provided in the request.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.metric","description":"<p> The new logs-based metric, which must not have an identifier that  already exists.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"updateLogMetric","name":"updateLogMetric","type":"instance","description":"<p>Creates or updates a logs-based metric.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L476","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedMetricName = client.metricPath(\"[PROJECT]\", \"[METRIC]\");\nvar metric = {};\nvar request = {\n    metricName: formattedMetricName,\n    metric: metric\n};\nclient.updateLogMetric(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.metricName","description":"<p> The resource name of the metric to update:</p><pre><code> &quot;projects/[PROJECT_ID]/metrics/[METRIC_ID]&quot; </code></pre><p> The updated metric must be provided in the request and it&#39;s  <code>name</code> field must be the same as <code>[METRIC_ID]</code> If the metric  does not exist in <code>[PROJECT_ID]</code>, then a new metric is created.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.metric","description":"<p> The updated metric.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'LogMetric'\n        })\">LogMetric</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"deleteLogMetric","name":"deleteLogMetric","type":"instance","description":"<p>Deletes a logs-based metric.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L513","resources":[],"examples":[{"code":"\nvar client = loggingV2.metricsServiceV2Client();\nvar formattedMetricName = client.metricPath(\"[PROJECT]\", \"[METRIC]\");\nclient.deleteLogMetric({metricName: formattedMetricName}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.metricName","description":"<p> The resource name of the metric to delete:</p><pre><code> &quot;projects/[PROJECT_ID]/metrics/[METRIC_ID]&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"metricsServiceV2Client","name":"metricsServiceV2Client","type":"instance","description":"<p>Build a new instance of {@link MetricsServiceV2Client}.</p>","source":"packages\\logging\\src\\v2\\metrics_service_v2_client.js#L551","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"v2/metrics_service_v2_client.json"}