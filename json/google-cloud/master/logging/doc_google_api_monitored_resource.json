{"id":"logging/v2/doc/doc_google_api_monitored_resource","type":"class","overview":"<p>\n  This class allows you interact with Stackdriver Logging.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/logging</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar logging = gcloud.logging();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar logging = gcloud.logging({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/v0.56.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\logging\\src\\v2\\doc\\doc_google_api_monitored_resource.js","parent":"logging","children":[],"methods":[{"type":"instance","description":"<p>An object that describes the schema of a {@link MonitoredResource} object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of <code>&quot;gce_instance&quot;</code> and specifies the use of the labels <code>&quot;instance_id&quot;</code> and <code>&quot;zone&quot;</code> to identify particular VM instances.</p><p>Different APIs can support different monitored resource types. APIs generally provide a <code>list</code> method that returns the monitored resource descriptors used by the API.</p>","source":"packages\\logging\\src\\v2\\doc\\doc_google_api_monitored_resource.js#L66","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Optional. The resource name of the monitored resource descriptor:  <code>&quot;projects/{project_id}/monitoredResourceDescriptors/{type}&quot;</code> where  {type} is the value of the <code>type</code> field in this object and  {project_id} is a project ID that provides API-specific context for  accessing the type. APIs that do not use project information can use the  resource name format <code>&quot;monitoredResourceDescriptors/{type}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"type","description":"<p> Required. The monitored resource type. For example, the type  <code>&quot;cloudsql_database&quot;</code> represents databases in Google Cloud SQL.  The maximum length of this value is 256 characters.</p>","types":["string"],"optional":false,"nullable":false},{"name":"displayName","description":"<p> Optional. A concise name for the monitored resource type that might be  displayed in user interfaces. It should be a Title Cased Noun Phrase,  without any article or other determiners. For example,  <code>&quot;Google Cloud SQL Database&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"description","description":"<p> Optional. A detailed description of the monitored resource type that might  be used in documentation.</p>","types":["string"],"optional":false,"nullable":false},{"name":"labels","description":"<p> Required. A set of labels used to describe instances of this monitored  resource type. For example, an individual Google Cloud SQL database is  identified by values for the labels <code>&quot;database_id&quot;</code> and <code>&quot;zone&quot;</code>.</p><p> This object should have the same structure as google.api.LabelDescriptor</p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_google_api_monitored_resource.json"}