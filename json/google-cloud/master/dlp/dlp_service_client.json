{"id":"dlp/v2beta1/dlp_service_client","type":"class","overview":"<p>\n  This class allows you interact with DLP API.\n</p>\n\n\n<div class=\"notice\">\n  <strong><code>google-cloud</code> is deprecated</strong>\n  <p>\n    Due to the scope of our API rapidly increasing, you may notice a decrease in performance if you continue to use the bundled module, <code>google-cloud</code>.\n  </p>\n  <p>\n    Going forward, please install only the individual service modules that you need, such as <code>@google-cloud/dlp</code>.\n  </p>\n</div>\n\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar dlp = gcloud.dlp();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar dlp = gcloud.dlp({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/v0.56.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js","parent":"dlp","children":[],"methods":[{"id":"DlpServiceClient","name":"DlpServiceClient","type":"constructor","description":"<p>The DLP API is a service that allows clients to detect the presence of Personally Identifiable Information (PII) and other privacy-sensitive data in user-supplied, unstructured data streams, like text blocks or images. The service also includes methods for sensitive data redaction and scheduling of data scans on Google Cloud Platform based data sets.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L59","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"resultPath","name":"resultPath","type":"instance","description":"<p>Returns a fully-qualified result resource name string.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L133","resources":[],"examples":[],"params":[{"name":"result","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchResultFromResultName","name":"matchResultFromResultName","type":"instance","description":"<p>Parses the resultName from a result resource.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L145","resources":[],"examples":[],"params":[{"name":"resultName","description":"<p> A fully-qualified path representing a result resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L154","resources":[],"examples":[],"params":[{"name":"callback","description":"<ul> <li>the callback to be called with the current project Id.</li> </ul> ","types":["function(Error, string)"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"inspectContent","name":"inspectContent","type":"instance","description":"<p>Finds potentially sensitive info in a list of strings. This method has limits on input size, processing time, and output size.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L209","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar inspectConfig = {};\nvar items = [];\nvar request = {\n    inspectConfig: inspectConfig,\n    items: items\n};\nclient.inspectContent(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.inspectConfig","description":"<p> Configuration for the inspector.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'InspectConfig'\n        })\">InspectConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.items","description":"<p> The list of items to inspect. Items in a single request are  considered &quot;related&quot; unless inspect_config.independent_inputs is true.  Up to 100 are allowed per request.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ContentItem'\n        })\">ContentItem</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'InspectContentResponse'\n        })\">InspectContentResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'InspectContentResponse'\n        })\">InspectContentResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"redactContent","name":"redactContent","type":"instance","description":"<p>Redacts potentially sensitive info from a list of strings. This method has limits on input size, processing time, and output size.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L279","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar inspectConfig = {};\nvar items = [];\nvar replaceConfigs = [];\nvar request = {\n    inspectConfig: inspectConfig,\n    items: items,\n    replaceConfigs: replaceConfigs\n};\nclient.redactContent(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.inspectConfig","description":"<p> Configuration for the inspector.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'InspectConfig'\n        })\">InspectConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.items","description":"<p> The list of items to inspect. Up to 100 are allowed per request.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ContentItem'\n        })\">ContentItem</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"request.replaceConfigs","description":"<p> The strings to replace findings text findings with. Must specify at least  one of these or one ImageRedactionConfig if redacting images.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ReplaceConfig'\n        })\">ReplaceConfig</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"request.imageRedactionConfigs","description":"<p> The configuration for specifying what content to redact from images.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ImageRedactionConfig'\n        })\">ImageRedactionConfig</a></p>","types":["Object[]"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'RedactContentResponse'\n        })\">RedactContentResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'RedactContentResponse'\n        })\">RedactContentResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"createInspectOperation","name":"createInspectOperation","type":"instance","description":"<p>Schedules a job scanning content in a Google Cloud Platform data repository.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L406","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar inspectConfig = {};\nvar storageConfig = {};\nvar outputConfig = {};\nvar request = {\n    inspectConfig: inspectConfig,\n    storageConfig: storageConfig,\n    outputConfig: outputConfig\n};\n\n// Handle the operation using the promise pattern.\nclient.createInspectOperation(request).then(function(responses) {\n    var operation = responses[0];\n    var initialApiResponse = responses[1];\n\n    // Operation#promise starts polling for the completion of the LRO.\n    return operation.promise();\n}).then(function(responses) {\n    // The final result of the operation.\n    var result = responses[0];\n\n    // The metadata value of the completed operation.\n    var metadata = responses[1];\n\n    // The response of the api call returning the complete operation.\n    var finalApiResponse = responses[2];\n})\n.catch(function(err) {\n    console.error(err);\n});\n\nvar inspectConfig = {};\nvar storageConfig = {};\nvar outputConfig = {};\nvar request = {\n    inspectConfig: inspectConfig,\n    storageConfig: storageConfig,\n    outputConfig: outputConfig\n};\n\n// Handle the operation using the event emitter pattern.\nclient.createInspectOperation(request).then(function(responses) {\n    var operation = responses[0];\n    var initialApiResponse = responses[1];\n\n    // Adding a listener for the \"complete\" event starts polling for the\n    // completion of the operation.\n    operation.on('complete', function(result, metadata, finalApiResponse) {\n      // doSomethingWith(result);\n    });\n\n    // Adding a listener for the \"progress\" event causes the callback to be\n    // called on any change in metadata when the operation is polled.\n    operation.on('progress', function(metadata, apiResponse) {\n      // doSomethingWith(metadata)\n    })\n\n    // Adding a listener for the \"error\" event handles any errors found during polling.\n    operation.on('error', function(err) {\n      // throw(err);\n    })\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.inspectConfig","description":"<p> Configuration for the inspector.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'InspectConfig'\n        })\">InspectConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.storageConfig","description":"<p> Specification of the data set to process.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'StorageConfig'\n        })\">StorageConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.outputConfig","description":"<p> Optional location to store findings. The bucket must already exist and  the Google APIs service account for DLP must have write permission to  write to the given bucket.  <p>Results are split over multiple csv files with each file name matching  the pattern &quot;[operation<em>id]</em>[count].csv&quot;, for example  <code>3094877188788974909_1.csv</code>. The <code>operation_id</code> matches the  identifier for the Operation, and the <code>count</code> is a counter used for  tracking the number of files written. <p>The CSV file(s) contain the  following columns regardless of storage type scanned: <li>id <li>info_type  <li>likelihood <li>byte size of finding <li>quote <li>time_stamp   <p>For Cloud Storage the next columns are: <li>file_path  <li>start_offset   <p>For Cloud Datastore the next columns are: <li>project_id  <li>namespace_id <li>path <li>column_name <li>offset</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'OutputStorageConfig'\n        })\">OutputStorageConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is a <a href=\"https://googleapis.github.io/gax-nodejs/Operation\">gax.Operation</a> object.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is a <a href=\"https://googleapis.github.io/gax-nodejs/Operation\">gax.Operation</a> object. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listInspectFindings","name":"listInspectFindings","type":"instance","description":"<p>Returns list of results for given inspect operation result set id.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L470","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar formattedName = client.resultPath(\"[RESULT]\");\nclient.listInspectFindings({name: formattedName}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> Identifier of the results set returned as metadata of  the longrunning operation created by a call to CreateInspectOperation.  Should be in the format of `inspect/results/{id}.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> Maximum number of results to return.  If 0, the implementation selects a reasonable value.</p>","types":["number"],"optional":true,"nullable":false},{"name":"request.pageToken","description":"<p> The value returned by the last <code>ListInspectFindingsResponse</code>; indicates  that this is a continuation of a prior <code>ListInspectFindings</code> call, and that  the system should return the next page of data.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.filter","description":"<p> Restricts findings to items that match. Supports info_type and likelihood.  <p>Examples:   <li>info_type=EMAIL_ADDRESS  <li>info_type=PHONE_NUMBER,EMAIL_ADDRESS  <li>likelihood=VERY_LIKELY  <li>likelihood=VERY_LIKELY,LIKELY  <li>info_type=EMAIL_ADDRESS,likelihood=VERY_LIKELY,LIKELY</p>","types":["string"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListInspectFindingsResponse'\n        })\">ListInspectFindingsResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListInspectFindingsResponse'\n        })\">ListInspectFindingsResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listInfoTypes","name":"listInfoTypes","type":"instance","description":"<p>Returns sensitive information types for given category.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L526","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar category = '';\nvar languageCode = '';\nvar request = {\n    category: category,\n    languageCode: languageCode\n};\nclient.listInfoTypes(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.category","description":"<p> Category name as returned by ListRootCategories.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.languageCode","description":"<p> Optional BCP-47 language code for localized info type friendly  names. If omitted, or if localized strings are not available,  en-US strings will be returned.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListInfoTypesResponse'\n        })\">ListInfoTypesResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListInfoTypesResponse'\n        })\">ListInfoTypesResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listRootCategories","name":"listRootCategories","type":"instance","description":"<p>Returns the list of root categories of sensitive information.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L575","resources":[],"examples":[{"code":"\nvar dlp = require('@google-cloud/dlp');\n\nvar client = dlp.v2beta1({\n  // optional auth parameters.\n});\n\nvar languageCode = '';\nclient.listRootCategories({languageCode: languageCode}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.languageCode","description":"<p> Optional language code for localized friendly category names.  If omitted or if localized strings are not available,  en-US strings will be returned.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListRootCategoriesResponse'\n        })\">ListRootCategoriesResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListRootCategoriesResponse'\n        })\">ListRootCategoriesResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"dlpServiceClient","name":"dlpServiceClient","type":"instance","description":"<p>Build a new instance of {@link DlpServiceClient}.</p>","source":"packages\\dlp\\src\\v2beta1\\dlp_service_client.js#L613","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"dlp_service_client.json"}