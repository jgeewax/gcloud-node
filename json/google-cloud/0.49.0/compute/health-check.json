{"id":"compute/health-check","type":"class","name":"HealthCheck","overview":"<p>\n  This class allows you interact with Compute Engine.\n</p>\n\n<p>\n  First, install <code>google-cloud</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save google-cloud</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>google-cloud</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Compute Engine</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcloud = require('google-cloud');\nvar gce = gcloud.compute({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>google-cloud</code> are outlined in our <a href=\"#/docs/google-cloud/0.49.0/guides/authentication\">Authentication guide</a>.\n</p>\n\n","description":"","source":"packages/compute/src/health-check.js","parent":"compute","children":[],"methods":[{"id":"HealthCheck","name":"HealthCheck","type":"constructor","description":"<p>Health checks ensure that Compute Engine forwards new connections only to instances that are up and ready to receive them. Compute Engine sends health check requests to each instance at the specified frequency; once an instance exceeds its allowed number of health check failures, it is no longer considered an eligible instance for receiving new traffic.</p>","source":"packages/compute/src/health-check.js#L52","resources":[{"title":"Health Checks Overview","link":"https://cloud.google.com/compute/docs/load-balancing/health-checks"}],"examples":[{"code":"var healthCheck = gce.healthCheck('health-check-name');"}],"params":[],"exceptions":[],"returns":[]},{"id":"create","name":"create","type":"instance","description":"<p>Create an HTTP or HTTPS health check.</p>","source":"packages/compute/src/health-check.js#L76","resources":[],"examples":[{"code":"healthCheck.create(function(err, healthCheck, operation, apiResponse) {\n  // `healthCheck` is a HealthCheck object.\n\n  // `operation` is an Operation object that can be used to check the\n  // status of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.create().then(function(data) {\n  var healthCheck = data[0];\n  var operation = data[1];\n  var apiResponse = data[2];\n});"}],"params":[{"name":"options","description":"<ul> <li>See <a data-custom-type=\"compute\" data-method=\"createHealthCheck\">compute#createHealthCheck</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"exists","name":"exists","type":"instance","description":"<p>Check if the health check exists.</p>","source":"packages/compute/src/health-check.js#L97","resources":[],"examples":[{"code":"healthCheck.exists(function(err, exists) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.exists().then(function(data) {\n  var exists = data[0];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the health check exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"get","name":"get","type":"instance","description":"<p>Get the health check if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is normally required for the <code>create</code> method must be contained within this object as well.</p>","source":"packages/compute/src/health-check.js#L124","resources":[],"examples":[{"code":"healthCheck.get(function(err, healthCheck, apiResponse) {\n  // `healthCheck` is a HealthCheck object.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.get().then(function(data) {\n  var healthCheck = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"options","description":"<ul> <li>Configuration object.</li> </ul> ","types":["options"],"optional":true,"nullable":false},{"name":"options.autoCreate","description":"<ul> <li>Automatically create the object if it does not exist. Default: <code>false</code></li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getMetadata","name":"getMetadata","type":"instance","description":"<p>Get the health check&#39;s metadata.</p>","source":"packages/compute/src/health-check.js#L151","resources":[{"title":"HttpHealthChecks: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks/get"},{},{"title":"HttpsHealthChecks: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks/get"},{}],"examples":[{"code":"healthCheck.getMetadata(function(err, metadata, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.getMetadata().then(function(data) {\n  var metadata = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The health check&#39;s metadata.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete","name":"delete","type":"instance","description":"<p>Delete the health check.</p>","source":"packages/compute/src/health-check.js#L205","resources":[{"title":"HttpHealthCheck: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks/delete"},{"title":"HttpsHealthCheck: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks/delete"}],"examples":[{"code":"healthCheck.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.delete().then(function(data) {\n  var operation = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setMetadata","name":"setMetadata","type":"instance","description":"<p>Set the health check&#39;s metadata.</p>","source":"packages/compute/src/health-check.js#L256","resources":[{"title":"HttpHealthCheck: insert API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks/insert"},{"title":"HttpsHealthCheck: insert API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks/insert"}],"examples":[{"code":"var metadata = {\n  description: 'New description'\n};\n\nhealthCheck.setMetadata(metadata, function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"healthCheck.setMetadata(metadata).then(function(data) {\n  var operation = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"metadata","description":"<ul> <li>See a <a href=\"https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks#resource\">HttpHealthCheck resource</a>  and <a href=\"https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks#resource\">HttpsHealthCheck resource</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["<a data-custom-type=\"compute/operation\" data-method=\"\">compute/operation</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"health-check.json"}