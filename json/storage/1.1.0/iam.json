{"id":"storage/iam","type":"class","name":"Iam","overview":"<p>\n  This class allows you interact with Cloud Storage.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/storage</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/storage</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/storage</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar gcs = require('@google-cloud/storage')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar gcs = require('@google-cloud/storage')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/storage</code> are outlined in our <a href=\"#/docs/storage/1.1.0/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/storage/src/iam.js","parent":"storage","children":[],"methods":[{"id":"Iam","name":"Iam","type":"constructor","description":"<p>Get and set IAM policies for your Cloud Storage bucket.</p>","source":"packages/storage/src/iam.js#L46","resources":[{},{},{}],"examples":[{"code":"var bucket = gcs.bucket('my-bucket');\n// bucket.iam"}],"params":[],"exceptions":[],"returns":[]},{"id":"getPolicy","name":"getPolicy","type":"instance","description":"<p>Get the IAM policy.</p>","source":"packages/storage/src/iam.js#L72","resources":[{"title":"Buckets: setIamPolicy API Documentation","link":"https://cloud.google.com/storage/docs/json_api/v1/buckets/getIamPolicy"}],"examples":[{"code":"bucket.iam.getPolicy(function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"bucket.iam.getPolicy().then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"setPolicy","name":"setPolicy","type":"instance","description":"<p>Set the IAM policy.</p>","source":"packages/storage/src/iam.js#L114","resources":[{"title":"Buckets: setIamPolicy API Documentation","link":"https://cloud.google.com/storage/docs/json_api/v1/buckets/setIamPolicy"},{}],"examples":[{"code":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/storage.admin',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\nbucket.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"bucket.iam.setPolicy(myPolicy).then(function(data) {\n  var policy = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"policy","description":"<ul> <li>The policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"policy.bindings","description":"<ul> <li>Bindings associate members with roles.</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"policy.etag","description":"<ul> <li>Etags are used to perform a read-modify-write.</li> </ul> ","types":["string"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.policy","description":"<ul> <li>The updated policy.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If no policy is provided.</p>"}],"returns":[]},{"id":"testPermissions","name":"testPermissions","type":"instance","description":"<p>Test a set of permissions for a resource.</p>","source":"packages/storage/src/iam.js#L179","resources":[{"title":"Buckets: testIamPermissions API Documentation","link":"https://cloud.google.com/storage/docs/json_api/v1/buckets/testIamPermissions"}],"examples":[{"caption":"<p>Test a single permission.</p>","code":"var test = 'storage.buckets.delete';\n\nbucket.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"storage.buckets.delete\": true\n  // }\n});"},{"caption":"<p>Test several permissions at once.</p>","code":"var tests = [\n  'storage.buckets.delete',\n  'storage.buckets.get'\n];\n\nbucket.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"storage.buckets.delete\": false,\n  //   \"storage.buckets.get\": true\n  // }\n});"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"bucket.iam.testPermissions(test).then(function(data) {\n  var permissions = data[0];\n  var apiResponse = data[1];\n});"}],"params":[{"name":"permissions","description":"<ul> <li>The permission(s) to test for.</li> </ul> ","types":["string","string[]"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.permissions","description":"<ul> <li>A subset of permissions that the caller is allowed.</li> </ul> ","types":["array"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If permissions are not provided.</p>"}],"returns":[]}],"path":"iam.json"}