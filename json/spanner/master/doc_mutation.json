{"id":"spanner/v1/doc/doc_mutation","type":"class","overview":"<p>\n  This class allows you interact with Cloud Spanner.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/spanner</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/spanner</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/spanner</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/spanner</code> are outlined in our <a href=\"#/docs/spanner/v0.5.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\spanner\\src\\v1\\doc\\doc_mutation.js","parent":"spanner","children":[],"methods":[{"id":"Mutation","name":"Mutation","type":"instance","description":"<p>A modification to one or more Cloud Spanner rows. Mutations can be applied to a Cloud Spanner database by sending them in a {@link Commit} call.</p>","source":"packages\\spanner\\src\\v1\\doc\\doc_mutation.js#L63","resources":[],"examples":[],"params":[{"name":"insert","description":"<p> Insert new rows in a table. If any of the rows already exist,  the write or transaction fails with error <code>ALREADY_EXISTS</code>.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Write'\n        })\">Write</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"update","description":"<p> Update existing rows in a table. If any of the rows does not  already exist, the transaction fails with error <code>NOT_FOUND</code>.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Write'\n        })\">Write</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"insertOrUpdate","description":"<p> Like {@link insert}, except that if the row already exists, then  its column values are overwritten with the ones provided. Any  column values not explicitly written are preserved.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Write'\n        })\">Write</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"replace","description":"<p> Like {@link insert}, except that if the row already exists, it is  deleted, and the column values provided are inserted  instead. Unlike {@link insert_or_update}, this means any values not  explicitly written become <code>NULL</code>.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Write'\n        })\">Write</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"delete","description":"<p> Delete rows from a table. Succeeds whether or not the named  rows were present.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Delete'\n        })\">Delete</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Write","name":"Write","type":"instance","description":"<p>Arguments to {@link insert}, {@link update}, {@link insert_or_update}, and {@link replace} operations.</p>","source":"packages\\spanner\\src\\v1\\doc\\doc_mutation.js#L95","resources":[],"examples":[],"params":[{"name":"table","description":"<p> Required. The table whose rows will be written.</p>","types":["string"],"optional":false,"nullable":false},{"name":"columns","description":"<p> The names of the columns in {@link table} to be written.</p><p> The list of columns must contain enough columns to allow  Cloud Spanner to derive values for all primary key columns in the  row(s) to be modified.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"values","description":"<p> The values to be written. <code>values</code> can contain more than one  list of values. If it does, then multiple rows are written, one  for each entry in <code>values</code>. Each list in <code>values</code> must have  exactly as many entries as there are entries in {@link columns}  above. Sending multiple lists is equivalent to sending multiple  <code>Mutation</code>s, each containing one <code>values</code> entry and repeating  {@link table} and {@link columns}. Individual values in each list are  encoded as described {@link here}.</p><p> This object should have the same structure as google.protobuf.ListValue</p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Delete","name":"Delete","type":"instance","description":"<p>Arguments to {@link delete} operations.</p>","source":"packages\\spanner\\src\\v1\\doc\\doc_mutation.js#L113","resources":[],"examples":[],"params":[{"name":"table","description":"<p> Required. The table whose rows will be deleted.</p>","types":["string"],"optional":false,"nullable":false},{"name":"keySet","description":"<p> Required. The primary keys of the rows within {@link table} to delete.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'KeySet'\n        })\">KeySet</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_mutation.json"}