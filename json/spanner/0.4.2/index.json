{"id":"spanner","type":"class","name":"Spanner","overview":"<p>\n  This class allows you interact with Cloud Spanner.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/spanner</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/spanner</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/spanner</code>— we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/spanner</code> are outlined in our <a href=\"#/docs/spanner/0.4.2/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/spanner/src/index.js","parent":null,"children":["spanner/admin","spanner/codec","spanner/database","spanner/instance","spanner/partial-result-stream","spanner/row-builder","spanner/session-pool","spanner/session","spanner/table","spanner/transaction-request","spanner/transaction","spanner/v1"],"methods":[{"id":"Spanner","name":"Spanner","type":"constructor","description":"<p><a href=\"https://cloud.google.com/spanner\">Cloud Spanner</a> is a highly scalable, transactional, managed, NewSQL database service. Cloud Spanner solves the need for a horizontally-scaling database with consistent global transaction and SQL semantics. With Cloud Spanner you don&#39;t need to choose between consistency and horizontal scaling — you get both.</p>","source":"packages/spanner/src/index.js#L61","resources":[{},{}],"examples":[],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"date","name":"date","type":"instance","description":"<p>Helper function to get a Cloud Spanner Date object.</p>","source":"packages/spanner/src/index.js#L107","resources":[],"examples":[{"code":"var date = spanner.date('08-20-1969');"}],"params":[{"name":"value","description":"<ul> <li>The date as a string or Date object.</li> </ul> ","types":["string","date"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["object"],"description":""}]},{"id":"float","name":"float","type":"instance","description":"<p>Helper function to get a Cloud Spanner Float64 object.</p>","source":"packages/spanner/src/index.js#L120","resources":[],"examples":[{"code":"var date = spanner.float(10);"}],"params":[{"name":"value","description":"<ul> <li>The float as a number or string.</li> </ul> ","types":["string","number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["object"],"description":""}]},{"id":"int","name":"int","type":"instance","description":"<p>Helper function to get a Cloud Spanner Int64 object.</p>","source":"packages/spanner/src/index.js#L133","resources":[],"examples":[{"code":"var date = spanner.int(10);"}],"params":[{"name":"value","description":"<ul> <li>The int as a number or string.</li> </ul> ","types":["string","number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["object"],"description":""}]},{"id":"createInstance","name":"createInstance","type":"instance","description":"<p>Create an instance.</p>","source":"packages/spanner/src/index.js#L191","resources":[{}],"examples":[{"code":"var config = {\n  config: 'regional-us-central1',\n  nodes: 1\n};\n\nfunction callback(err, instance, operation, apiResponse) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  operation\n    .on('error', function(err) {})\n    .on('complete', function() {\n      // Instance created successfully.\n    });\n}\n\nspanner.createInstance('new-instance-name', config, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"spanner.createInstance('new-instance-name', config)\n  .then(function(data) {\n    var instance = data[0];\n    var operation = data[1];\n    return operation.promise();\n  })\n  .then(function() {\n    // Instance created successfully.\n  });"}],"params":[{"name":"name","description":"<ul> <li>The name of the instance to be created.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"config","description":"<ul> <li>Configuration object.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"config.config","description":"<ul> <li>The name of the instance&#39;s configuration.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"config.nodes","description":"<ul> <li>The number of nodes allocated to this instance.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.instance","description":"<ul> <li>The newly created instance.</li> </ul> ","types":["<a data-custom-type=\"spanner/instance\" data-method=\"\">spanner/instance</a>"],"optional":false,"nullable":false},{"name":"callback.operation","description":"<ul> <li>An operation object that can be used to check the status of the request.</li> </ul> ","types":["Operation"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"},{"type":"Error","description":"<p>If a configuration object is not provided.</p>"}],"returns":[]},{"id":"getInstances","name":"getInstances","type":"instance","description":"<p>Get a list of instances.</p>","source":"packages/spanner/src/index.js#L299","resources":[{}],"examples":[{"code":"spanner.getInstances(function(err, instances) {\n  // `instances` is an array of `Instance` objects.\n});"},{"caption":"<p>To control how many API requests are made and page through the results \nmanually, set <code>autoPaginate</code> to <code>false</code>.</p>","code":"function callback(err, instances, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    spanner.getInstances(nextQuery, callback);\n  }\n}\n\nspanner.getInstances({\n  autoPaginate: false\n}, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"spanner.getInstances().then(function(data) {\n  var instances = data[0];\n});"}],"params":[{"name":"query","description":"<ul> <li>Query object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"query.autoPaginate","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"query.filter","description":"<ul> <li><p>An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for  filtering are:</p><ul> <li><strong><code>name</code></strong></li> <li><strong><code>display_name</code></strong></li> <li><p><strong><code>labels.key</code></strong> where key is the name of a label</p><p>Some examples of using filters are:</p></li> <li><strong><code>name:*</code></strong> The instance has a name.</li> <li><strong><code>name:Howl</code></strong> The instance&#39;s name is howl.</li> <li><strong><code>labels.env:*</code></strong> The instance has the label env.</li> <li><strong><code>labels.env:dev</code></strong> The instance&#39;s label env has the value dev.</li> <li><strong><code>name:howl labels.env:dev</code></strong> The instance&#39;s name is howl and it has the label env with value dev.</li> </ul> </li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"query.maxApiCalls","description":"<ul> <li>Maximum number of API calls to make.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"query.pageSize","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>Token returned from a previous call, to request the next page of results.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.instances","description":"<ul> <li>List of all instances.</li> </ul> ","types":["<a data-custom-type=\"spanner/instance[]\" data-method=\"\">spanner/instance[]</a>"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getInstancesStream","name":"getInstancesStream","type":"instance","description":"<p>Get a list of <a data-custom-type=\"spanner/instance\" data-method=\"\">spanner/instance</a> objects as a readable object stream.</p>","source":"packages/spanner/src/index.js#L352","resources":[{}],"examples":[{"code":"spanner.getInstancesStream()\n  .on('error', console.error)\n  .on('data', function(instance) {\n    // `instance` is an `Instance` object.\n  })\n  .on('end', function() {\n    // All instances retrieved.\n  });"},{"caption":"<p>If you anticipate many results, you can end a stream early to prevent \nunnecessary processing and API requests.</p>","code":"spanner.getInstancesStream()\n  .on('data', function(instance) {\n    this.end();\n  });"}],"params":[{"name":"options","description":"<ul> <li>Configuration object. See <a data-custom-type=\"spanner\" data-method=\"getInstances\">spanner#getInstances</a> for a complete list of options.</li> </ul> ","types":["object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["stream"],"description":""}]},{"id":"getInstanceConfigs","name":"getInstanceConfigs","type":"instance","description":"<p>Get a list of instance configs.</p>","source":"packages/spanner/src/index.js#L404","resources":[{}],"examples":[{"code":"spanner.getInstanceConfigs(function(err, instanceConfigs) {\n  // `instanceConfigs` is an array of instance configuration descriptors.\n});"},{"caption":"<p>To control how many API requests are made and page through the results \nmanually, set <code>autoPaginate</code> to <code>false</code>.</p>","code":"function callback(err, instanceConfigs, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    spanner.getInstanceConfigs(nextQuery, callback);\n  }\n}\n\nspanner.getInstanceConfigs({\n  autoPaginate: false\n}, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"spanner.getInstanceConfigs().then(function(data) {\n  var instanceConfigs = data[0];\n});"}],"params":[{"name":"query","description":"<ul> <li>Query object.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"query.autoPaginate","description":"<ul> <li>Have pagination handled automatically. Default: true.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false},{"name":"query.maxApiCalls","description":"<ul> <li>Maximum number of API calls to make.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"query.pageSize","description":"<ul> <li>Maximum number of results to return.</li> </ul> ","types":["number"],"optional":false,"nullable":false},{"name":"query.pageToken","description":"<ul> <li>Token returned from a previous call, to request the next page of results.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.instanceConfigs","description":"<ul> <li>List of all available instance configs.</li> </ul> ","types":["object[]"],"optional":false,"nullable":false},{"name":"callback.instanceConfigs.name","description":"<ul> <li>The unique identifier for the instance config.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.instanceConfigs.displayName","description":"<ul> <li>The name of the instance config as it appears in UIs.</li> </ul> ","types":["string"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getInstanceConfigsStream","name":"getInstanceConfigsStream","type":"instance","description":"<p>Get a list of instance configs as a readable object stream.</p>","source":"packages/spanner/src/index.js#L443","resources":[{}],"examples":[{"code":"spanner.getInstanceConfigsStream()\n  .on('error', console.error)\n  .on('data', function(instanceConfig) {})\n  .on('end', function() {\n    // All instances retrieved.\n  });"},{"caption":"<p>If you anticipate many results, you can end a stream early to prevent \nunnecessary processing and API requests.</p>","code":"spanner.getInstanceConfigsStream()\n  .on('data', function(instanceConfig) {\n    this.end();\n  });"}],"params":[{"name":"options","description":"<ul> <li>Configuration object. See <a data-custom-type=\"spanner\" data-method=\"getInstanceConfigs\">spanner#getInstanceConfigs</a> for a complete list of options.</li> </ul> ","types":["object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["stream"],"description":""}]},{"id":"instance","name":"instance","type":"instance","description":"<p>Get a reference to an Instance object.</p>","source":"packages/spanner/src/index.js#L462","resources":[],"examples":[{"code":"var instance = spanner.instance('my-instance');"}],"params":[{"name":"name","description":"<ul> <li>The name of the instance.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"}],"returns":[{"types":["<a data-custom-type=\"spanner/instance\" data-method=\"\">spanner/instance</a>"],"description":"<ul> <li>An Instance object.</li> </ul> "}]},{"id":"operation","name":"operation","type":"instance","description":"<p>Get a reference to an Operation object.</p>","source":"packages/spanner/src/index.js#L481","resources":[],"examples":[{"code":"var operation = spanner.operation('operation-name');"}],"params":[{"name":"name","description":"<ul> <li>The name of the operation.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[{"type":"Error","description":"<p>If a name is not provided.</p>"}],"returns":[{"types":["Operation"],"description":"<ul> <li>An Operation object.</li> </ul> "}]}],"path":"index.json"}