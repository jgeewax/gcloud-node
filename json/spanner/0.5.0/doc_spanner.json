{"id":"spanner/v1/doc/doc_spanner","type":"class","overview":"<p>\n  This class allows you interact with Cloud Spanner.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/spanner</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/spanner</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/spanner</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar spanner = require('@google-cloud/spanner')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/spanner</code> are outlined in our <a href=\"#/docs/spanner/v0.5.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js","parent":"spanner","children":[],"methods":[{"id":"CreateSessionRequest","name":"CreateSessionRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L31","resources":[],"examples":[],"params":[{"name":"database","description":"<p> Required. The database in which the new session is created.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Session","name":"Session","type":"instance","description":"<p>A session in the Cloud Spanner API.</p>","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L44","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Required. The name of the session.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GetSessionRequest","name":"GetSessionRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L57","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Required. The name of the session to retrieve.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DeleteSessionRequest","name":"DeleteSessionRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L70","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Required. The name of the session to delete.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ExecuteSqlRequest","name":"ExecuteSqlRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L135","resources":[],"examples":[],"params":[{"name":"session","description":"<p> Required. The session in which the SQL query should be performed.</p>","types":["string"],"optional":false,"nullable":false},{"name":"transaction","description":"<p> The transaction to use. If none is provided, the default is a  temporary read-only transaction with strong concurrency.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TransactionSelector'\n        })\">TransactionSelector</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"sql","description":"<p> Required. The SQL query string.</p>","types":["string"],"optional":false,"nullable":false},{"name":"params","description":"<p> The SQL query string can contain parameter placeholders. A parameter  placeholder consists of <code>&#39;@&#39;</code> followed by the parameter  name. Parameter names consist of any combination of letters,  numbers, and underscores.</p><p> Parameters can appear anywhere that a literal value is expected. The same  parameter name can be used more than once, for example:  <code>&quot;WHERE id &gt; @msg_id AND id &lt; @msg_id + 100&quot;</code></p><p> It is an error to execute an SQL query with unbound parameters.</p><p> Parameter values are specified using <code>params</code>, which is a JSON  object whose keys are parameter names, and whose values are the  corresponding parameter values.</p><p> This object should have the same structure as google.protobuf.Struct</p>","types":["Object"],"optional":false,"nullable":false},{"name":"paramTypes","description":"<p> It is not always possible for Cloud Spanner to infer the right SQL type  from a JSON value. For example, values of type <code>BYTES</code> and values  of type <code>STRING</code> both appear in {@link params} as JSON strings.</p><p> In these cases, <code>param_types</code> can be used to specify the exact  SQL type for some or all of the SQL query parameters. See the  definition of {@link Type} for more information  about SQL types.</p>","types":["Object.<string, Object>"],"optional":false,"nullable":false},{"name":"resumeToken","description":"<p> If this request is resuming a previously interrupted SQL query  execution, <code>resume_token</code> should be copied from the last  {@link PartialResultSet} yielded before the interruption. Doing this  enables the new SQL query execution to resume where the last one left  off. The rest of the request parameters must exactly match the  request that yielded this token.</p>","types":["string"],"optional":false,"nullable":false},{"name":"queryMode","description":"<p> Used to control the amount of debugging information returned in  {@link ResultSetStats}.</p><p> The number should be among the values of <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'QueryMode'\n        })\">QueryMode</a></p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"QueryMode","name":"QueryMode","type":"instance","description":"<p>Mode in which the query must be processed.</p>","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L143","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"ReadRequest","name":"ReadRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L219","resources":[],"examples":[],"params":[{"name":"session","description":"<p> Required. The session in which the read should be performed.</p>","types":["string"],"optional":false,"nullable":false},{"name":"transaction","description":"<p> The transaction to use. If none is provided, the default is a  temporary read-only transaction with strong concurrency.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TransactionSelector'\n        })\">TransactionSelector</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"table","description":"<p> Required. The name of the table in the database to be read.</p>","types":["string"],"optional":false,"nullable":false},{"name":"index","description":"<p> If non-empty, the name of an index on {@link table}. This index is  used instead of the table primary key when interpreting {@link key_set}  and sorting result rows. See {@link key_set} for further information.</p>","types":["string"],"optional":false,"nullable":false},{"name":"columns","description":"<p> The columns of {@link table} to be returned for each row matching  this request.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"keySet","description":"<p> Required. <code>key_set</code> identifies the rows to be yielded. <code>key_set</code> names the  primary keys of the rows in {@link table} to be yielded, unless {@link index}  is present. If {@link index} is present, then {@link key_set} instead names  index keys in {@link index}.</p><p> Rows are yielded in table primary key order (if {@link index} is empty)  or index key order (if {@link index} is non-empty).</p><p> It is not an error for the <code>key_set</code> to name rows that do not  exist in the database. Read yields nothing for nonexistent rows.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'KeySet'\n        })\">KeySet</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"limit","description":"<p> If greater than zero, only the first <code>limit</code> rows are yielded. If <code>limit</code>  is zero, the default is no limit.</p>","types":["number"],"optional":false,"nullable":false},{"name":"resumeToken","description":"<p> If this request is resuming a previously interrupted read,  <code>resume_token</code> should be copied from the last  {@link PartialResultSet} yielded before the interruption. Doing this  enables the new read to resume where the last read left off. The  rest of the request parameters must exactly match the request  that yielded this token.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"BeginTransactionRequest","name":"BeginTransactionRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L237","resources":[],"examples":[],"params":[{"name":"session","description":"<p> Required. The session in which the transaction runs.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Required. Options for the new transaction.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TransactionOptions'\n        })\">TransactionOptions</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CommitRequest","name":"CommitRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L273","resources":[],"examples":[],"params":[{"name":"session","description":"<p> Required. The session in which the transaction to be committed is running.</p>","types":["string"],"optional":false,"nullable":false},{"name":"transactionId","description":"<p> Commit a previously-started transaction.</p>","types":["string"],"optional":false,"nullable":false},{"name":"singleUseTransaction","description":"<p> Execute mutations in a temporary transaction. Note that unlike  commit of a previously-started transaction, commit with a  temporary transaction is non-idempotent. That is, if the  <code>CommitRequest</code> is sent to Cloud Spanner more than once (for  instance, due to retries in the application, or in the  transport library), it is possible that the mutations are  executed more than once. If this is undesirable, use  {@link BeginTransaction} and  {@link Commit} instead.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TransactionOptions'\n        })\">TransactionOptions</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"mutations","description":"<p> The mutations to be executed when this transaction commits. All  mutations are applied atomically, in the order they appear in  this list.</p><p> This object should have the same structure as <a ui-sref=\"docs.service({\n          serviceId: '{{ service.parent }}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Mutation'\n        })\">Mutation</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CommitResponse","name":"CommitResponse","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L288","resources":[],"examples":[],"params":[{"name":"commitTimestamp","description":"<p> The Cloud Spanner timestamp at which the transaction committed.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"RollbackRequest","name":"RollbackRequest","type":"instance","description":"","source":"packages\\spanner\\src\\v1\\doc\\doc_spanner.js#L304","resources":[],"examples":[],"params":[{"name":"session","description":"<p> Required. The session in which the transaction to roll back is running.</p>","types":["string"],"optional":false,"nullable":false},{"name":"transactionId","description":"<p> Required. The transaction to roll back.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_spanner.json"}