{"id":"video-intelligence/v1beta1/video_intelligence_service_client","type":"class","overview":"<p>\n  This class allows you interact with Cloud Video Intelligence.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/video-intelligence</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/video-intelligence</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/video-intelligence</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar video = require('@google-cloud/video-intelligence')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar video = require('@google-cloud/video-intelligence')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/video-intelligence</code> are outlined in our <a href=\"#/docs/video-intelligence/v0.2.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\video-intelligence\\src\\v1beta1\\video_intelligence_service_client.js","parent":"video-intelligence","children":[],"methods":[{"id":"VideoIntelligenceServiceClient","name":"VideoIntelligenceServiceClient","type":"constructor","description":"<p>Service that implements Google Cloud Video Intelligence API.</p>","source":"packages\\video-intelligence\\src\\v1beta1\\video_intelligence_service_client.js#L54","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\video-intelligence\\src\\v1beta1\\video_intelligence_service_client.js#L119","resources":[],"examples":[],"params":[{"name":"callback","description":"<ul> <li>the callback to be called with the current project Id.</li> </ul> ","types":["function(Error, string)"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"annotateVideo","name":"annotateVideo","type":"instance","description":"<p>Performs asynchronous video annotation. Progress and results can be retrieved through the <code>google.longrunning.Operations</code> interface. <code>Operation.metadata</code> contains <code>AnnotateVideoProgress</code> (progress). <code>Operation.response</code> contains <code>AnnotateVideoResponse</code> (results).</p>","source":"packages\\video-intelligence\\src\\v1beta1\\video_intelligence_service_client.js#L246","resources":[],"examples":[{"code":"\nvar videointelligence = require('@google-cloud/videointelligence');\n\nvar client = videointelligence.v1beta1({\n  // optional auth parameters.\n});\n\nvar inputUri = '';\nvar features = [];\nvar request = {\n    inputUri: inputUri,\n    features: features\n};\n\n// Handle the operation using the promise pattern.\nclient.annotateVideo(request).then(function(responses) {\n    var operation = responses[0];\n    var initialApiResponse = responses[1];\n\n    // Operation#promise starts polling for the completion of the LRO.\n    return operation.promise();\n}).then(function(responses) {\n    // The final result of the operation.\n    var result = responses[0];\n\n    // The metadata value of the completed operation.\n    var metadata = responses[1];\n\n    // The response of the api call returning the complete operation.\n    var finalApiResponse = responses[2];\n})\n.catch(function(err) {\n    console.error(err);\n});\n\nvar inputUri = '';\nvar features = [];\nvar request = {\n    inputUri: inputUri,\n    features: features\n};\n\n// Handle the operation using the event emitter pattern.\nclient.annotateVideo(request).then(function(responses) {\n    var operation = responses[0];\n    var initialApiResponse = responses[1];\n\n    // Adding a listener for the \"complete\" event starts polling for the\n    // completion of the operation.\n    operation.on('complete', function(result, metadata, finalApiResponse) {\n      // doSomethingWith(result);\n    });\n\n    // Adding a listener for the \"progress\" event causes the callback to be\n    // called on any change in metadata when the operation is polled.\n    operation.on('progress', function(metadata, apiResponse) {\n      // doSomethingWith(metadata)\n    })\n\n    // Adding a listener for the \"error\" event handles any errors found during polling.\n    operation.on('error', function(err) {\n      // throw(err);\n    })\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.inputUri","description":"<p> Input video location. Currently, only  <a href=\"https://cloud.google.com/storage/\">Google Cloud Storage</a> URIs are  supported, which must be specified in the following format:  <code>gs://bucket-id/object-id</code> (other URI formats return  {@link google.rpc.Code.INVALID_ARGUMENT}). For more information, see  <a href=\"https://cloud.google.com/storage/docs/reference-uris\">Request URIs</a>.  A video URI may include wildcards in <code>object-id</code>, and thus identify  multiple videos. Supported wildcards: &#39;*&#39; to match 0 or more characters;  &#39;?&#39; to match 1 character. If unset, the input video should be embedded  in the request as <code>input_content</code>. If set, <code>input_content</code> should be unset.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.features","description":"<p> Requested video annotation features.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Feature'\n        })\">Feature</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Feature'\n        })\">Feature</a></p>","types":["number[]"],"optional":false,"nullable":false},{"name":"request.inputContent","description":"<p> The video data bytes. Encoding: base64. If unset, the input video(s)  should be specified via <code>input_uri</code>. If set, <code>input_uri</code> should be unset.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.videoContext","description":"<p> Additional video context and/or feature-specific parameters.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'VideoContext'\n        })\">VideoContext</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'VideoContext'\n        })\">VideoContext</a></p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.outputUri","description":"<p> Optional location where the output (in JSON format) should be stored.  Currently, only <a href=\"https://cloud.google.com/storage/\">Google Cloud Storage</a>  URIs are supported, which must be specified in the following format:  <code>gs://bucket-id/object-id</code> (other URI formats return  {@link google.rpc.Code.INVALID_ARGUMENT}). For more information, see  <a href=\"https://cloud.google.com/storage/docs/reference-uris\">Request URIs</a>.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.locationId","description":"<p> Optional cloud region where annotation should take place. Supported cloud  regions: <code>us-east1</code>, <code>us-west1</code>, <code>europe-west1</code>, <code>asia-east1</code>. If no region  is specified, a region will be determined based on video file location.</p>","types":["string"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is a <a href=\"https://googleapis.github.io/gax-nodejs/Operation\">gax.Operation</a> object.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is a <a href=\"https://googleapis.github.io/gax-nodejs/Operation\">gax.Operation</a> object. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"videoIntelligenceServiceClient","name":"videoIntelligenceServiceClient","type":"instance","description":"<p>Build a new instance of {@link VideoIntelligenceServiceClient}.</p>","source":"packages\\video-intelligence\\src\\v1beta1\\video_intelligence_service_client.js#L284","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"v1beta1/video_intelligence_service_client.json"}