{"id":"monitoring/v3/doc/doc_common","type":"class","overview":"<p>\n  This class allows you interact with Cloud Monitoring.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/monitoring</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/monitoring</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/monitoring</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/monitoring</code> are outlined in our <a href=\"#/docs/monitoring/v0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js","parent":"monitoring","children":[],"methods":[{"id":"TypedValue","name":"TypedValue","type":"instance","description":"<p>A single strongly-typed value.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js#L47","resources":[],"examples":[],"params":[{"name":"boolValue","description":"<p> A Boolean value: <code>true</code> or <code>false</code>.</p>","types":["boolean"],"optional":false,"nullable":false},{"name":"int64Value","description":"<p> A 64-bit integer. Its range is approximately &plusmn;9.2x10<sup>18</sup>.</p>","types":["number"],"optional":false,"nullable":false},{"name":"doubleValue","description":"<p> A 64-bit double-precision floating-point number. Its magnitude  is approximately &plusmn;10<sup>&plusmn;300</sup> and it has 16  significant digits of precision.</p>","types":["number"],"optional":false,"nullable":false},{"name":"stringValue","description":"<p> A variable-length string value.</p>","types":["string"],"optional":false,"nullable":false},{"name":"distributionValue","description":"<p> A distribution value.</p><p> This object should have the same structure as google.api.Distribution</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"TimeInterval","name":"TimeInterval","type":"instance","description":"<p>A time interval extending just after a start time through an end time. If the start time is the same as the end time, then the interval represents a single point in time.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js#L71","resources":[],"examples":[],"params":[{"name":"endTime","description":"<p> Required. The end of the time interval.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false},{"name":"startTime","description":"<p> Optional. The beginning of the time interval. The default value  for the start time is the end time. The start time must not be  later than the end time.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Aggregation","name":"Aggregation","type":"instance","description":"<p>Describes how to combine multiple time series to provide different views of the data. Aggregation consists of an alignment step on individual time series (<code>per_series_aligner</code>) followed by an optional reduction of the data across different time series (<code>cross_series_reducer</code>). For more details, see <a href=\"https://cloud.google.com/monitoring/api/learn_more#aggregation\">Aggregation</a>.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js#L143","resources":[],"examples":[],"params":[{"name":"alignmentPeriod","description":"<p> The alignment period for per-{@link time series}  alignment. If present, <code>alignmentPeriod</code> must be at least 60  seconds. After per-time series alignment, each time series will  contain data points only on the period boundaries. If  <code>perSeriesAligner</code> is not specified or equals <code>ALIGN_NONE</code>, then  this field is ignored. If <code>perSeriesAligner</code> is specified and  does not equal <code>ALIGN_NONE</code>, then this field must be defined;  otherwise an error is returned.</p><p> This object should have the same structure as google.protobuf.Duration</p>","types":["Object"],"optional":false,"nullable":false},{"name":"perSeriesAligner","description":"<p> The approach to be used to align individual time series. Not all  alignment functions may be applied to all time series, depending  on the metric type and value type of the original time  series. Alignment may change the metric type or the value type of  the time series.</p><p> Time series data must be aligned in order to perform cross-time  series reduction. If <code>crossSeriesReducer</code> is specified, then  <code>perSeriesAligner</code> must be specified and not equal <code>ALIGN_NONE</code>  and <code>alignmentPeriod</code> must be specified; otherwise, an error is  returned.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Aligner'\n        })\">Aligner</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Aligner'\n        })\">Aligner</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"crossSeriesReducer","description":"<p> The approach to be used to combine time series. Not all reducer  functions may be applied to all time series, depending on the  metric type and the value type of the original time  series. Reduction may change the metric type of value type of the  time series.</p><p> Time series data must be aligned in order to perform cross-time  series reduction. If <code>crossSeriesReducer</code> is specified, then  <code>perSeriesAligner</code> must be specified and not equal <code>ALIGN_NONE</code>  and <code>alignmentPeriod</code> must be specified; otherwise, an error is  returned.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Reducer'\n        })\">Reducer</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Reducer'\n        })\">Reducer</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"groupByFields","description":"<p> The set of fields to preserve when <code>crossSeriesReducer</code> is  specified. The <code>groupByFields</code> determine how the time series are  partitioned into subsets prior to applying the aggregation  function. Each subset contains time series that have the same  value for each of the grouping fields. Each individual time  series is a member of exactly one subset. The  <code>crossSeriesReducer</code> is applied to each subset of time series.  It is not possible to reduce across different resource types, so  this field implicitly contains <code>resource.type</code>. Fields not  specified in <code>groupByFields</code> are aggregated away. If  <code>groupByFields</code> is not specified and all the time series have  the same resource type, then the time series are aggregated into  a single output time series. If <code>crossSeriesReducer</code> is not  defined, this field is ignored.</p>","types":["string[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Aligner","name":"Aligner","type":"instance","description":"<p>The Aligner describes how to bring the data points in a single time series into temporal alignment.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js#L152","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"Reducer","name":"Reducer","type":"instance","description":"<p>A Reducer describes how to aggregate data points from multiple time series into a single time series.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_common.js#L309","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}],"path":"doc_common.json"}