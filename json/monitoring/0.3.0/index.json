{"id":"monitoring","type":"class","name":"Monitoring","overview":"<p>\n  This class allows you interact with Cloud Monitoring.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/monitoring</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/monitoring</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/monitoring</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/monitoring</code> are outlined in our <a href=\"#/docs/monitoring/v0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\monitoring\\src\\index.js","parent":null,"children":["monitoring/v3"],"methods":[{"id":"groupV3","name":"groupV3","type":"instance","description":"<p>Create a groupServiceClient with additional helpers for common tasks.</p><p>The Group API lets you inspect and manage your <a href=\"https://cloud.google.comgoogle.monitoring.v3.Group\">groups</a>.</p><p>A group is a named filter that is used to identify a collection of monitored resources. Groups are typically used to mirror the physical and/or logical topology of the environment. Because group membership is computed dynamically, monitored resources that are started in the future are automatically placed in matching groups. By using a group to name monitored resources in, for example, an alert policy, the target of that alert policy is updated automatically as monitored resources are added and removed from the infrastructure.</p>","source":"packages\\monitoring\\src\\index.js#L55","resources":[],"examples":[],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.port","description":"<ul> <li>The port on which to connect to the remote host.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"options.servicePath","description":"<ul> <li>The domain name of the API remote host.</li> </ul> ","types":["string"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"metricV3","name":"metricV3","type":"instance","description":"<p>Create a metricServiceClient with additional helpers for common tasks.</p><p>Manages metric descriptors, monitored resource descriptors, and time series data.</p>","source":"packages\\monitoring\\src\\index.js#L80","resources":[],"examples":[],"params":[{"name":"options","description":"<ul> <li><a href=\"#/docs\">Configuration object</a>.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"options.port","description":"<ul> <li>The port on which to connect to the remote host.</li> </ul> ","types":["number"],"optional":true,"nullable":false},{"name":"options.servicePath","description":"<ul> <li>The domain name of the API remote host.</li> </ul> ","types":["string"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"index.json"}