{"id":"monitoring/v3/doc/doc_group","type":"class","overview":"<p>\n  This class allows you interact with Cloud Monitoring.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/monitoring</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/monitoring</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/monitoring</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/monitoring</code> are outlined in our <a href=\"#/docs/monitoring/v0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\monitoring\\src\\v3\\doc\\doc_group.js","parent":"monitoring","children":[],"methods":[{"id":"Group","name":"Group","type":"instance","description":"<p>The description of a dynamic collection of monitored resources. Each group has a filter that is matched against monitored resources and their associated metadata. If a group&#39;s filter matches an available monitored resource, then that resource is a member of that group. Groups can contain any number of monitored resources, and each monitored resource can be a member of any number of groups.</p><p>Groups can be nested in parent-child hierarchies. The <code>parentName</code> field identifies an optional parent for each group. If a group has a parent, then the only monitored resources available to be matched by the group&#39;s filter are the resources contained in the parent group. In other words, a group contains the monitored resources that match its filter and the filters of all the group&#39;s ancestors. A group without a parent can contain any monitored resource.</p><p>For example, consider an infrastructure running a set of instances with two user-defined tags: <code>&quot;environment&quot;</code> and <code>&quot;role&quot;</code>. A parent group has a filter, <code>environment=&quot;production&quot;</code>. A child of that parent group has a filter, <code>role=&quot;transcoder&quot;</code>. The parent group contains all instances in the production environment, regardless of their roles. The child group contains instances that have the transcoder role <em>and</em> are in the production environment.</p><p>The monitored resources contained in a group can change at any moment, depending on what resources exist and what filters are associated with the group and its ancestors.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_group.js#L75","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Output only. The name of this group. The format is  <code>&quot;projects/{project_id_or_number}/groups/{group_id}&quot;</code>.  When creating a group, this field is ignored and a new name is created  consisting of the project specified in the call to <code>CreateGroup</code>  and a unique <code>{group_id}</code> that is generated automatically.</p>","types":["string"],"optional":false,"nullable":false},{"name":"displayName","description":"<p> A user-assigned name for this group, used only for display purposes.</p>","types":["string"],"optional":false,"nullable":false},{"name":"parentName","description":"<p> The name of the group&#39;s parent, if it has one.  The format is <code>&quot;projects/{project_id_or_number}/groups/{group_id}&quot;</code>.  For groups with no parent, <code>parentName</code> is the empty string, <code>&quot;&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"filter","description":"<p> The filter used to determine which monitored resources belong to this group.</p>","types":["string"],"optional":false,"nullable":false},{"name":"isCluster","description":"<p> If true, the members of this group are considered to be a cluster.  The system can perform additional analysis on groups that are clusters.</p>","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_group.json"}