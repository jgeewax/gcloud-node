{"id":"monitoring/v3/metric_service_client","type":"class","overview":"<p>\n  This class allows you interact with Cloud Monitoring.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/monitoring</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/monitoring</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/monitoring</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/monitoring</code> are outlined in our <a href=\"#/docs/monitoring/v0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\monitoring\\src\\v3\\metric_service_client.js","parent":"monitoring","children":[],"methods":[{"id":"MetricServiceClient","name":"MetricServiceClient","type":"constructor","description":"<p>Manages metric descriptors, monitored resource descriptors, and time series data.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L73","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"projectPath","name":"projectPath","type":"instance","description":"<p>Returns a fully-qualified project resource name string.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L143","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"metricDescriptorPath","name":"metricDescriptorPath","type":"instance","description":"<p>Returns a fully-qualified metric_descriptor resource name string.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L155","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"metricDescriptor","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"monitoredResourceDescriptorPath","name":"monitoredResourceDescriptorPath","type":"instance","description":"<p>Returns a fully-qualified monitored_resource_descriptor resource name string.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L168","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"monitoredResourceDescriptor","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromProjectName","name":"matchProjectFromProjectName","type":"instance","description":"<p>Parses the projectName from a project resource.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L181","resources":[],"examples":[],"params":[{"name":"projectName","description":"<p> A fully-qualified path representing a project resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromMetricDescriptorName","name":"matchProjectFromMetricDescriptorName","type":"instance","description":"<p>Parses the metricDescriptorName from a metric_descriptor resource.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L191","resources":[],"examples":[],"params":[{"name":"metricDescriptorName","description":"<p> A fully-qualified path representing a metric_descriptor resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchMetricDescriptorFromMetricDescriptorName","name":"matchMetricDescriptorFromMetricDescriptorName","type":"instance","description":"<p>Parses the metricDescriptorName from a metric_descriptor resource.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L201","resources":[],"examples":[],"params":[{"name":"metricDescriptorName","description":"<p> A fully-qualified path representing a metric_descriptor resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromMonitoredResourceDescriptorName","name":"matchProjectFromMonitoredResourceDescriptorName","type":"instance","description":"<p>Parses the monitoredResourceDescriptorName from a monitored_resource_descriptor resource.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L211","resources":[],"examples":[],"params":[{"name":"monitoredResourceDescriptorName","description":"<p> A fully-qualified path representing a monitored_resource_descriptor resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchMonitoredResourceDescriptorFromMonitoredResourceDescriptorName","name":"matchMonitoredResourceDescriptorFromMonitoredResourceDescriptorName","type":"instance","description":"<p>Parses the monitoredResourceDescriptorName from a monitored_resource_descriptor resource.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L221","resources":[],"examples":[],"params":[{"name":"monitoredResourceDescriptorName","description":"<p> A fully-qualified path representing a monitored_resource_descriptor resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L230","resources":[],"examples":[],"params":[{"name":"callback","description":"<ul> <li>the callback to be called with the current project Id.</li> </ul> ","types":["function(Error, string)"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"listMonitoredResourceDescriptors","name":"listMonitoredResourceDescriptors","type":"instance","description":"<p>Lists monitored resource descriptors that match a filter. This method does not require a Stackdriver account.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L328","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\n// Iterate over all elements.\nvar formattedName = client.projectPath(\"[PROJECT]\");\n\nclient.listMonitoredResourceDescriptors({name: formattedName}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n})\n.catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar formattedName = client.projectPath(\"[PROJECT]\");\n\n\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listMonitoredResourceDescriptors(nextRequest, options).then(callback);\n    }\n}\nclient.listMonitoredResourceDescriptors({name: formattedName}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> An optional <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">filter</a> describing  the descriptors to be returned. The filter can reference  the descriptor&#39;s type and labels. For example, the  following filter returns only Google Compute Engine descriptors  that have an <code>id</code> label:</p><pre><code> resource.type = starts_with(&quot;gce_&quot;) AND resource.label:id </code></pre>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of google.api.MonitoredResourceDescriptor.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of google.api.MonitoredResourceDescriptor.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of google.api.MonitoredResourceDescriptor in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListMonitoredResourceDescriptorsResponse'\n        })\">ListMonitoredResourceDescriptorsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listMonitoredResourceDescriptorsStream","name":"listMonitoredResourceDescriptorsStream","type":"instance","description":"<p>Equivalent to {@link listMonitoredResourceDescriptors}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listMonitoredResourceDescriptors} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L394","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.projectPath(\"[PROJECT]\");\nclient.listMonitoredResourceDescriptorsStream({name: formattedName})\n.on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.log(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> An optional <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">filter</a> describing  the descriptors to be returned. The filter can reference  the descriptor&#39;s type and labels. For example, the  following filter returns only Google Compute Engine descriptors  that have an <code>id</code> label:</p><pre><code> resource.type = starts_with(&quot;gce_&quot;) AND resource.label:id </code></pre>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing google.api.MonitoredResourceDescriptor on &#39;data&#39; event.</p>"}]},{"id":"getMonitoredResourceDescriptor","name":"getMonitoredResourceDescriptor","type":"instance","description":"<p>Gets a single monitored resource descriptor. This method does not require a Stackdriver account.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L440","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.monitoredResourceDescriptorPath(\"[PROJECT]\", \"[MONITORED_RESOURCE_DESCRIPTOR]\");\nclient.getMonitoredResourceDescriptor({name: formattedName}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The monitored resource descriptor to get. The format is  <code>&quot;projects/{project_id_or_number}/monitoredResourceDescriptors/{resource_type}&quot;</code>.  The <code>{resource_type}</code> is a predefined type, such as  <code>cloudsql_database</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing google.api.MonitoredResourceDescriptor.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing google.api.MonitoredResourceDescriptor. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listMetricDescriptors","name":"listMetricDescriptors","type":"instance","description":"<p>Lists metric descriptors that match a filter. This method does not require a Stackdriver account.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L545","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\n// Iterate over all elements.\nvar formattedName = client.projectPath(\"[PROJECT]\");\n\nclient.listMetricDescriptors({name: formattedName}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n})\n.catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar formattedName = client.projectPath(\"[PROJECT]\");\n\n\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listMetricDescriptors(nextRequest, options).then(callback);\n    }\n}\nclient.listMetricDescriptors({name: formattedName}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> If this field is empty, all custom and  system-defined metric descriptors are returned.  Otherwise, the <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">filter</a>  specifies which metric descriptors are to be  returned. For example, the following filter matches all  <a href=\"https://cloud.google.com/monitoring/custom-metrics\">custom metrics</a>:</p><pre><code> metric.type = starts_with(&quot;custom.googleapis.com/&quot;) </code></pre>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of google.api.MetricDescriptor.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMetricDescriptorsResponse'\n        })\">ListMetricDescriptorsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListMetricDescriptorsResponse'\n        })\">ListMetricDescriptorsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of google.api.MetricDescriptor.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of google.api.MetricDescriptor in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListMetricDescriptorsResponse'\n        })\">ListMetricDescriptorsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListMetricDescriptorsResponse'\n        })\">ListMetricDescriptorsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listMetricDescriptorsStream","name":"listMetricDescriptorsStream","type":"instance","description":"<p>Equivalent to {@link listMetricDescriptors}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listMetricDescriptors} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L612","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.projectPath(\"[PROJECT]\");\nclient.listMetricDescriptorsStream({name: formattedName})\n.on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.log(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> If this field is empty, all custom and  system-defined metric descriptors are returned.  Otherwise, the <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">filter</a>  specifies which metric descriptors are to be  returned. For example, the following filter matches all  <a href=\"https://cloud.google.com/monitoring/custom-metrics\">custom metrics</a>:</p><pre><code> metric.type = starts_with(&quot;custom.googleapis.com/&quot;) </code></pre>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing google.api.MetricDescriptor on &#39;data&#39; event.</p>"}]},{"id":"getMetricDescriptor","name":"getMetricDescriptor","type":"instance","description":"<p>Gets a single metric descriptor. This method does not require a Stackdriver account.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L658","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.metricDescriptorPath(\"[PROJECT]\", \"[METRIC_DESCRIPTOR]\");\nclient.getMetricDescriptor({name: formattedName}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The metric descriptor on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}/metricDescriptors/{metric_id}&quot;</code>.  An example value of <code>{metric_id}</code> is  <code>&quot;compute.googleapis.com/instance/disk/read_bytes_count&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing google.api.MetricDescriptor.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing google.api.MetricDescriptor. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"createMetricDescriptor","name":"createMetricDescriptor","type":"instance","description":"<p>Creates a new metric descriptor. User-created metric descriptors define <a href=\"https://cloud.google.com/monitoring/custom-metrics\">custom metrics</a>.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L718","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.projectPath(\"[PROJECT]\");\nvar metricDescriptor = {};\nvar request = {\n    name: formattedName,\n    metricDescriptor: metricDescriptor\n};\nclient.createMetricDescriptor(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n})\n.catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.metricDescriptor","description":"<p> The new <a href=\"https://cloud.google.com/monitoring/custom-metrics\">custom metric</a>  descriptor.</p><p> This object should have the same structure as google.api.MetricDescriptor</p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing google.api.MetricDescriptor.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing google.api.MetricDescriptor. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"deleteMetricDescriptor","name":"deleteMetricDescriptor","type":"instance","description":"<p>Deletes a metric descriptor. Only user-created <a href=\"https://cloud.google.com/monitoring/custom-metrics\">custom metrics</a> can be deleted.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L762","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.metricDescriptorPath(\"[PROJECT]\", \"[METRIC_DESCRIPTOR]\");\nclient.deleteMetricDescriptor({name: formattedName}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The metric descriptor on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}/metricDescriptors/{metric_id}&quot;</code>.  An example of <code>{metric_id}</code> is:  <code>&quot;custom.googleapis.com/my_test_metric&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listTimeSeries","name":"listTimeSeries","type":"instance","description":"<p>Lists time series that match a filter. This method does not require a Stackdriver account.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L904","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\n// Iterate over all elements.\nvar formattedName = client.projectPath(\"[PROJECT]\");\nvar filter = '';\nvar interval = {};\nvar view = monitoring.v3.types.ListTimeSeriesRequest.TimeSeriesView.FULL;\nvar request = {\n    name: formattedName,\n    filter: filter,\n    interval: interval,\n    view: view\n};\n\nclient.listTimeSeries(request).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n})\n.catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar formattedName = client.projectPath(\"[PROJECT]\");\nvar filter = '';\nvar interval = {};\nvar view = monitoring.v3.types.ListTimeSeriesRequest.TimeSeriesView.FULL;\nvar request = {\n    name: formattedName,\n    filter: filter,\n    interval: interval,\n    view: view\n};\n\n\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listTimeSeries(nextRequest, options).then(callback);\n    }\n}\nclient.listTimeSeries(request, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  &quot;projects/{project_id_or_number}&quot;.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> A <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a> that specifies which time  series should be returned. The filter must specify a single metric type,  and can additionally specify metric labels and other information. For  example:</p><pre><code> metric.type = &quot;compute.googleapis.com/instance/cpu/usage_time&quot; AND metric.label.instance_name = &quot;my-instance-name&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.interval","description":"<p> The time interval for which results should be returned. Only time series  that contain data points in the specified interval are included  in the response.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.view","description":"<p> Specifies which information is returned about the time series.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeriesView'\n        })\">TimeSeriesView</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeriesView'\n        })\">TimeSeriesView</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"request.aggregation","description":"<p> By default, the raw time series data is returned.  Use this field to combine multiple time series for different  views of the data.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Aggregation'\n        })\">Aggregation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Aggregation'\n        })\">Aggregation</a></p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.orderBy","description":"<p> Specifies the order in which the points of the time series should  be returned. By default, results are not ordered. Currently,  this field must be left blank.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListTimeSeriesResponse'\n        })\">ListTimeSeriesResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListTimeSeriesResponse'\n        })\">ListTimeSeriesResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a> in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListTimeSeriesResponse'\n        })\">ListTimeSeriesResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListTimeSeriesResponse'\n        })\">ListTimeSeriesResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listTimeSeriesStream","name":"listTimeSeriesStream","type":"instance","description":"<p>Equivalent to {@link listTimeSeries}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listTimeSeries} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L999","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.projectPath(\"[PROJECT]\");\nvar filter = '';\nvar interval = {};\nvar view = monitoring.v3.types.ListTimeSeriesRequest.TimeSeriesView.FULL;\nvar request = {\n    name: formattedName,\n    filter: filter,\n    interval: interval,\n    view: view\n};\nclient.listTimeSeriesStream(request)\n.on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.log(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  &quot;projects/{project_id_or_number}&quot;.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.filter","description":"<p> A <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a> that specifies which time  series should be returned. The filter must specify a single metric type,  and can additionally specify metric labels and other information. For  example:</p><pre><code> metric.type = &quot;compute.googleapis.com/instance/cpu/usage_time&quot; AND metric.label.instance_name = &quot;my-instance-name&quot; </code></pre>","types":["string"],"optional":false,"nullable":false},{"name":"request.interval","description":"<p> The time interval for which results should be returned. Only time series  that contain data points in the specified interval are included  in the response.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.view","description":"<p> Specifies which information is returned about the time series.</p><p> The number should be among the values of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeriesView'\n        })\">TimeSeriesView</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeriesView'\n        })\">TimeSeriesView</a></p>","types":["number"],"optional":false,"nullable":false},{"name":"request.aggregation","description":"<p> By default, the raw time series data is returned.  Use this field to combine multiple time series for different  views of the data.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Aggregation'\n        })\">Aggregation</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Aggregation'\n        })\">Aggregation</a></p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.orderBy","description":"<p> Specifies the order in which the points of the time series should  be returned. By default, results are not ordered. Currently,  this field must be left blank.</p>","types":["string"],"optional":true,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a> on &#39;data&#39; event.</p>"}]},{"id":"createTimeSeries","name":"createTimeSeries","type":"instance","description":"<p>Creates or adds data to one or more time series. The response is empty if all time series in the request were written. If any time series could not be written, a corresponding failure message is included in the error response.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L1052","resources":[],"examples":[{"code":"\nvar monitoring = require('@google-cloud/monitoring');\n\nvar client = monitoring.v3.metric({\n  // optional auth parameters.\n});\n\nvar formattedName = client.projectPath(\"[PROJECT]\");\nvar timeSeries = [];\nvar request = {\n    name: formattedName,\n    timeSeries: timeSeries\n};\nclient.createTimeSeries(request).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The project on which to execute the request. The format is  <code>&quot;projects/{project_id_or_number}&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.timeSeries","description":"<p> The new data to be added to a list of time series.  Adds at most one data point to each of several time series. The new data  point must be more recent than any other point in its time series. Each  <code>TimeSeries</code> value must fully specify a unique time series by supplying  all label values for the metric and the monitored resource.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeSeries'\n        })\">TimeSeries</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"metricServiceClient","name":"metricServiceClient","type":"instance","description":"<p>Build a new instance of {@link MetricServiceClient}.</p>","source":"packages\\monitoring\\src\\v3\\metric_service_client.js#L1090","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"metric_service_client.json"}