{"id":"monitoring/v3/doc/doc_metric","type":"class","overview":"<p>\n  This class allows you interact with Cloud Monitoring.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/monitoring</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/monitoring</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/monitoring</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar monitoring = require('@google-cloud/monitoring')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/monitoring</code> are outlined in our <a href=\"#/docs/monitoring/v0.3.0/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\monitoring\\src\\v3\\doc\\doc_metric.js","parent":"monitoring","children":[],"methods":[{"id":"Point","name":"Point","type":"instance","description":"<p>A single data point in a time series.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_metric.js#L45","resources":[],"examples":[],"params":[{"name":"interval","description":"<p> The time interval to which the data point applies. For GAUGE metrics, only  the end time of the interval is used. For DELTA metrics, the start and end  time should specify a non-zero interval, with subsequent points specifying  contiguous and non-overlapping intervals. For CUMULATIVE metrics, the  start and end time should specify a non-zero interval, with subsequent  points specifying the same start time and increasing end times, until an  event resets the cumulative value to zero and sets a new start time for the  following points.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TimeInterval'\n        })\">TimeInterval</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"value","description":"<p> The value of the data point.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TypedValue'\n        })\">TypedValue</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TypedValue'\n        })\">TypedValue</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"TimeSeries","name":"TimeSeries","type":"instance","description":"<p>A collection of data points that describes the time-varying values of a metric. A time series is identified by a combination of a fully-specified monitored resource and a fully-specified metric. This type is used for both listing and creating time series.</p>","source":"packages\\monitoring\\src\\v3\\doc\\doc_metric.js#L105","resources":[],"examples":[],"params":[{"name":"metric","description":"<p> The associated metric. A fully-specified metric used to identify the time  series.</p><p> This object should have the same structure as google.api.Metric</p>","types":["Object"],"optional":false,"nullable":false},{"name":"resource","description":"<p> The associated resource. A fully-specified monitored resource used to  identify the time series.</p><p> This object should have the same structure as google.api.MonitoredResource</p>","types":["Object"],"optional":false,"nullable":false},{"name":"metricKind","description":"<p> The metric kind of the time series. When listing time series, this metric  kind might be different from the metric kind of the associated metric if  this time series is an alignment or reduction of other time series.</p><p> When creating a time series, this field is optional. If present, it must be  the same as the metric kind of the associated metric. If the associated  metric&#39;s descriptor must be auto-created, then this field specifies the  metric kind of the new descriptor and must be either <code>GAUGE</code> (the default)  or <code>CUMULATIVE</code>.</p><p> The number should be among the values of google.api.MetricDescriptor.MetricKind</p>","types":["number"],"optional":false,"nullable":false},{"name":"valueType","description":"<p> The value type of the time series. When listing time series, this value  type might be different from the value type of the associated metric if  this time series is an alignment or reduction of other time series.</p><p> When creating a time series, this field is optional. If present, it must be  the same as the type of the data in the <code>points</code> field.</p><p> The number should be among the values of google.api.MetricDescriptor.ValueType</p>","types":["number"],"optional":false,"nullable":false},{"name":"points","description":"<p> The data points of this time series. When listing time series, the order of  the points is specified by the list method.</p><p> When creating a time series, this field must contain exactly one point and  the point&#39;s type must be the same as the value type of the associated  metric. If the associated metric&#39;s descriptor must be auto-created, then  the value type of the descriptor is determined by the point&#39;s type, which  must be <code>BOOL</code>, <code>INT64</code>, <code>DOUBLE</code>, or <code>DISTRIBUTION</code>.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Point'\n        })\">Point</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Point'\n        })\">Point</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}],"path":"doc_metric.json"}